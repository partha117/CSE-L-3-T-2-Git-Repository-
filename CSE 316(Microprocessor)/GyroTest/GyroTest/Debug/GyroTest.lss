
GyroTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001e50  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003e  00800060  00001e50  00001ee4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000044  0080009e  0080009e  00001f22  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f22  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001f80  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00001fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001af9  00000000  00000000  0000210c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b3b  00000000  00000000  00003c05  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d71  00000000  00000000  00004740  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000574  00000000  00000000  000054b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000714  00000000  00000000  00005a28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e08  00000000  00000000  0000613c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  00007f44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 30 09 	jmp	0x1260	; 0x1260 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e5       	ldi	r30, 0x50	; 80
      68:	fe e1       	ldi	r31, 0x1E	; 30
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 39       	cpi	r26, 0x9E	; 158
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ae e9       	ldi	r26, 0x9E	; 158
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a2 3e       	cpi	r26, 0xE2	; 226
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <main>
      8a:	0c 94 26 0f 	jmp	0x1e4c	; 0x1e4c <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <uart_putchar>:
	if((val>=0)&&(val<16))
	{
		return 1;
	}
	return 0;
}
      92:	cf 93       	push	r28
      94:	c8 2f       	mov	r28, r24
      96:	8a 30       	cpi	r24, 0x0A	; 10
      98:	19 f4       	brne	.+6      	; 0xa0 <uart_putchar+0xe>
      9a:	8d e0       	ldi	r24, 0x0D	; 13
      9c:	0e 94 49 00 	call	0x92	; 0x92 <uart_putchar>
      a0:	5d 9b       	sbis	0x0b, 5	; 11
      a2:	fe cf       	rjmp	.-4      	; 0xa0 <uart_putchar+0xe>
      a4:	cc b9       	out	0x0c, r28	; 12
      a6:	cf 91       	pop	r28
      a8:	08 95       	ret

000000aa <uart_getchar>:
      aa:	5f 9b       	sbis	0x0b, 7	; 11
      ac:	fe cf       	rjmp	.-4      	; 0xaa <uart_getchar>
      ae:	8c b1       	in	r24, 0x0c	; 12
      b0:	08 95       	ret

000000b2 <uart_init>:
      b2:	10 bc       	out	0x20, r1	; 32
      b4:	8c e0       	ldi	r24, 0x0C	; 12
      b6:	89 b9       	out	0x09, r24	; 9
      b8:	59 9a       	sbi	0x0b, 1	; 11
      ba:	86 e8       	ldi	r24, 0x86	; 134
      bc:	80 bd       	out	0x20, r24	; 32
      be:	88 e1       	ldi	r24, 0x18	; 24
      c0:	8a b9       	out	0x0a, r24	; 10
      c2:	08 95       	ret

000000c4 <calcPosition>:
void calcPosition()
{
      c4:	ef 92       	push	r14
      c6:	ff 92       	push	r15
      c8:	0f 93       	push	r16
      ca:	1f 93       	push	r17
	mpu6050_getRawData(&ax, &ay, &az, &gx, &gy, &gz);
      cc:	0f 2e       	mov	r0, r31
      ce:	fa ea       	ldi	r31, 0xAA	; 170
      d0:	ef 2e       	mov	r14, r31
      d2:	f0 e0       	ldi	r31, 0x00	; 0
      d4:	ff 2e       	mov	r15, r31
      d6:	f0 2d       	mov	r31, r0
      d8:	0c ea       	ldi	r16, 0xAC	; 172
      da:	10 e0       	ldi	r17, 0x00	; 0
      dc:	2e ea       	ldi	r18, 0xAE	; 174
      de:	30 e0       	ldi	r19, 0x00	; 0
      e0:	40 eb       	ldi	r20, 0xB0	; 176
      e2:	50 e0       	ldi	r21, 0x00	; 0
      e4:	62 eb       	ldi	r22, 0xB2	; 178
      e6:	70 e0       	ldi	r23, 0x00	; 0
      e8:	84 eb       	ldi	r24, 0xB4	; 180
      ea:	90 e0       	ldi	r25, 0x00	; 0
      ec:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <mpu6050_getRawData>
	xVal=(ax/2048);
      f0:	20 91 b4 00 	lds	r18, 0x00B4	; 0x8000b4 <ax>
      f4:	30 91 b5 00 	lds	r19, 0x00B5	; 0x8000b5 <ax+0x1>
      f8:	33 23       	and	r19, r19
      fa:	14 f4       	brge	.+4      	; 0x100 <calcPosition+0x3c>
      fc:	21 50       	subi	r18, 0x01	; 1
      fe:	38 4f       	sbci	r19, 0xF8	; 248
     100:	83 2f       	mov	r24, r19
     102:	85 95       	asr	r24
     104:	85 95       	asr	r24
     106:	85 95       	asr	r24
     108:	93 2f       	mov	r25, r19
     10a:	99 0f       	add	r25, r25
     10c:	99 0b       	sbc	r25, r25
     10e:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <xVal+0x1>
     112:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <xVal>
	yVal=(ay/2048);
     116:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <ay>
     11a:	50 91 b3 00 	lds	r21, 0x00B3	; 0x8000b3 <ay+0x1>
     11e:	55 23       	and	r21, r21
     120:	14 f4       	brge	.+4      	; 0x126 <calcPosition+0x62>
     122:	41 50       	subi	r20, 0x01	; 1
     124:	58 4f       	sbci	r21, 0xF8	; 248
     126:	25 2f       	mov	r18, r21
     128:	25 95       	asr	r18
     12a:	25 95       	asr	r18
     12c:	25 95       	asr	r18
     12e:	35 2f       	mov	r19, r21
     130:	33 0f       	add	r19, r19
     132:	33 0b       	sbc	r19, r19
     134:	30 93 a3 00 	sts	0x00A3, r19	; 0x8000a3 <yVal+0x1>
     138:	20 93 a2 00 	sts	0x00A2, r18	; 0x8000a2 <yVal>
	//printf(" yval %d ay %d\n",yVal,ay);
	if((xVal!=xPos)||(yVal!=yPos))
     13c:	40 91 a8 00 	lds	r20, 0x00A8	; 0x8000a8 <xPos>
     140:	50 91 a9 00 	lds	r21, 0x00A9	; 0x8000a9 <xPos+0x1>
     144:	84 17       	cp	r24, r20
     146:	95 07       	cpc	r25, r21
     148:	41 f4       	brne	.+16     	; 0x15a <calcPosition+0x96>
     14a:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <yPos>
     14e:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <yPos+0x1>
     152:	28 17       	cp	r18, r24
     154:	39 07       	cpc	r19, r25
     156:	01 f5       	brne	.+64     	; 0x198 <calcPosition+0xd4>
     158:	42 c0       	rjmp	.+132    	; 0x1de <calcPosition+0x11a>
	{
		if(xVal>xPos)
     15a:	48 17       	cp	r20, r24
     15c:	59 07       	cpc	r21, r25
     15e:	6c f4       	brge	.+26     	; 0x17a <calcPosition+0xb6>
		{
			
			if(boundary(8-xPos-1))
     160:	87 e0       	ldi	r24, 0x07	; 7
     162:	90 e0       	ldi	r25, 0x00	; 0
     164:	84 1b       	sub	r24, r20
     166:	95 0b       	sbc	r25, r21
     168:	40 97       	sbiw	r24, 0x10	; 16
     16a:	b0 f4       	brcc	.+44     	; 0x198 <calcPosition+0xd4>
			{
				xPos++;
     16c:	4f 5f       	subi	r20, 0xFF	; 255
     16e:	5f 4f       	sbci	r21, 0xFF	; 255
     170:	50 93 a9 00 	sts	0x00A9, r21	; 0x8000a9 <xPos+0x1>
     174:	40 93 a8 00 	sts	0x00A8, r20	; 0x8000a8 <xPos>
     178:	0f c0       	rjmp	.+30     	; 0x198 <calcPosition+0xd4>
			}
			//printf("Current x: %d xval %d\n",xPos,xVal);
		}
		else if(xVal<xPos)
     17a:	84 17       	cp	r24, r20
     17c:	95 07       	cpc	r25, r21
     17e:	64 f4       	brge	.+24     	; 0x198 <calcPosition+0xd4>
		{
			
			if(boundary(8-xPos+1))
     180:	89 e0       	ldi	r24, 0x09	; 9
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	84 1b       	sub	r24, r20
     186:	95 0b       	sbc	r25, r21
     188:	40 97       	sbiw	r24, 0x10	; 16
     18a:	30 f4       	brcc	.+12     	; 0x198 <calcPosition+0xd4>
			{
				xPos--;
     18c:	41 50       	subi	r20, 0x01	; 1
     18e:	51 09       	sbc	r21, r1
     190:	50 93 a9 00 	sts	0x00A9, r21	; 0x8000a9 <xPos+0x1>
     194:	40 93 a8 00 	sts	0x00A8, r20	; 0x8000a8 <xPos>
			}
			//printf("Current x: %d xval %d\n",xPos,xVal);
		}
		if(yVal>yPos)
     198:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <yPos>
     19c:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <yPos+0x1>
     1a0:	82 17       	cp	r24, r18
     1a2:	93 07       	cpc	r25, r19
     1a4:	6c f4       	brge	.+26     	; 0x1c0 <calcPosition+0xfc>
		{
			if(boundary(8-yPos-1))
     1a6:	27 e0       	ldi	r18, 0x07	; 7
     1a8:	30 e0       	ldi	r19, 0x00	; 0
     1aa:	28 1b       	sub	r18, r24
     1ac:	39 0b       	sbc	r19, r25
     1ae:	20 31       	cpi	r18, 0x10	; 16
     1b0:	31 05       	cpc	r19, r1
     1b2:	a8 f4       	brcc	.+42     	; 0x1de <calcPosition+0x11a>
			{
				yPos++;
     1b4:	01 96       	adiw	r24, 0x01	; 1
     1b6:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <yPos+0x1>
     1ba:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <yPos>
     1be:	0f c0       	rjmp	.+30     	; 0x1de <calcPosition+0x11a>
			}
			//printf("Current : %d\n",yPos);
		}
		else if(yVal<yPos)
     1c0:	28 17       	cp	r18, r24
     1c2:	39 07       	cpc	r19, r25
     1c4:	64 f4       	brge	.+24     	; 0x1de <calcPosition+0x11a>
		{
			if(boundary(8-yPos+1))
     1c6:	29 e0       	ldi	r18, 0x09	; 9
     1c8:	30 e0       	ldi	r19, 0x00	; 0
     1ca:	28 1b       	sub	r18, r24
     1cc:	39 0b       	sbc	r19, r25
     1ce:	20 31       	cpi	r18, 0x10	; 16
     1d0:	31 05       	cpc	r19, r1
     1d2:	28 f4       	brcc	.+10     	; 0x1de <calcPosition+0x11a>
			{
				yPos--;
     1d4:	01 97       	sbiw	r24, 0x01	; 1
     1d6:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <yPos+0x1>
     1da:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <yPos>
			
			//printf("Current x: %d\n",yPos);
		}
		//printf("Current Position: X %d ::y %d\n",xPos,yPos);
	}
}
     1de:	1f 91       	pop	r17
     1e0:	0f 91       	pop	r16
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	08 95       	ret

000001e8 <main>:
void calcPosition(void);
unsigned char checkCollision(int x,int y);
int main(void)
{
    /* Replace with your application code */
    mpu6050_init();
     1e8:	0e 94 bc 02 	call	0x578	; 0x578 <mpu6050_init>
	uart_init();
     1ec:	0e 94 59 00 	call	0xb2	; 0xb2 <uart_init>
	stdout = &uart_output;
     1f0:	ec ed       	ldi	r30, 0xDC	; 220
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	8e e6       	ldi	r24, 0x6E	; 110
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	93 83       	std	Z+3, r25	; 0x03
     1fa:	82 83       	std	Z+2, r24	; 0x02
	stdin  = &uart_input;
     1fc:	80 e6       	ldi	r24, 0x60	; 96
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	91 83       	std	Z+1, r25	; 0x01
     202:	80 83       	st	Z, r24
	DDRB=0xFF;
     204:	8f ef       	ldi	r24, 0xFF	; 255
     206:	87 bb       	out	0x17, r24	; 23
	PORTB=0x00;
     208:	18 ba       	out	0x18, r1	; 24
	xPos=playerPositionX;
     20a:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <playerPositionX>
     20e:	90 91 a1 00 	lds	r25, 0x00A1	; 0x8000a1 <playerPositionX+0x1>
     212:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <xPos+0x1>
     216:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <xPos>
	yPos=playerPositionY;
     21a:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <__data_end>
     21e:	90 91 9f 00 	lds	r25, 0x009F	; 0x80009f <__data_end+0x1>
     222:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <yPos+0x1>
     226:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <yPos>
	int  tempX,tempY=0;
	while(1)
	{
		    calcPosition();
			tempX=8-xPos;
     22a:	68 94       	set
     22c:	cc 24       	eor	r12, r12
     22e:	c3 f8       	bld	r12, 3
     230:	d1 2c       	mov	r13, r1
			tempY=8-yPos;
			
			if(playerPositionX!=tempX)
			{
				printf("portb %d\n",PORTB);
     232:	0f 2e       	mov	r0, r31
     234:	f0 e8       	ldi	r31, 0x80	; 128
     236:	af 2e       	mov	r10, r31
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	bf 2e       	mov	r11, r31
     23c:	f0 2d       	mov	r31, r0
				}
				playerPositionX=tempX;
				playerPositionY=tempY;
			}
			
		printf("player X: %d Y: %d\n",playerPositionX,playerPositionY);
     23e:	0f 2e       	mov	r0, r31
     240:	fa e8       	ldi	r31, 0x8A	; 138
     242:	ef 2e       	mov	r14, r31
     244:	f0 e0       	ldi	r31, 0x00	; 0
     246:	ff 2e       	mov	r15, r31
     248:	f0 2d       	mov	r31, r0
	xPos=playerPositionX;
	yPos=playerPositionY;
	int  tempX,tempY=0;
	while(1)
	{
		    calcPosition();
     24a:	0e 94 62 00 	call	0xc4	; 0xc4 <calcPosition>
			tempX=8-xPos;
     24e:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <xPos>
     252:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <xPos+0x1>
     256:	86 01       	movw	r16, r12
     258:	08 1b       	sub	r16, r24
     25a:	19 0b       	sbc	r17, r25
			tempY=8-yPos;
     25c:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <yPos>
     260:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <yPos+0x1>
     264:	e6 01       	movw	r28, r12
     266:	c8 1b       	sub	r28, r24
     268:	d9 0b       	sbc	r29, r25
			
			if(playerPositionX!=tempX)
     26a:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <playerPositionX>
     26e:	90 91 a1 00 	lds	r25, 0x00A1	; 0x8000a1 <playerPositionX+0x1>
     272:	08 17       	cp	r16, r24
     274:	19 07       	cpc	r17, r25
     276:	d1 f0       	breq	.+52     	; 0x2ac <main+0xc4>
			{
				printf("portb %d\n",PORTB);
     278:	88 b3       	in	r24, 0x18	; 24
     27a:	1f 92       	push	r1
     27c:	8f 93       	push	r24
     27e:	bf 92       	push	r11
     280:	af 92       	push	r10
     282:	0e 94 48 0c 	call	0x1890	; 0x1890 <printf>
				if(PORTB&(1<<PB0))
     286:	0f 90       	pop	r0
     288:	0f 90       	pop	r0
     28a:	0f 90       	pop	r0
     28c:	0f 90       	pop	r0
     28e:	c0 9b       	sbis	0x18, 0	; 24
     290:	02 c0       	rjmp	.+4      	; 0x296 <main+0xae>
				{
					PORTB=PORTB&(~(1<<PB0));
     292:	c0 98       	cbi	0x18, 0	; 24
     294:	01 c0       	rjmp	.+2      	; 0x298 <main+0xb0>
					
				}
				else
				{
					PORTB=PORTB|(1<<PB0);
     296:	c0 9a       	sbi	0x18, 0	; 24
				}
				if(tempX>playerPositionX)
     298:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <playerPositionX>
     29c:	90 91 a1 00 	lds	r25, 0x00A1	; 0x8000a1 <playerPositionX+0x1>
     2a0:	80 17       	cp	r24, r16
     2a2:	91 07       	cpc	r25, r17
     2a4:	14 f4       	brge	.+4      	; 0x2aa <main+0xc2>
				{
					PORTB=PORTB&(~(1<<PB1));
     2a6:	c1 98       	cbi	0x18, 1	; 24
     2a8:	01 c0       	rjmp	.+2      	; 0x2ac <main+0xc4>
				}
				else
				{
					PORTB=PORTB|(1<<PB0);
     2aa:	c0 9a       	sbi	0x18, 0	; 24
				}
			}
			if(playerPositionY!=tempY)
     2ac:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <__data_end>
     2b0:	90 91 9f 00 	lds	r25, 0x009F	; 0x80009f <__data_end+0x1>
     2b4:	c8 17       	cp	r28, r24
     2b6:	d9 07       	cpc	r29, r25
     2b8:	b9 f0       	breq	.+46     	; 0x2e8 <main+0x100>
			{
				if(PORTB&(1<<PB2))
     2ba:	c2 9b       	sbis	0x18, 2	; 24
     2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <main+0xda>
				{
					PORTB=PORTB&(~(1<<PB2));
     2be:	c2 98       	cbi	0x18, 2	; 24
     2c0:	01 c0       	rjmp	.+2      	; 0x2c4 <main+0xdc>
				}
				else
				{
					PORTB=PORTB|(1<<PB2);
     2c2:	c2 9a       	sbi	0x18, 2	; 24
				}
				if(tempY>playerPositionY)
     2c4:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <__data_end>
     2c8:	90 91 9f 00 	lds	r25, 0x009F	; 0x80009f <__data_end+0x1>
     2cc:	8c 17       	cp	r24, r28
     2ce:	9d 07       	cpc	r25, r29
     2d0:	14 f4       	brge	.+4      	; 0x2d6 <main+0xee>
				{
					PORTB=PORTB&(~(1<<PB3));
     2d2:	c3 98       	cbi	0x18, 3	; 24
     2d4:	01 c0       	rjmp	.+2      	; 0x2d8 <main+0xf0>
				}
				else
				{
					PORTB=PORTB|(1<<PB3);
     2d6:	c3 9a       	sbi	0x18, 3	; 24
				}
				playerPositionX=tempX;
     2d8:	10 93 a1 00 	sts	0x00A1, r17	; 0x8000a1 <playerPositionX+0x1>
     2dc:	00 93 a0 00 	sts	0x00A0, r16	; 0x8000a0 <playerPositionX>
				playerPositionY=tempY;
     2e0:	d0 93 9f 00 	sts	0x009F, r29	; 0x80009f <__data_end+0x1>
     2e4:	c0 93 9e 00 	sts	0x009E, r28	; 0x80009e <__data_end>
			}
			
		printf("player X: %d Y: %d\n",playerPositionX,playerPositionY);
     2e8:	80 91 9f 00 	lds	r24, 0x009F	; 0x80009f <__data_end+0x1>
     2ec:	8f 93       	push	r24
     2ee:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <__data_end>
     2f2:	8f 93       	push	r24
     2f4:	80 91 a1 00 	lds	r24, 0x00A1	; 0x8000a1 <playerPositionX+0x1>
     2f8:	8f 93       	push	r24
     2fa:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <playerPositionX>
     2fe:	8f 93       	push	r24
     300:	ff 92       	push	r15
     302:	ef 92       	push	r14
     304:	0e 94 48 0c 	call	0x1890	; 0x1890 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     308:	2f e9       	ldi	r18, 0x9F	; 159
     30a:	86 e8       	ldi	r24, 0x86	; 134
     30c:	91 e0       	ldi	r25, 0x01	; 1
     30e:	21 50       	subi	r18, 0x01	; 1
     310:	80 40       	sbci	r24, 0x00	; 0
     312:	90 40       	sbci	r25, 0x00	; 0
     314:	e1 f7       	brne	.-8      	; 0x30e <main+0x126>
     316:	00 c0       	rjmp	.+0      	; 0x318 <main+0x130>
     318:	00 00       	nop
     31a:	0f 90       	pop	r0
     31c:	0f 90       	pop	r0
     31e:	0f 90       	pop	r0
     320:	0f 90       	pop	r0
     322:	0f 90       	pop	r0
     324:	0f 90       	pop	r0
     326:	91 cf       	rjmp	.-222    	; 0x24a <main+0x62>

00000328 <mpu6050_readBytes>:
    *azg = (double)(az)/MPU6050_AGAIN;
    *gxds = (double)(gx)/MPU6050_GGAIN;
	*gyds = (double)(gy)/MPU6050_GGAIN;
	*gzds = (double)(gz)/MPU6050_GGAIN;
	#endif
}
     328:	af 92       	push	r10
     32a:	bf 92       	push	r11
     32c:	cf 92       	push	r12
     32e:	df 92       	push	r13
     330:	ff 92       	push	r15
     332:	0f 93       	push	r16
     334:	1f 93       	push	r17
     336:	cf 93       	push	r28
     338:	df 93       	push	r29
     33a:	66 23       	and	r22, r22
     33c:	b9 f1       	breq	.+110    	; 0x3ac <mpu6050_readBytes+0x84>
     33e:	c5 2f       	mov	r28, r21
     340:	d4 2f       	mov	r29, r20
     342:	f6 2e       	mov	r15, r22
     344:	18 2f       	mov	r17, r24
     346:	80 ed       	ldi	r24, 0xD0	; 208
     348:	0e 94 58 09 	call	0x12b0	; 0x12b0 <i2c_start>
     34c:	81 2f       	mov	r24, r17
     34e:	0e 94 a2 09 	call	0x1344	; 0x1344 <i2c_write>
     352:	83 e0       	ldi	r24, 0x03	; 3
     354:	8a 95       	dec	r24
     356:	f1 f7       	brne	.-4      	; 0x354 <mpu6050_readBytes+0x2c>
     358:	00 00       	nop
     35a:	81 ed       	ldi	r24, 0xD1	; 209
     35c:	0e 94 58 09 	call	0x12b0	; 0x12b0 <i2c_start>
     360:	0d 2f       	mov	r16, r29
     362:	1c 2f       	mov	r17, r28
     364:	cc 24       	eor	r12, r12
     366:	ca 94       	dec	r12
     368:	cf 0c       	add	r12, r15
     36a:	d1 2c       	mov	r13, r1
     36c:	ef ef       	ldi	r30, 0xFF	; 255
     36e:	ce 1a       	sub	r12, r30
     370:	de 0a       	sbc	r13, r30
     372:	c0 e0       	ldi	r28, 0x00	; 0
     374:	d0 e0       	ldi	r29, 0x00	; 0
     376:	af 2c       	mov	r10, r15
     378:	b1 2c       	mov	r11, r1
     37a:	f1 e0       	ldi	r31, 0x01	; 1
     37c:	af 1a       	sub	r10, r31
     37e:	b1 08       	sbc	r11, r1
     380:	ac 16       	cp	r10, r28
     382:	bd 06       	cpc	r11, r29
     384:	29 f4       	brne	.+10     	; 0x390 <mpu6050_readBytes+0x68>
     386:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <i2c_readNak>
     38a:	f8 01       	movw	r30, r16
     38c:	80 83       	st	Z, r24
     38e:	04 c0       	rjmp	.+8      	; 0x398 <mpu6050_readBytes+0x70>
     390:	0e 94 be 09 	call	0x137c	; 0x137c <i2c_readAck>
     394:	f8 01       	movw	r30, r16
     396:	80 83       	st	Z, r24
     398:	21 96       	adiw	r28, 0x01	; 1
     39a:	0f 5f       	subi	r16, 0xFF	; 255
     39c:	1f 4f       	sbci	r17, 0xFF	; 255
     39e:	cc 15       	cp	r28, r12
     3a0:	dd 05       	cpc	r29, r13
     3a2:	71 f7       	brne	.-36     	; 0x380 <mpu6050_readBytes+0x58>
     3a4:	cf 2d       	mov	r28, r15
     3a6:	0e 94 95 09 	call	0x132a	; 0x132a <i2c_stop>
     3aa:	01 c0       	rjmp	.+2      	; 0x3ae <mpu6050_readBytes+0x86>
     3ac:	c0 e0       	ldi	r28, 0x00	; 0
     3ae:	8c 2f       	mov	r24, r28
     3b0:	df 91       	pop	r29
     3b2:	cf 91       	pop	r28
     3b4:	1f 91       	pop	r17
     3b6:	0f 91       	pop	r16
     3b8:	ff 90       	pop	r15
     3ba:	df 90       	pop	r13
     3bc:	cf 90       	pop	r12
     3be:	bf 90       	pop	r11
     3c0:	af 90       	pop	r10
     3c2:	08 95       	ret

000003c4 <mpu6050_readByte>:
     3c4:	ab 01       	movw	r20, r22
     3c6:	61 e0       	ldi	r22, 0x01	; 1
     3c8:	0e 94 94 01 	call	0x328	; 0x328 <mpu6050_readBytes>
     3cc:	08 95       	ret

000003ce <mpu6050_writeBytes>:
     3ce:	ef 92       	push	r14
     3d0:	ff 92       	push	r15
     3d2:	0f 93       	push	r16
     3d4:	1f 93       	push	r17
     3d6:	cf 93       	push	r28
     3d8:	df 93       	push	r29
     3da:	66 23       	and	r22, r22
     3dc:	d1 f0       	breq	.+52     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     3de:	7a 01       	movw	r14, r20
     3e0:	16 2f       	mov	r17, r22
     3e2:	c8 2f       	mov	r28, r24
     3e4:	80 ed       	ldi	r24, 0xD0	; 208
     3e6:	0e 94 58 09 	call	0x12b0	; 0x12b0 <i2c_start>
     3ea:	8c 2f       	mov	r24, r28
     3ec:	0e 94 a2 09 	call	0x1344	; 0x1344 <i2c_write>
     3f0:	e7 01       	movw	r28, r14
     3f2:	6f ef       	ldi	r22, 0xFF	; 255
     3f4:	61 0f       	add	r22, r17
     3f6:	06 2f       	mov	r16, r22
     3f8:	10 e0       	ldi	r17, 0x00	; 0
     3fa:	0f 5f       	subi	r16, 0xFF	; 255
     3fc:	1f 4f       	sbci	r17, 0xFF	; 255
     3fe:	0e 0d       	add	r16, r14
     400:	1f 1d       	adc	r17, r15
     402:	89 91       	ld	r24, Y+
     404:	0e 94 a2 09 	call	0x1344	; 0x1344 <i2c_write>
     408:	c0 17       	cp	r28, r16
     40a:	d1 07       	cpc	r29, r17
     40c:	d1 f7       	brne	.-12     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     40e:	0e 94 95 09 	call	0x132a	; 0x132a <i2c_stop>
     412:	df 91       	pop	r29
     414:	cf 91       	pop	r28
     416:	1f 91       	pop	r17
     418:	0f 91       	pop	r16
     41a:	ff 90       	pop	r15
     41c:	ef 90       	pop	r14
     41e:	08 95       	ret

00000420 <mpu6050_writeByte>:
     420:	cf 93       	push	r28
     422:	df 93       	push	r29
     424:	1f 92       	push	r1
     426:	cd b7       	in	r28, 0x3d	; 61
     428:	de b7       	in	r29, 0x3e	; 62
     42a:	69 83       	std	Y+1, r22	; 0x01
     42c:	ae 01       	movw	r20, r28
     42e:	4f 5f       	subi	r20, 0xFF	; 255
     430:	5f 4f       	sbci	r21, 0xFF	; 255
     432:	61 e0       	ldi	r22, 0x01	; 1
     434:	0e 94 e7 01 	call	0x3ce	; 0x3ce <mpu6050_writeBytes>
     438:	0f 90       	pop	r0
     43a:	df 91       	pop	r29
     43c:	cf 91       	pop	r28
     43e:	08 95       	ret

00000440 <mpu6050_readBit>:
     440:	ff 92       	push	r15
     442:	0f 93       	push	r16
     444:	1f 93       	push	r17
     446:	cf 93       	push	r28
     448:	df 93       	push	r29
     44a:	1f 92       	push	r1
     44c:	cd b7       	in	r28, 0x3d	; 61
     44e:	de b7       	in	r29, 0x3e	; 62
     450:	f6 2e       	mov	r15, r22
     452:	8a 01       	movw	r16, r20
     454:	be 01       	movw	r22, r28
     456:	6f 5f       	subi	r22, 0xFF	; 255
     458:	7f 4f       	sbci	r23, 0xFF	; 255
     45a:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <mpu6050_readByte>
     45e:	21 e0       	ldi	r18, 0x01	; 1
     460:	30 e0       	ldi	r19, 0x00	; 0
     462:	02 c0       	rjmp	.+4      	; 0x468 <mpu6050_readBit+0x28>
     464:	22 0f       	add	r18, r18
     466:	33 1f       	adc	r19, r19
     468:	fa 94       	dec	r15
     46a:	e2 f7       	brpl	.-8      	; 0x464 <mpu6050_readBit+0x24>
     46c:	99 81       	ldd	r25, Y+1	; 0x01
     46e:	29 23       	and	r18, r25
     470:	f8 01       	movw	r30, r16
     472:	20 83       	st	Z, r18
     474:	0f 90       	pop	r0
     476:	df 91       	pop	r29
     478:	cf 91       	pop	r28
     47a:	1f 91       	pop	r17
     47c:	0f 91       	pop	r16
     47e:	ff 90       	pop	r15
     480:	08 95       	ret

00000482 <mpu6050_writeBits>:
     482:	ef 92       	push	r14
     484:	ff 92       	push	r15
     486:	0f 93       	push	r16
     488:	1f 93       	push	r17
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
     48e:	1f 92       	push	r1
     490:	cd b7       	in	r28, 0x3d	; 61
     492:	de b7       	in	r29, 0x3e	; 62
     494:	44 23       	and	r20, r20
     496:	89 f1       	breq	.+98     	; 0x4fa <mpu6050_writeBits+0x78>
     498:	f2 2e       	mov	r15, r18
     49a:	14 2f       	mov	r17, r20
     49c:	06 2f       	mov	r16, r22
     49e:	e8 2e       	mov	r14, r24
     4a0:	19 82       	std	Y+1, r1	; 0x01
     4a2:	be 01       	movw	r22, r28
     4a4:	6f 5f       	subi	r22, 0xFF	; 255
     4a6:	7f 4f       	sbci	r23, 0xFF	; 255
     4a8:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <mpu6050_readByte>
     4ac:	88 23       	and	r24, r24
     4ae:	29 f1       	breq	.+74     	; 0x4fa <mpu6050_writeBits+0x78>
     4b0:	40 2f       	mov	r20, r16
     4b2:	50 e0       	ldi	r21, 0x00	; 0
     4b4:	41 1b       	sub	r20, r17
     4b6:	51 09       	sbc	r21, r1
     4b8:	4f 5f       	subi	r20, 0xFF	; 255
     4ba:	5f 4f       	sbci	r21, 0xFF	; 255
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <mpu6050_writeBits+0x44>
     4c2:	88 0f       	add	r24, r24
     4c4:	99 1f       	adc	r25, r25
     4c6:	1a 95       	dec	r17
     4c8:	e2 f7       	brpl	.-8      	; 0x4c2 <mpu6050_writeBits+0x40>
     4ca:	01 97       	sbiw	r24, 0x01	; 1
     4cc:	04 2e       	mov	r0, r20
     4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <mpu6050_writeBits+0x52>
     4d0:	88 0f       	add	r24, r24
     4d2:	99 1f       	adc	r25, r25
     4d4:	0a 94       	dec	r0
     4d6:	e2 f7       	brpl	.-8      	; 0x4d0 <mpu6050_writeBits+0x4e>
     4d8:	2f 2d       	mov	r18, r15
     4da:	30 e0       	ldi	r19, 0x00	; 0
     4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <mpu6050_writeBits+0x60>
     4de:	22 0f       	add	r18, r18
     4e0:	33 1f       	adc	r19, r19
     4e2:	4a 95       	dec	r20
     4e4:	e2 f7       	brpl	.-8      	; 0x4de <mpu6050_writeBits+0x5c>
     4e6:	68 2f       	mov	r22, r24
     4e8:	60 95       	com	r22
     4ea:	99 81       	ldd	r25, Y+1	; 0x01
     4ec:	69 23       	and	r22, r25
     4ee:	82 23       	and	r24, r18
     4f0:	68 2b       	or	r22, r24
     4f2:	69 83       	std	Y+1, r22	; 0x01
     4f4:	8e 2d       	mov	r24, r14
     4f6:	0e 94 10 02 	call	0x420	; 0x420 <mpu6050_writeByte>
     4fa:	0f 90       	pop	r0
     4fc:	df 91       	pop	r29
     4fe:	cf 91       	pop	r28
     500:	1f 91       	pop	r17
     502:	0f 91       	pop	r16
     504:	ff 90       	pop	r15
     506:	ef 90       	pop	r14
     508:	08 95       	ret

0000050a <mpu6050_writeBit>:
     50a:	ff 92       	push	r15
     50c:	0f 93       	push	r16
     50e:	1f 93       	push	r17
     510:	cf 93       	push	r28
     512:	df 93       	push	r29
     514:	1f 92       	push	r1
     516:	cd b7       	in	r28, 0x3d	; 61
     518:	de b7       	in	r29, 0x3e	; 62
     51a:	18 2f       	mov	r17, r24
     51c:	06 2f       	mov	r16, r22
     51e:	f4 2e       	mov	r15, r20
     520:	be 01       	movw	r22, r28
     522:	6f 5f       	subi	r22, 0xFF	; 255
     524:	7f 4f       	sbci	r23, 0xFF	; 255
     526:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <mpu6050_readByte>
     52a:	ff 20       	and	r15, r15
     52c:	51 f0       	breq	.+20     	; 0x542 <mpu6050_writeBit+0x38>
     52e:	61 e0       	ldi	r22, 0x01	; 1
     530:	70 e0       	ldi	r23, 0x00	; 0
     532:	02 c0       	rjmp	.+4      	; 0x538 <mpu6050_writeBit+0x2e>
     534:	66 0f       	add	r22, r22
     536:	77 1f       	adc	r23, r23
     538:	0a 95       	dec	r16
     53a:	e2 f7       	brpl	.-8      	; 0x534 <mpu6050_writeBit+0x2a>
     53c:	89 81       	ldd	r24, Y+1	; 0x01
     53e:	68 2b       	or	r22, r24
     540:	0a c0       	rjmp	.+20     	; 0x556 <mpu6050_writeBit+0x4c>
     542:	61 e0       	ldi	r22, 0x01	; 1
     544:	70 e0       	ldi	r23, 0x00	; 0
     546:	02 c0       	rjmp	.+4      	; 0x54c <mpu6050_writeBit+0x42>
     548:	66 0f       	add	r22, r22
     54a:	77 1f       	adc	r23, r23
     54c:	0a 95       	dec	r16
     54e:	e2 f7       	brpl	.-8      	; 0x548 <mpu6050_writeBit+0x3e>
     550:	60 95       	com	r22
     552:	89 81       	ldd	r24, Y+1	; 0x01
     554:	68 23       	and	r22, r24
     556:	69 83       	std	Y+1, r22	; 0x01
     558:	81 2f       	mov	r24, r17
     55a:	0e 94 10 02 	call	0x420	; 0x420 <mpu6050_writeByte>
     55e:	0f 90       	pop	r0
     560:	df 91       	pop	r29
     562:	cf 91       	pop	r28
     564:	1f 91       	pop	r17
     566:	0f 91       	pop	r16
     568:	ff 90       	pop	r15
     56a:	08 95       	ret

0000056c <mpu6050_setSleepDisabled>:
     56c:	40 e0       	ldi	r20, 0x00	; 0
     56e:	66 e0       	ldi	r22, 0x06	; 6
     570:	8b e6       	ldi	r24, 0x6B	; 107
     572:	0e 94 85 02 	call	0x50a	; 0x50a <mpu6050_writeBit>
     576:	08 95       	ret

00000578 <mpu6050_init>:
     578:	0e 94 54 09 	call	0x12a8	; 0x12a8 <i2c_init>
     57c:	83 e0       	ldi	r24, 0x03	; 3
     57e:	8a 95       	dec	r24
     580:	f1 f7       	brne	.-4      	; 0x57e <mpu6050_init+0x6>
     582:	00 00       	nop
     584:	87 ea       	ldi	r24, 0xA7	; 167
     586:	91 e6       	ldi	r25, 0x61	; 97
     588:	01 97       	sbiw	r24, 0x01	; 1
     58a:	f1 f7       	brne	.-4      	; 0x588 <mpu6050_init+0x10>
     58c:	00 c0       	rjmp	.+0      	; 0x58e <mpu6050_init+0x16>
     58e:	00 00       	nop
     590:	0e 94 b6 02 	call	0x56c	; 0x56c <mpu6050_setSleepDisabled>
     594:	83 ec       	ldi	r24, 0xC3	; 195
     596:	99 e0       	ldi	r25, 0x09	; 9
     598:	01 97       	sbiw	r24, 0x01	; 1
     59a:	f1 f7       	brne	.-4      	; 0x598 <mpu6050_init+0x20>
     59c:	00 c0       	rjmp	.+0      	; 0x59e <mpu6050_init+0x26>
     59e:	00 00       	nop
     5a0:	21 e0       	ldi	r18, 0x01	; 1
     5a2:	43 e0       	ldi	r20, 0x03	; 3
     5a4:	62 e0       	ldi	r22, 0x02	; 2
     5a6:	8b e6       	ldi	r24, 0x6B	; 107
     5a8:	0e 94 41 02 	call	0x482	; 0x482 <mpu6050_writeBits>
     5ac:	23 e0       	ldi	r18, 0x03	; 3
     5ae:	43 e0       	ldi	r20, 0x03	; 3
     5b0:	62 e0       	ldi	r22, 0x02	; 2
     5b2:	8a e1       	ldi	r24, 0x1A	; 26
     5b4:	0e 94 41 02 	call	0x482	; 0x482 <mpu6050_writeBits>
     5b8:	64 e0       	ldi	r22, 0x04	; 4
     5ba:	89 e1       	ldi	r24, 0x19	; 25
     5bc:	0e 94 10 02 	call	0x420	; 0x420 <mpu6050_writeByte>
     5c0:	23 e0       	ldi	r18, 0x03	; 3
     5c2:	42 e0       	ldi	r20, 0x02	; 2
     5c4:	64 e0       	ldi	r22, 0x04	; 4
     5c6:	8b e1       	ldi	r24, 0x1B	; 27
     5c8:	0e 94 41 02 	call	0x482	; 0x482 <mpu6050_writeBits>
     5cc:	20 e0       	ldi	r18, 0x00	; 0
     5ce:	42 e0       	ldi	r20, 0x02	; 2
     5d0:	64 e0       	ldi	r22, 0x04	; 4
     5d2:	8c e1       	ldi	r24, 0x1C	; 28
     5d4:	0e 94 41 02 	call	0x482	; 0x482 <mpu6050_writeBits>
     5d8:	83 b7       	in	r24, 0x33	; 51
     5da:	85 60       	ori	r24, 0x05	; 5
     5dc:	83 bf       	out	0x33, r24	; 51
     5de:	89 b7       	in	r24, 0x39	; 57
     5e0:	81 60       	ori	r24, 0x01	; 1
     5e2:	89 bf       	out	0x39, r24	; 57
     5e4:	08 95       	ret

000005e6 <mpu6050_getRawData>:
     5e6:	8f 92       	push	r8
     5e8:	9f 92       	push	r9
     5ea:	af 92       	push	r10
     5ec:	bf 92       	push	r11
     5ee:	cf 92       	push	r12
     5f0:	df 92       	push	r13
     5f2:	ef 92       	push	r14
     5f4:	ff 92       	push	r15
     5f6:	0f 93       	push	r16
     5f8:	1f 93       	push	r17
     5fa:	cf 93       	push	r28
     5fc:	df 93       	push	r29
     5fe:	4c 01       	movw	r8, r24
     600:	5b 01       	movw	r10, r22
     602:	6a 01       	movw	r12, r20
     604:	e9 01       	movw	r28, r18
     606:	4e ec       	ldi	r20, 0xCE	; 206
     608:	50 e0       	ldi	r21, 0x00	; 0
     60a:	6e e0       	ldi	r22, 0x0E	; 14
     60c:	8b e3       	ldi	r24, 0x3B	; 59
     60e:	0e 94 94 01 	call	0x328	; 0x328 <mpu6050_readBytes>
     612:	ee ec       	ldi	r30, 0xCE	; 206
     614:	f0 e0       	ldi	r31, 0x00	; 0
     616:	20 81       	ld	r18, Z
     618:	81 81       	ldd	r24, Z+1	; 0x01
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	92 2b       	or	r25, r18
     61e:	d4 01       	movw	r26, r8
     620:	8d 93       	st	X+, r24
     622:	9c 93       	st	X, r25
     624:	22 81       	ldd	r18, Z+2	; 0x02
     626:	83 81       	ldd	r24, Z+3	; 0x03
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	92 2b       	or	r25, r18
     62c:	d5 01       	movw	r26, r10
     62e:	8d 93       	st	X+, r24
     630:	9c 93       	st	X, r25
     632:	24 81       	ldd	r18, Z+4	; 0x04
     634:	85 81       	ldd	r24, Z+5	; 0x05
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	92 2b       	or	r25, r18
     63a:	d6 01       	movw	r26, r12
     63c:	8d 93       	st	X+, r24
     63e:	9c 93       	st	X, r25
     640:	20 85       	ldd	r18, Z+8	; 0x08
     642:	81 85       	ldd	r24, Z+9	; 0x09
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	92 2b       	or	r25, r18
     648:	99 83       	std	Y+1, r25	; 0x01
     64a:	88 83       	st	Y, r24
     64c:	22 85       	ldd	r18, Z+10	; 0x0a
     64e:	83 85       	ldd	r24, Z+11	; 0x0b
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	92 2b       	or	r25, r18
     654:	d8 01       	movw	r26, r16
     656:	8d 93       	st	X+, r24
     658:	9c 93       	st	X, r25
     65a:	24 85       	ldd	r18, Z+12	; 0x0c
     65c:	85 85       	ldd	r24, Z+13	; 0x0d
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	92 2b       	or	r25, r18
     662:	f7 01       	movw	r30, r14
     664:	91 83       	std	Z+1, r25	; 0x01
     666:	80 83       	st	Z, r24
     668:	df 91       	pop	r29
     66a:	cf 91       	pop	r28
     66c:	1f 91       	pop	r17
     66e:	0f 91       	pop	r16
     670:	ff 90       	pop	r15
     672:	ef 90       	pop	r14
     674:	df 90       	pop	r13
     676:	cf 90       	pop	r12
     678:	bf 90       	pop	r11
     67a:	af 90       	pop	r10
     67c:	9f 90       	pop	r9
     67e:	8f 90       	pop	r8
     680:	08 95       	ret

00000682 <mpu6050_mahonyUpdate>:
volatile float q0 = 1.0f, q1 = 0.0f, q2 = 0.0f, q3 = 0.0f;
volatile float integralFBx = 0.0f,  integralFBy = 0.0f, integralFBz = 0.0f;
/*
 * Mahony update function (for 6DOF)
 */
void mpu6050_mahonyUpdate(float gx, float gy, float gz, float ax, float ay, float az) {
     682:	4f 92       	push	r4
     684:	5f 92       	push	r5
     686:	6f 92       	push	r6
     688:	7f 92       	push	r7
     68a:	8f 92       	push	r8
     68c:	9f 92       	push	r9
     68e:	af 92       	push	r10
     690:	bf 92       	push	r11
     692:	cf 92       	push	r12
     694:	df 92       	push	r13
     696:	ef 92       	push	r14
     698:	ff 92       	push	r15
     69a:	0f 93       	push	r16
     69c:	1f 93       	push	r17
     69e:	cf 93       	push	r28
     6a0:	df 93       	push	r29
     6a2:	cd b7       	in	r28, 0x3d	; 61
     6a4:	de b7       	in	r29, 0x3e	; 62
     6a6:	a4 97       	sbiw	r28, 0x24	; 36
     6a8:	0f b6       	in	r0, 0x3f	; 63
     6aa:	f8 94       	cli
     6ac:	de bf       	out	0x3e, r29	; 62
     6ae:	0f be       	out	0x3f, r0	; 63
     6b0:	cd bf       	out	0x3d, r28	; 61
     6b2:	6d 87       	std	Y+13, r22	; 0x0d
     6b4:	7e 87       	std	Y+14, r23	; 0x0e
     6b6:	8f 87       	std	Y+15, r24	; 0x0f
     6b8:	98 8b       	std	Y+16, r25	; 0x10
     6ba:	29 8b       	std	Y+17, r18	; 0x11
     6bc:	3a 8b       	std	Y+18, r19	; 0x12
     6be:	4b 8b       	std	Y+19, r20	; 0x13
     6c0:	5c 8b       	std	Y+20, r21	; 0x14
     6c2:	ed 8a       	std	Y+21, r14	; 0x15
     6c4:	fe 8a       	std	Y+22, r15	; 0x16
     6c6:	0f 8b       	std	Y+23, r16	; 0x17
     6c8:	18 8f       	std	Y+24, r17	; 0x18
	float halfvx, halfvy, halfvz;
	float halfex, halfey, halfez;
	float qa, qb, qc;

	// Compute feedback only if accelerometer measurement valid (avoids NaN in accelerometer normalisation)
	if(!((ax == 0.0f) && (ay == 0.0f) && (az == 0.0f))) {
     6ca:	20 e0       	ldi	r18, 0x00	; 0
     6cc:	30 e0       	ldi	r19, 0x00	; 0
     6ce:	a9 01       	movw	r20, r18
     6d0:	c6 01       	movw	r24, r12
     6d2:	b5 01       	movw	r22, r10
     6d4:	0e 94 57 0a 	call	0x14ae	; 0x14ae <__cmpsf2>
     6d8:	81 11       	cpse	r24, r1
     6da:	17 c0       	rjmp	.+46     	; 0x70a <mpu6050_mahonyUpdate+0x88>
     6dc:	20 e0       	ldi	r18, 0x00	; 0
     6de:	30 e0       	ldi	r19, 0x00	; 0
     6e0:	a9 01       	movw	r20, r18
     6e2:	6f a9       	ldd	r22, Y+55	; 0x37
     6e4:	78 ad       	ldd	r23, Y+56	; 0x38
     6e6:	89 ad       	ldd	r24, Y+57	; 0x39
     6e8:	9a ad       	ldd	r25, Y+58	; 0x3a
     6ea:	0e 94 57 0a 	call	0x14ae	; 0x14ae <__cmpsf2>
     6ee:	81 11       	cpse	r24, r1
     6f0:	0c c0       	rjmp	.+24     	; 0x70a <mpu6050_mahonyUpdate+0x88>
     6f2:	20 e0       	ldi	r18, 0x00	; 0
     6f4:	30 e0       	ldi	r19, 0x00	; 0
     6f6:	a9 01       	movw	r20, r18
     6f8:	6b ad       	ldd	r22, Y+59	; 0x3b
     6fa:	7c ad       	ldd	r23, Y+60	; 0x3c
     6fc:	8d ad       	ldd	r24, Y+61	; 0x3d
     6fe:	9e ad       	ldd	r25, Y+62	; 0x3e
     700:	0e 94 57 0a 	call	0x14ae	; 0x14ae <__cmpsf2>
     704:	88 23       	and	r24, r24
     706:	09 f4       	brne	.+2      	; 0x70a <mpu6050_mahonyUpdate+0x88>
     708:	1a c2       	rjmp	.+1076   	; 0xb3e <__stack+0x2df>

		// Normalise accelerometer measurement
		norm = sqrt(ax * ax + ay * ay + az * az);
     70a:	a6 01       	movw	r20, r12
     70c:	95 01       	movw	r18, r10
     70e:	c6 01       	movw	r24, r12
     710:	b5 01       	movw	r22, r10
     712:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     716:	2b 01       	movw	r4, r22
     718:	3c 01       	movw	r6, r24
     71a:	2f a9       	ldd	r18, Y+55	; 0x37
     71c:	38 ad       	ldd	r19, Y+56	; 0x38
     71e:	49 ad       	ldd	r20, Y+57	; 0x39
     720:	5a ad       	ldd	r21, Y+58	; 0x3a
     722:	ca 01       	movw	r24, r20
     724:	b9 01       	movw	r22, r18
     726:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     72a:	69 83       	std	Y+1, r22	; 0x01
     72c:	7a 83       	std	Y+2, r23	; 0x02
     72e:	8b 83       	std	Y+3, r24	; 0x03
     730:	9c 83       	std	Y+4, r25	; 0x04
     732:	9b 01       	movw	r18, r22
     734:	ac 01       	movw	r20, r24
     736:	c3 01       	movw	r24, r6
     738:	b2 01       	movw	r22, r4
     73a:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     73e:	6d 8f       	std	Y+29, r22	; 0x1d
     740:	7e 8f       	std	Y+30, r23	; 0x1e
     742:	8f 8f       	std	Y+31, r24	; 0x1f
     744:	98 a3       	std	Y+32, r25	; 0x20
     746:	2b ad       	ldd	r18, Y+59	; 0x3b
     748:	3c ad       	ldd	r19, Y+60	; 0x3c
     74a:	4d ad       	ldd	r20, Y+61	; 0x3d
     74c:	5e ad       	ldd	r21, Y+62	; 0x3e
     74e:	ca 01       	movw	r24, r20
     750:	b9 01       	movw	r22, r18
     752:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     756:	69 8f       	std	Y+25, r22	; 0x19
     758:	7a 8f       	std	Y+26, r23	; 0x1a
     75a:	8b 8f       	std	Y+27, r24	; 0x1b
     75c:	9c 8f       	std	Y+28, r25	; 0x1c
     75e:	29 81       	ldd	r18, Y+1	; 0x01
     760:	3a 81       	ldd	r19, Y+2	; 0x02
     762:	4b 81       	ldd	r20, Y+3	; 0x03
     764:	5c 81       	ldd	r21, Y+4	; 0x04
     766:	c3 01       	movw	r24, r6
     768:	b2 01       	movw	r22, r4
     76a:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     76e:	2b 01       	movw	r4, r22
     770:	3c 01       	movw	r6, r24
     772:	29 8d       	ldd	r18, Y+25	; 0x19
     774:	3a 8d       	ldd	r19, Y+26	; 0x1a
     776:	4b 8d       	ldd	r20, Y+27	; 0x1b
     778:	5c 8d       	ldd	r21, Y+28	; 0x1c
     77a:	c3 01       	movw	r24, r6
     77c:	b2 01       	movw	r22, r4
     77e:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     782:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <sqrt>
     786:	2b 01       	movw	r4, r22
     788:	3c 01       	movw	r6, r24
		ax /= norm;
     78a:	9b 01       	movw	r18, r22
     78c:	ac 01       	movw	r20, r24
     78e:	c6 01       	movw	r24, r12
     790:	b5 01       	movw	r22, r10
     792:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
		ay /= norm;
     79e:	a3 01       	movw	r20, r6
     7a0:	92 01       	movw	r18, r4
     7a2:	6f a9       	ldd	r22, Y+55	; 0x37
     7a4:	78 ad       	ldd	r23, Y+56	; 0x38
     7a6:	89 ad       	ldd	r24, Y+57	; 0x39
     7a8:	9a ad       	ldd	r25, Y+58	; 0x3a
     7aa:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
     7ae:	6d 83       	std	Y+5, r22	; 0x05
     7b0:	7e 83       	std	Y+6, r23	; 0x06
     7b2:	8f 83       	std	Y+7, r24	; 0x07
     7b4:	98 87       	std	Y+8, r25	; 0x08
		az /= norm;
     7b6:	a3 01       	movw	r20, r6
     7b8:	92 01       	movw	r18, r4
     7ba:	6b ad       	ldd	r22, Y+59	; 0x3b
     7bc:	7c ad       	ldd	r23, Y+60	; 0x3c
     7be:	8d ad       	ldd	r24, Y+61	; 0x3d
     7c0:	9e ad       	ldd	r25, Y+62	; 0x3e
     7c2:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
     7c6:	69 87       	std	Y+9, r22	; 0x09
     7c8:	7a 87       	std	Y+10, r23	; 0x0a
     7ca:	8b 87       	std	Y+11, r24	; 0x0b
     7cc:	9c 87       	std	Y+12, r25	; 0x0c

		// Estimated direction of gravity and vector perpendicular to magnetic flux
		halfvx = q1 * q3 - q0 * q2;
     7ce:	60 91 ca 00 	lds	r22, 0x00CA	; 0x8000ca <q1>
     7d2:	70 91 cb 00 	lds	r23, 0x00CB	; 0x8000cb <q1+0x1>
     7d6:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <q1+0x2>
     7da:	90 91 cd 00 	lds	r25, 0x00CD	; 0x8000cd <q1+0x3>
     7de:	20 91 c2 00 	lds	r18, 0x00C2	; 0x8000c2 <q3>
     7e2:	30 91 c3 00 	lds	r19, 0x00C3	; 0x8000c3 <q3+0x1>
     7e6:	40 91 c4 00 	lds	r20, 0x00C4	; 0x8000c4 <q3+0x2>
     7ea:	50 91 c5 00 	lds	r21, 0x00C5	; 0x8000c5 <q3+0x3>
     7ee:	80 90 7c 00 	lds	r8, 0x007C	; 0x80007c <q0>
     7f2:	90 90 7d 00 	lds	r9, 0x007D	; 0x80007d <q0+0x1>
     7f6:	a0 90 7e 00 	lds	r10, 0x007E	; 0x80007e <q0+0x2>
     7fa:	b0 90 7f 00 	lds	r11, 0x007F	; 0x80007f <q0+0x3>
     7fe:	40 90 c6 00 	lds	r4, 0x00C6	; 0x8000c6 <q2>
     802:	50 90 c7 00 	lds	r5, 0x00C7	; 0x8000c7 <q2+0x1>
     806:	60 90 c8 00 	lds	r6, 0x00C8	; 0x8000c8 <q2+0x2>
     80a:	70 90 c9 00 	lds	r7, 0x00C9	; 0x8000c9 <q2+0x3>
     80e:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     812:	6b 01       	movw	r12, r22
     814:	7c 01       	movw	r14, r24
     816:	a3 01       	movw	r20, r6
     818:	92 01       	movw	r18, r4
     81a:	c5 01       	movw	r24, r10
     81c:	b4 01       	movw	r22, r8
     81e:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     822:	9b 01       	movw	r18, r22
     824:	ac 01       	movw	r20, r24
     826:	c7 01       	movw	r24, r14
     828:	b6 01       	movw	r22, r12
     82a:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__subsf3>
     82e:	69 8f       	std	Y+25, r22	; 0x19
     830:	7a 8f       	std	Y+26, r23	; 0x1a
     832:	8b 8f       	std	Y+27, r24	; 0x1b
     834:	9c 8f       	std	Y+28, r25	; 0x1c
		halfvy = q0 * q1 + q2 * q3;
     836:	60 91 7c 00 	lds	r22, 0x007C	; 0x80007c <q0>
     83a:	70 91 7d 00 	lds	r23, 0x007D	; 0x80007d <q0+0x1>
     83e:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <q0+0x2>
     842:	90 91 7f 00 	lds	r25, 0x007F	; 0x80007f <q0+0x3>
     846:	20 91 ca 00 	lds	r18, 0x00CA	; 0x8000ca <q1>
     84a:	30 91 cb 00 	lds	r19, 0x00CB	; 0x8000cb <q1+0x1>
     84e:	40 91 cc 00 	lds	r20, 0x00CC	; 0x8000cc <q1+0x2>
     852:	50 91 cd 00 	lds	r21, 0x00CD	; 0x8000cd <q1+0x3>
     856:	80 90 c6 00 	lds	r8, 0x00C6	; 0x8000c6 <q2>
     85a:	90 90 c7 00 	lds	r9, 0x00C7	; 0x8000c7 <q2+0x1>
     85e:	a0 90 c8 00 	lds	r10, 0x00C8	; 0x8000c8 <q2+0x2>
     862:	b0 90 c9 00 	lds	r11, 0x00C9	; 0x8000c9 <q2+0x3>
     866:	40 90 c2 00 	lds	r4, 0x00C2	; 0x8000c2 <q3>
     86a:	50 90 c3 00 	lds	r5, 0x00C3	; 0x8000c3 <q3+0x1>
     86e:	60 90 c4 00 	lds	r6, 0x00C4	; 0x8000c4 <q3+0x2>
     872:	70 90 c5 00 	lds	r7, 0x00C5	; 0x8000c5 <q3+0x3>
     876:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     87a:	6b 01       	movw	r12, r22
     87c:	7c 01       	movw	r14, r24
     87e:	a3 01       	movw	r20, r6
     880:	92 01       	movw	r18, r4
     882:	c5 01       	movw	r24, r10
     884:	b4 01       	movw	r22, r8
     886:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     88a:	9b 01       	movw	r18, r22
     88c:	ac 01       	movw	r20, r24
     88e:	c7 01       	movw	r24, r14
     890:	b6 01       	movw	r22, r12
     892:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     896:	6d 8f       	std	Y+29, r22	; 0x1d
     898:	7e 8f       	std	Y+30, r23	; 0x1e
     89a:	8f 8f       	std	Y+31, r24	; 0x1f
     89c:	98 a3       	std	Y+32, r25	; 0x20
		halfvz = q0 * q0 - 0.5f + q3 * q3;
     89e:	60 91 7c 00 	lds	r22, 0x007C	; 0x80007c <q0>
     8a2:	70 91 7d 00 	lds	r23, 0x007D	; 0x80007d <q0+0x1>
     8a6:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <q0+0x2>
     8aa:	90 91 7f 00 	lds	r25, 0x007F	; 0x80007f <q0+0x3>
     8ae:	20 91 7c 00 	lds	r18, 0x007C	; 0x80007c <q0>
     8b2:	30 91 7d 00 	lds	r19, 0x007D	; 0x80007d <q0+0x1>
     8b6:	40 91 7e 00 	lds	r20, 0x007E	; 0x80007e <q0+0x2>
     8ba:	50 91 7f 00 	lds	r21, 0x007F	; 0x80007f <q0+0x3>
     8be:	80 90 c2 00 	lds	r8, 0x00C2	; 0x8000c2 <q3>
     8c2:	90 90 c3 00 	lds	r9, 0x00C3	; 0x8000c3 <q3+0x1>
     8c6:	a0 90 c4 00 	lds	r10, 0x00C4	; 0x8000c4 <q3+0x2>
     8ca:	b0 90 c5 00 	lds	r11, 0x00C5	; 0x8000c5 <q3+0x3>
     8ce:	40 90 c2 00 	lds	r4, 0x00C2	; 0x8000c2 <q3>
     8d2:	50 90 c3 00 	lds	r5, 0x00C3	; 0x8000c3 <q3+0x1>
     8d6:	60 90 c4 00 	lds	r6, 0x00C4	; 0x8000c4 <q3+0x2>
     8da:	70 90 c5 00 	lds	r7, 0x00C5	; 0x8000c5 <q3+0x3>
     8de:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     8e2:	20 e0       	ldi	r18, 0x00	; 0
     8e4:	30 e0       	ldi	r19, 0x00	; 0
     8e6:	40 e0       	ldi	r20, 0x00	; 0
     8e8:	5f e3       	ldi	r21, 0x3F	; 63
     8ea:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__subsf3>
     8ee:	6b 01       	movw	r12, r22
     8f0:	7c 01       	movw	r14, r24
     8f2:	a3 01       	movw	r20, r6
     8f4:	92 01       	movw	r18, r4
     8f6:	c5 01       	movw	r24, r10
     8f8:	b4 01       	movw	r22, r8
     8fa:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     8fe:	9b 01       	movw	r18, r22
     900:	ac 01       	movw	r20, r24
     902:	c7 01       	movw	r24, r14
     904:	b6 01       	movw	r22, r12
     906:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     90a:	6b 01       	movw	r12, r22
     90c:	7c 01       	movw	r14, r24

		// Error is sum of cross product between estimated and measured direction of gravity
		halfex = (ay * halfvz - az * halfvy);
     90e:	9b 01       	movw	r18, r22
     910:	ac 01       	movw	r20, r24
     912:	6d 81       	ldd	r22, Y+5	; 0x05
     914:	7e 81       	ldd	r23, Y+6	; 0x06
     916:	8f 81       	ldd	r24, Y+7	; 0x07
     918:	98 85       	ldd	r25, Y+8	; 0x08
     91a:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     91e:	4b 01       	movw	r8, r22
     920:	5c 01       	movw	r10, r24
     922:	2d 8d       	ldd	r18, Y+29	; 0x1d
     924:	3e 8d       	ldd	r19, Y+30	; 0x1e
     926:	4f 8d       	ldd	r20, Y+31	; 0x1f
     928:	58 a1       	ldd	r21, Y+32	; 0x20
     92a:	69 85       	ldd	r22, Y+9	; 0x09
     92c:	7a 85       	ldd	r23, Y+10	; 0x0a
     92e:	8b 85       	ldd	r24, Y+11	; 0x0b
     930:	9c 85       	ldd	r25, Y+12	; 0x0c
     932:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     936:	9b 01       	movw	r18, r22
     938:	ac 01       	movw	r20, r24
     93a:	c5 01       	movw	r24, r10
     93c:	b4 01       	movw	r22, r8
     93e:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__subsf3>
     942:	69 a3       	std	Y+33, r22	; 0x21
     944:	7a a3       	std	Y+34, r23	; 0x22
     946:	8b a3       	std	Y+35, r24	; 0x23
     948:	9c a3       	std	Y+36, r25	; 0x24
		halfey = (az * halfvx - ax * halfvz);
     94a:	29 8d       	ldd	r18, Y+25	; 0x19
     94c:	3a 8d       	ldd	r19, Y+26	; 0x1a
     94e:	4b 8d       	ldd	r20, Y+27	; 0x1b
     950:	5c 8d       	ldd	r21, Y+28	; 0x1c
     952:	69 85       	ldd	r22, Y+9	; 0x09
     954:	7a 85       	ldd	r23, Y+10	; 0x0a
     956:	8b 85       	ldd	r24, Y+11	; 0x0b
     958:	9c 85       	ldd	r25, Y+12	; 0x0c
     95a:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     95e:	4b 01       	movw	r8, r22
     960:	5c 01       	movw	r10, r24
     962:	a7 01       	movw	r20, r14
     964:	96 01       	movw	r18, r12
     966:	69 81       	ldd	r22, Y+1	; 0x01
     968:	7a 81       	ldd	r23, Y+2	; 0x02
     96a:	8b 81       	ldd	r24, Y+3	; 0x03
     96c:	9c 81       	ldd	r25, Y+4	; 0x04
     96e:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     972:	9b 01       	movw	r18, r22
     974:	ac 01       	movw	r20, r24
     976:	c5 01       	movw	r24, r10
     978:	b4 01       	movw	r22, r8
     97a:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__subsf3>
     97e:	2b 01       	movw	r4, r22
     980:	3c 01       	movw	r6, r24
		halfez = (ax * halfvy - ay * halfvx);
     982:	2d 8d       	ldd	r18, Y+29	; 0x1d
     984:	3e 8d       	ldd	r19, Y+30	; 0x1e
     986:	4f 8d       	ldd	r20, Y+31	; 0x1f
     988:	58 a1       	ldd	r21, Y+32	; 0x20
     98a:	69 81       	ldd	r22, Y+1	; 0x01
     98c:	7a 81       	ldd	r23, Y+2	; 0x02
     98e:	8b 81       	ldd	r24, Y+3	; 0x03
     990:	9c 81       	ldd	r25, Y+4	; 0x04
     992:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     996:	6b 01       	movw	r12, r22
     998:	7c 01       	movw	r14, r24
     99a:	29 8d       	ldd	r18, Y+25	; 0x19
     99c:	3a 8d       	ldd	r19, Y+26	; 0x1a
     99e:	4b 8d       	ldd	r20, Y+27	; 0x1b
     9a0:	5c 8d       	ldd	r21, Y+28	; 0x1c
     9a2:	6d 81       	ldd	r22, Y+5	; 0x05
     9a4:	7e 81       	ldd	r23, Y+6	; 0x06
     9a6:	8f 81       	ldd	r24, Y+7	; 0x07
     9a8:	98 85       	ldd	r25, Y+8	; 0x08
     9aa:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     9ae:	9b 01       	movw	r18, r22
     9b0:	ac 01       	movw	r20, r24
     9b2:	c7 01       	movw	r24, r14
     9b4:	b6 01       	movw	r22, r12
     9b6:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__subsf3>
     9ba:	4b 01       	movw	r8, r22
     9bc:	5c 01       	movw	r10, r24

		// Compute and apply integral feedback if enabled
		if(mpu6050_mahonytwoKiDef > 0.0f) {
			integralFBx += mpu6050_mahonytwoKiDef * halfex * (1.0f / mpu6050_mahonysampleFreq);	// integral error scaled by Ki
     9be:	c0 90 be 00 	lds	r12, 0x00BE	; 0x8000be <integralFBx>
     9c2:	d0 90 bf 00 	lds	r13, 0x00BF	; 0x8000bf <integralFBx+0x1>
     9c6:	e0 90 c0 00 	lds	r14, 0x00C0	; 0x8000c0 <integralFBx+0x2>
     9ca:	f0 90 c1 00 	lds	r15, 0x00C1	; 0x8000c1 <integralFBx+0x3>
     9ce:	2d ec       	ldi	r18, 0xCD	; 205
     9d0:	3c ec       	ldi	r19, 0xCC	; 204
     9d2:	4c e4       	ldi	r20, 0x4C	; 76
     9d4:	5e e3       	ldi	r21, 0x3E	; 62
     9d6:	69 a1       	ldd	r22, Y+33	; 0x21
     9d8:	7a a1       	ldd	r23, Y+34	; 0x22
     9da:	8b a1       	ldd	r24, Y+35	; 0x23
     9dc:	9c a1       	ldd	r25, Y+36	; 0x24
     9de:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     9e2:	2a e8       	ldi	r18, 0x8A	; 138
     9e4:	3b e4       	ldi	r19, 0x4B	; 75
     9e6:	46 e8       	ldi	r20, 0x86	; 134
     9e8:	5c e3       	ldi	r21, 0x3C	; 60
     9ea:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     9ee:	a7 01       	movw	r20, r14
     9f0:	96 01       	movw	r18, r12
     9f2:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     9f6:	60 93 be 00 	sts	0x00BE, r22	; 0x8000be <integralFBx>
     9fa:	70 93 bf 00 	sts	0x00BF, r23	; 0x8000bf <integralFBx+0x1>
     9fe:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <integralFBx+0x2>
     a02:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <integralFBx+0x3>
			integralFBy += mpu6050_mahonytwoKiDef * halfey * (1.0f / mpu6050_mahonysampleFreq);
     a06:	c0 90 ba 00 	lds	r12, 0x00BA	; 0x8000ba <integralFBy>
     a0a:	d0 90 bb 00 	lds	r13, 0x00BB	; 0x8000bb <integralFBy+0x1>
     a0e:	e0 90 bc 00 	lds	r14, 0x00BC	; 0x8000bc <integralFBy+0x2>
     a12:	f0 90 bd 00 	lds	r15, 0x00BD	; 0x8000bd <integralFBy+0x3>
     a16:	2d ec       	ldi	r18, 0xCD	; 205
     a18:	3c ec       	ldi	r19, 0xCC	; 204
     a1a:	4c e4       	ldi	r20, 0x4C	; 76
     a1c:	5e e3       	ldi	r21, 0x3E	; 62
     a1e:	c3 01       	movw	r24, r6
     a20:	b2 01       	movw	r22, r4
     a22:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     a26:	2a e8       	ldi	r18, 0x8A	; 138
     a28:	3b e4       	ldi	r19, 0x4B	; 75
     a2a:	46 e8       	ldi	r20, 0x86	; 134
     a2c:	5c e3       	ldi	r21, 0x3C	; 60
     a2e:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     a32:	a7 01       	movw	r20, r14
     a34:	96 01       	movw	r18, r12
     a36:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     a3a:	60 93 ba 00 	sts	0x00BA, r22	; 0x8000ba <integralFBy>
     a3e:	70 93 bb 00 	sts	0x00BB, r23	; 0x8000bb <integralFBy+0x1>
     a42:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <integralFBy+0x2>
     a46:	90 93 bd 00 	sts	0x00BD, r25	; 0x8000bd <integralFBy+0x3>
			integralFBz += mpu6050_mahonytwoKiDef * halfez * (1.0f / mpu6050_mahonysampleFreq);
     a4a:	c0 90 b6 00 	lds	r12, 0x00B6	; 0x8000b6 <integralFBz>
     a4e:	d0 90 b7 00 	lds	r13, 0x00B7	; 0x8000b7 <integralFBz+0x1>
     a52:	e0 90 b8 00 	lds	r14, 0x00B8	; 0x8000b8 <integralFBz+0x2>
     a56:	f0 90 b9 00 	lds	r15, 0x00B9	; 0x8000b9 <integralFBz+0x3>
     a5a:	2d ec       	ldi	r18, 0xCD	; 205
     a5c:	3c ec       	ldi	r19, 0xCC	; 204
     a5e:	4c e4       	ldi	r20, 0x4C	; 76
     a60:	5e e3       	ldi	r21, 0x3E	; 62
     a62:	c5 01       	movw	r24, r10
     a64:	b4 01       	movw	r22, r8
     a66:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     a6a:	2a e8       	ldi	r18, 0x8A	; 138
     a6c:	3b e4       	ldi	r19, 0x4B	; 75
     a6e:	46 e8       	ldi	r20, 0x86	; 134
     a70:	5c e3       	ldi	r21, 0x3C	; 60
     a72:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     a76:	a7 01       	movw	r20, r14
     a78:	96 01       	movw	r18, r12
     a7a:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     a7e:	60 93 b6 00 	sts	0x00B6, r22	; 0x8000b6 <integralFBz>
     a82:	70 93 b7 00 	sts	0x00B7, r23	; 0x8000b7 <integralFBz+0x1>
     a86:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <integralFBz+0x2>
     a8a:	90 93 b9 00 	sts	0x00B9, r25	; 0x8000b9 <integralFBz+0x3>
			gx += integralFBx;	// apply integral feedback
     a8e:	20 91 be 00 	lds	r18, 0x00BE	; 0x8000be <integralFBx>
     a92:	30 91 bf 00 	lds	r19, 0x00BF	; 0x8000bf <integralFBx+0x1>
     a96:	40 91 c0 00 	lds	r20, 0x00C0	; 0x8000c0 <integralFBx+0x2>
     a9a:	50 91 c1 00 	lds	r21, 0x00C1	; 0x8000c1 <integralFBx+0x3>
     a9e:	6d 85       	ldd	r22, Y+13	; 0x0d
     aa0:	7e 85       	ldd	r23, Y+14	; 0x0e
     aa2:	8f 85       	ldd	r24, Y+15	; 0x0f
     aa4:	98 89       	ldd	r25, Y+16	; 0x10
     aa6:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     aaa:	6d 83       	std	Y+5, r22	; 0x05
     aac:	7e 83       	std	Y+6, r23	; 0x06
     aae:	8f 83       	std	Y+7, r24	; 0x07
     ab0:	98 87       	std	Y+8, r25	; 0x08
			gy += integralFBy;
     ab2:	20 91 ba 00 	lds	r18, 0x00BA	; 0x8000ba <integralFBy>
     ab6:	30 91 bb 00 	lds	r19, 0x00BB	; 0x8000bb <integralFBy+0x1>
     aba:	40 91 bc 00 	lds	r20, 0x00BC	; 0x8000bc <integralFBy+0x2>
     abe:	50 91 bd 00 	lds	r21, 0x00BD	; 0x8000bd <integralFBy+0x3>
     ac2:	69 89       	ldd	r22, Y+17	; 0x11
     ac4:	7a 89       	ldd	r23, Y+18	; 0x12
     ac6:	8b 89       	ldd	r24, Y+19	; 0x13
     ac8:	9c 89       	ldd	r25, Y+20	; 0x14
     aca:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     ace:	6b 01       	movw	r12, r22
     ad0:	7c 01       	movw	r14, r24
			gz += integralFBz;
     ad2:	20 91 b6 00 	lds	r18, 0x00B6	; 0x8000b6 <integralFBz>
     ad6:	30 91 b7 00 	lds	r19, 0x00B7	; 0x8000b7 <integralFBz+0x1>
     ada:	40 91 b8 00 	lds	r20, 0x00B8	; 0x8000b8 <integralFBz+0x2>
     ade:	50 91 b9 00 	lds	r21, 0x00B9	; 0x8000b9 <integralFBz+0x3>
     ae2:	6d 89       	ldd	r22, Y+21	; 0x15
     ae4:	7e 89       	ldd	r23, Y+22	; 0x16
     ae6:	8f 89       	ldd	r24, Y+23	; 0x17
     ae8:	98 8d       	ldd	r25, Y+24	; 0x18
     aea:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     aee:	69 87       	std	Y+9, r22	; 0x09
     af0:	7a 87       	std	Y+10, r23	; 0x0a
     af2:	8b 87       	std	Y+11, r24	; 0x0b
     af4:	9c 87       	std	Y+12, r25	; 0x0c
			integralFBy = 0.0f;
			integralFBz = 0.0f;
		}

		// Apply proportional feedback
		gx += mpu6050_mahonytwoKpDef * halfex;
     af6:	2d 81       	ldd	r18, Y+5	; 0x05
     af8:	3e 81       	ldd	r19, Y+6	; 0x06
     afa:	4f 81       	ldd	r20, Y+7	; 0x07
     afc:	58 85       	ldd	r21, Y+8	; 0x08
     afe:	69 a1       	ldd	r22, Y+33	; 0x21
     b00:	7a a1       	ldd	r23, Y+34	; 0x22
     b02:	8b a1       	ldd	r24, Y+35	; 0x23
     b04:	9c a1       	ldd	r25, Y+36	; 0x24
     b06:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     b0a:	6d 87       	std	Y+13, r22	; 0x0d
     b0c:	7e 87       	std	Y+14, r23	; 0x0e
     b0e:	8f 87       	std	Y+15, r24	; 0x0f
     b10:	98 8b       	std	Y+16, r25	; 0x10
		gy += mpu6050_mahonytwoKpDef * halfey;
     b12:	a7 01       	movw	r20, r14
     b14:	96 01       	movw	r18, r12
     b16:	c3 01       	movw	r24, r6
     b18:	b2 01       	movw	r22, r4
     b1a:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     b1e:	69 8b       	std	Y+17, r22	; 0x11
     b20:	7a 8b       	std	Y+18, r23	; 0x12
     b22:	8b 8b       	std	Y+19, r24	; 0x13
     b24:	9c 8b       	std	Y+20, r25	; 0x14
		gz += mpu6050_mahonytwoKpDef * halfez;
     b26:	29 85       	ldd	r18, Y+9	; 0x09
     b28:	3a 85       	ldd	r19, Y+10	; 0x0a
     b2a:	4b 85       	ldd	r20, Y+11	; 0x0b
     b2c:	5c 85       	ldd	r21, Y+12	; 0x0c
     b2e:	c5 01       	movw	r24, r10
     b30:	b4 01       	movw	r22, r8
     b32:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     b36:	6d 8b       	std	Y+21, r22	; 0x15
     b38:	7e 8b       	std	Y+22, r23	; 0x16
     b3a:	8f 8b       	std	Y+23, r24	; 0x17
     b3c:	98 8f       	std	Y+24, r25	; 0x18
	}

	// Integrate rate of change of quaternion
	gx *= (0.5f * (1.0f / mpu6050_mahonysampleFreq));		// pre-multiply common factors
     b3e:	2a e8       	ldi	r18, 0x8A	; 138
     b40:	3b e4       	ldi	r19, 0x4B	; 75
     b42:	46 e0       	ldi	r20, 0x06	; 6
     b44:	5c e3       	ldi	r21, 0x3C	; 60
     b46:	6d 85       	ldd	r22, Y+13	; 0x0d
     b48:	7e 85       	ldd	r23, Y+14	; 0x0e
     b4a:	8f 85       	ldd	r24, Y+15	; 0x0f
     b4c:	98 89       	ldd	r25, Y+16	; 0x10
     b4e:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     b52:	6d 83       	std	Y+5, r22	; 0x05
     b54:	7e 83       	std	Y+6, r23	; 0x06
     b56:	8f 83       	std	Y+7, r24	; 0x07
     b58:	98 87       	std	Y+8, r25	; 0x08
	gy *= (0.5f * (1.0f / mpu6050_mahonysampleFreq));
     b5a:	2a e8       	ldi	r18, 0x8A	; 138
     b5c:	3b e4       	ldi	r19, 0x4B	; 75
     b5e:	46 e0       	ldi	r20, 0x06	; 6
     b60:	5c e3       	ldi	r21, 0x3C	; 60
     b62:	69 89       	ldd	r22, Y+17	; 0x11
     b64:	7a 89       	ldd	r23, Y+18	; 0x12
     b66:	8b 89       	ldd	r24, Y+19	; 0x13
     b68:	9c 89       	ldd	r25, Y+20	; 0x14
     b6a:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     b6e:	69 87       	std	Y+9, r22	; 0x09
     b70:	7a 87       	std	Y+10, r23	; 0x0a
     b72:	8b 87       	std	Y+11, r24	; 0x0b
     b74:	9c 87       	std	Y+12, r25	; 0x0c
	gz *= (0.5f * (1.0f / mpu6050_mahonysampleFreq));
     b76:	2a e8       	ldi	r18, 0x8A	; 138
     b78:	3b e4       	ldi	r19, 0x4B	; 75
     b7a:	46 e0       	ldi	r20, 0x06	; 6
     b7c:	5c e3       	ldi	r21, 0x3C	; 60
     b7e:	6d 89       	ldd	r22, Y+21	; 0x15
     b80:	7e 89       	ldd	r23, Y+22	; 0x16
     b82:	8f 89       	ldd	r24, Y+23	; 0x17
     b84:	98 8d       	ldd	r25, Y+24	; 0x18
     b86:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     b8a:	6d 87       	std	Y+13, r22	; 0x0d
     b8c:	7e 87       	std	Y+14, r23	; 0x0e
     b8e:	8f 87       	std	Y+15, r24	; 0x0f
     b90:	98 8b       	std	Y+16, r25	; 0x10
	qa = q0;
     b92:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <q0>
     b96:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <q0+0x1>
     b9a:	a0 91 7e 00 	lds	r26, 0x007E	; 0x80007e <q0+0x2>
     b9e:	b0 91 7f 00 	lds	r27, 0x007F	; 0x80007f <q0+0x3>
     ba2:	89 8b       	std	Y+17, r24	; 0x11
     ba4:	9a 8b       	std	Y+18, r25	; 0x12
     ba6:	ab 8b       	std	Y+19, r26	; 0x13
     ba8:	bc 8b       	std	Y+20, r27	; 0x14
	qb = q1;
     baa:	80 90 ca 00 	lds	r8, 0x00CA	; 0x8000ca <q1>
     bae:	90 90 cb 00 	lds	r9, 0x00CB	; 0x8000cb <q1+0x1>
     bb2:	a0 90 cc 00 	lds	r10, 0x00CC	; 0x8000cc <q1+0x2>
     bb6:	b0 90 cd 00 	lds	r11, 0x00CD	; 0x8000cd <q1+0x3>
	qc = q2;
     bba:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <q2>
     bbe:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <q2+0x1>
     bc2:	a0 91 c8 00 	lds	r26, 0x00C8	; 0x8000c8 <q2+0x2>
     bc6:	b0 91 c9 00 	lds	r27, 0x00C9	; 0x8000c9 <q2+0x3>
     bca:	8d 8b       	std	Y+21, r24	; 0x15
     bcc:	9e 8b       	std	Y+22, r25	; 0x16
     bce:	af 8b       	std	Y+23, r26	; 0x17
     bd0:	b8 8f       	std	Y+24, r27	; 0x18
	q0 += (-qb * gx - qc * gy - q3 * gz);
     bd2:	40 90 c2 00 	lds	r4, 0x00C2	; 0x8000c2 <q3>
     bd6:	50 90 c3 00 	lds	r5, 0x00C3	; 0x8000c3 <q3+0x1>
     bda:	60 90 c4 00 	lds	r6, 0x00C4	; 0x8000c4 <q3+0x2>
     bde:	70 90 c5 00 	lds	r7, 0x00C5	; 0x8000c5 <q3+0x3>
     be2:	c0 90 7c 00 	lds	r12, 0x007C	; 0x80007c <q0>
     be6:	d0 90 7d 00 	lds	r13, 0x007D	; 0x80007d <q0+0x1>
     bea:	e0 90 7e 00 	lds	r14, 0x007E	; 0x80007e <q0+0x2>
     bee:	f0 90 7f 00 	lds	r15, 0x007F	; 0x80007f <q0+0x3>
     bf2:	c5 01       	movw	r24, r10
     bf4:	b4 01       	movw	r22, r8
     bf6:	90 58       	subi	r25, 0x80	; 128
     bf8:	2d 81       	ldd	r18, Y+5	; 0x05
     bfa:	3e 81       	ldd	r19, Y+6	; 0x06
     bfc:	4f 81       	ldd	r20, Y+7	; 0x07
     bfe:	58 85       	ldd	r21, Y+8	; 0x08
     c00:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     c04:	69 83       	std	Y+1, r22	; 0x01
     c06:	7a 83       	std	Y+2, r23	; 0x02
     c08:	8b 83       	std	Y+3, r24	; 0x03
     c0a:	9c 83       	std	Y+4, r25	; 0x04
     c0c:	2d 89       	ldd	r18, Y+21	; 0x15
     c0e:	3e 89       	ldd	r19, Y+22	; 0x16
     c10:	4f 89       	ldd	r20, Y+23	; 0x17
     c12:	58 8d       	ldd	r21, Y+24	; 0x18
     c14:	69 85       	ldd	r22, Y+9	; 0x09
     c16:	7a 85       	ldd	r23, Y+10	; 0x0a
     c18:	8b 85       	ldd	r24, Y+11	; 0x0b
     c1a:	9c 85       	ldd	r25, Y+12	; 0x0c
     c1c:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     c20:	9b 01       	movw	r18, r22
     c22:	ac 01       	movw	r20, r24
     c24:	69 81       	ldd	r22, Y+1	; 0x01
     c26:	7a 81       	ldd	r23, Y+2	; 0x02
     c28:	8b 81       	ldd	r24, Y+3	; 0x03
     c2a:	9c 81       	ldd	r25, Y+4	; 0x04
     c2c:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__subsf3>
     c30:	69 83       	std	Y+1, r22	; 0x01
     c32:	7a 83       	std	Y+2, r23	; 0x02
     c34:	8b 83       	std	Y+3, r24	; 0x03
     c36:	9c 83       	std	Y+4, r25	; 0x04
     c38:	a3 01       	movw	r20, r6
     c3a:	92 01       	movw	r18, r4
     c3c:	6d 85       	ldd	r22, Y+13	; 0x0d
     c3e:	7e 85       	ldd	r23, Y+14	; 0x0e
     c40:	8f 85       	ldd	r24, Y+15	; 0x0f
     c42:	98 89       	ldd	r25, Y+16	; 0x10
     c44:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     c48:	9b 01       	movw	r18, r22
     c4a:	ac 01       	movw	r20, r24
     c4c:	69 81       	ldd	r22, Y+1	; 0x01
     c4e:	7a 81       	ldd	r23, Y+2	; 0x02
     c50:	8b 81       	ldd	r24, Y+3	; 0x03
     c52:	9c 81       	ldd	r25, Y+4	; 0x04
     c54:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__subsf3>
     c58:	a7 01       	movw	r20, r14
     c5a:	96 01       	movw	r18, r12
     c5c:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     c60:	60 93 7c 00 	sts	0x007C, r22	; 0x80007c <q0>
     c64:	70 93 7d 00 	sts	0x007D, r23	; 0x80007d <q0+0x1>
     c68:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <q0+0x2>
     c6c:	90 93 7f 00 	sts	0x007F, r25	; 0x80007f <q0+0x3>
	q1 += (qa * gx + qc * gz - q3 * gy);
     c70:	40 90 c2 00 	lds	r4, 0x00C2	; 0x8000c2 <q3>
     c74:	50 90 c3 00 	lds	r5, 0x00C3	; 0x8000c3 <q3+0x1>
     c78:	60 90 c4 00 	lds	r6, 0x00C4	; 0x8000c4 <q3+0x2>
     c7c:	70 90 c5 00 	lds	r7, 0x00C5	; 0x8000c5 <q3+0x3>
     c80:	c0 90 ca 00 	lds	r12, 0x00CA	; 0x8000ca <q1>
     c84:	d0 90 cb 00 	lds	r13, 0x00CB	; 0x8000cb <q1+0x1>
     c88:	e0 90 cc 00 	lds	r14, 0x00CC	; 0x8000cc <q1+0x2>
     c8c:	f0 90 cd 00 	lds	r15, 0x00CD	; 0x8000cd <q1+0x3>
     c90:	29 89       	ldd	r18, Y+17	; 0x11
     c92:	3a 89       	ldd	r19, Y+18	; 0x12
     c94:	4b 89       	ldd	r20, Y+19	; 0x13
     c96:	5c 89       	ldd	r21, Y+20	; 0x14
     c98:	6d 81       	ldd	r22, Y+5	; 0x05
     c9a:	7e 81       	ldd	r23, Y+6	; 0x06
     c9c:	8f 81       	ldd	r24, Y+7	; 0x07
     c9e:	98 85       	ldd	r25, Y+8	; 0x08
     ca0:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     ca4:	69 83       	std	Y+1, r22	; 0x01
     ca6:	7a 83       	std	Y+2, r23	; 0x02
     ca8:	8b 83       	std	Y+3, r24	; 0x03
     caa:	9c 83       	std	Y+4, r25	; 0x04
     cac:	2d 89       	ldd	r18, Y+21	; 0x15
     cae:	3e 89       	ldd	r19, Y+22	; 0x16
     cb0:	4f 89       	ldd	r20, Y+23	; 0x17
     cb2:	58 8d       	ldd	r21, Y+24	; 0x18
     cb4:	6d 85       	ldd	r22, Y+13	; 0x0d
     cb6:	7e 85       	ldd	r23, Y+14	; 0x0e
     cb8:	8f 85       	ldd	r24, Y+15	; 0x0f
     cba:	98 89       	ldd	r25, Y+16	; 0x10
     cbc:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     cc0:	9b 01       	movw	r18, r22
     cc2:	ac 01       	movw	r20, r24
     cc4:	69 81       	ldd	r22, Y+1	; 0x01
     cc6:	7a 81       	ldd	r23, Y+2	; 0x02
     cc8:	8b 81       	ldd	r24, Y+3	; 0x03
     cca:	9c 81       	ldd	r25, Y+4	; 0x04
     ccc:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     cd0:	69 83       	std	Y+1, r22	; 0x01
     cd2:	7a 83       	std	Y+2, r23	; 0x02
     cd4:	8b 83       	std	Y+3, r24	; 0x03
     cd6:	9c 83       	std	Y+4, r25	; 0x04
     cd8:	a3 01       	movw	r20, r6
     cda:	92 01       	movw	r18, r4
     cdc:	69 85       	ldd	r22, Y+9	; 0x09
     cde:	7a 85       	ldd	r23, Y+10	; 0x0a
     ce0:	8b 85       	ldd	r24, Y+11	; 0x0b
     ce2:	9c 85       	ldd	r25, Y+12	; 0x0c
     ce4:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     ce8:	9b 01       	movw	r18, r22
     cea:	ac 01       	movw	r20, r24
     cec:	69 81       	ldd	r22, Y+1	; 0x01
     cee:	7a 81       	ldd	r23, Y+2	; 0x02
     cf0:	8b 81       	ldd	r24, Y+3	; 0x03
     cf2:	9c 81       	ldd	r25, Y+4	; 0x04
     cf4:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__subsf3>
     cf8:	a7 01       	movw	r20, r14
     cfa:	96 01       	movw	r18, r12
     cfc:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     d00:	60 93 ca 00 	sts	0x00CA, r22	; 0x8000ca <q1>
     d04:	70 93 cb 00 	sts	0x00CB, r23	; 0x8000cb <q1+0x1>
     d08:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <q1+0x2>
     d0c:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <q1+0x3>
	q2 += (qa * gy - qb * gz + q3 * gx);
     d10:	40 90 c2 00 	lds	r4, 0x00C2	; 0x8000c2 <q3>
     d14:	50 90 c3 00 	lds	r5, 0x00C3	; 0x8000c3 <q3+0x1>
     d18:	60 90 c4 00 	lds	r6, 0x00C4	; 0x8000c4 <q3+0x2>
     d1c:	70 90 c5 00 	lds	r7, 0x00C5	; 0x8000c5 <q3+0x3>
     d20:	c0 90 c6 00 	lds	r12, 0x00C6	; 0x8000c6 <q2>
     d24:	d0 90 c7 00 	lds	r13, 0x00C7	; 0x8000c7 <q2+0x1>
     d28:	e0 90 c8 00 	lds	r14, 0x00C8	; 0x8000c8 <q2+0x2>
     d2c:	f0 90 c9 00 	lds	r15, 0x00C9	; 0x8000c9 <q2+0x3>
     d30:	29 89       	ldd	r18, Y+17	; 0x11
     d32:	3a 89       	ldd	r19, Y+18	; 0x12
     d34:	4b 89       	ldd	r20, Y+19	; 0x13
     d36:	5c 89       	ldd	r21, Y+20	; 0x14
     d38:	69 85       	ldd	r22, Y+9	; 0x09
     d3a:	7a 85       	ldd	r23, Y+10	; 0x0a
     d3c:	8b 85       	ldd	r24, Y+11	; 0x0b
     d3e:	9c 85       	ldd	r25, Y+12	; 0x0c
     d40:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     d44:	69 83       	std	Y+1, r22	; 0x01
     d46:	7a 83       	std	Y+2, r23	; 0x02
     d48:	8b 83       	std	Y+3, r24	; 0x03
     d4a:	9c 83       	std	Y+4, r25	; 0x04
     d4c:	a5 01       	movw	r20, r10
     d4e:	94 01       	movw	r18, r8
     d50:	6d 85       	ldd	r22, Y+13	; 0x0d
     d52:	7e 85       	ldd	r23, Y+14	; 0x0e
     d54:	8f 85       	ldd	r24, Y+15	; 0x0f
     d56:	98 89       	ldd	r25, Y+16	; 0x10
     d58:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     d5c:	9b 01       	movw	r18, r22
     d5e:	ac 01       	movw	r20, r24
     d60:	69 81       	ldd	r22, Y+1	; 0x01
     d62:	7a 81       	ldd	r23, Y+2	; 0x02
     d64:	8b 81       	ldd	r24, Y+3	; 0x03
     d66:	9c 81       	ldd	r25, Y+4	; 0x04
     d68:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__subsf3>
     d6c:	69 83       	std	Y+1, r22	; 0x01
     d6e:	7a 83       	std	Y+2, r23	; 0x02
     d70:	8b 83       	std	Y+3, r24	; 0x03
     d72:	9c 83       	std	Y+4, r25	; 0x04
     d74:	a3 01       	movw	r20, r6
     d76:	92 01       	movw	r18, r4
     d78:	6d 81       	ldd	r22, Y+5	; 0x05
     d7a:	7e 81       	ldd	r23, Y+6	; 0x06
     d7c:	8f 81       	ldd	r24, Y+7	; 0x07
     d7e:	98 85       	ldd	r25, Y+8	; 0x08
     d80:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     d84:	9b 01       	movw	r18, r22
     d86:	ac 01       	movw	r20, r24
     d88:	69 81       	ldd	r22, Y+1	; 0x01
     d8a:	7a 81       	ldd	r23, Y+2	; 0x02
     d8c:	8b 81       	ldd	r24, Y+3	; 0x03
     d8e:	9c 81       	ldd	r25, Y+4	; 0x04
     d90:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     d94:	a7 01       	movw	r20, r14
     d96:	96 01       	movw	r18, r12
     d98:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     d9c:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <q2>
     da0:	70 93 c7 00 	sts	0x00C7, r23	; 0x8000c7 <q2+0x1>
     da4:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <q2+0x2>
     da8:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <q2+0x3>
	q3 += (qa * gz + qb * gy - qc * gx);
     dac:	c0 90 c2 00 	lds	r12, 0x00C2	; 0x8000c2 <q3>
     db0:	d0 90 c3 00 	lds	r13, 0x00C3	; 0x8000c3 <q3+0x1>
     db4:	e0 90 c4 00 	lds	r14, 0x00C4	; 0x8000c4 <q3+0x2>
     db8:	f0 90 c5 00 	lds	r15, 0x00C5	; 0x8000c5 <q3+0x3>
     dbc:	29 89       	ldd	r18, Y+17	; 0x11
     dbe:	3a 89       	ldd	r19, Y+18	; 0x12
     dc0:	4b 89       	ldd	r20, Y+19	; 0x13
     dc2:	5c 89       	ldd	r21, Y+20	; 0x14
     dc4:	6d 85       	ldd	r22, Y+13	; 0x0d
     dc6:	7e 85       	ldd	r23, Y+14	; 0x0e
     dc8:	8f 85       	ldd	r24, Y+15	; 0x0f
     dca:	98 89       	ldd	r25, Y+16	; 0x10
     dcc:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     dd0:	2b 01       	movw	r4, r22
     dd2:	3c 01       	movw	r6, r24
     dd4:	a5 01       	movw	r20, r10
     dd6:	94 01       	movw	r18, r8
     dd8:	69 85       	ldd	r22, Y+9	; 0x09
     dda:	7a 85       	ldd	r23, Y+10	; 0x0a
     ddc:	8b 85       	ldd	r24, Y+11	; 0x0b
     dde:	9c 85       	ldd	r25, Y+12	; 0x0c
     de0:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     de4:	9b 01       	movw	r18, r22
     de6:	ac 01       	movw	r20, r24
     de8:	c3 01       	movw	r24, r6
     dea:	b2 01       	movw	r22, r4
     dec:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     df0:	4b 01       	movw	r8, r22
     df2:	5c 01       	movw	r10, r24
     df4:	2d 89       	ldd	r18, Y+21	; 0x15
     df6:	3e 89       	ldd	r19, Y+22	; 0x16
     df8:	4f 89       	ldd	r20, Y+23	; 0x17
     dfa:	58 8d       	ldd	r21, Y+24	; 0x18
     dfc:	6d 81       	ldd	r22, Y+5	; 0x05
     dfe:	7e 81       	ldd	r23, Y+6	; 0x06
     e00:	8f 81       	ldd	r24, Y+7	; 0x07
     e02:	98 85       	ldd	r25, Y+8	; 0x08
     e04:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     e08:	9b 01       	movw	r18, r22
     e0a:	ac 01       	movw	r20, r24
     e0c:	c5 01       	movw	r24, r10
     e0e:	b4 01       	movw	r22, r8
     e10:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <__subsf3>
     e14:	a7 01       	movw	r20, r14
     e16:	96 01       	movw	r18, r12
     e18:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     e1c:	60 93 c2 00 	sts	0x00C2, r22	; 0x8000c2 <q3>
     e20:	70 93 c3 00 	sts	0x00C3, r23	; 0x8000c3 <q3+0x1>
     e24:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <q3+0x2>
     e28:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <q3+0x3>

	// Normalise quaternion
	norm = sqrt(q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
     e2c:	c0 90 7c 00 	lds	r12, 0x007C	; 0x80007c <q0>
     e30:	d0 90 7d 00 	lds	r13, 0x007D	; 0x80007d <q0+0x1>
     e34:	e0 90 7e 00 	lds	r14, 0x007E	; 0x80007e <q0+0x2>
     e38:	f0 90 7f 00 	lds	r15, 0x007F	; 0x80007f <q0+0x3>
     e3c:	80 90 7c 00 	lds	r8, 0x007C	; 0x80007c <q0>
     e40:	90 90 7d 00 	lds	r9, 0x007D	; 0x80007d <q0+0x1>
     e44:	a0 90 7e 00 	lds	r10, 0x007E	; 0x80007e <q0+0x2>
     e48:	b0 90 7f 00 	lds	r11, 0x007F	; 0x80007f <q0+0x3>
     e4c:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <q1>
     e50:	90 91 cb 00 	lds	r25, 0x00CB	; 0x8000cb <q1+0x1>
     e54:	a0 91 cc 00 	lds	r26, 0x00CC	; 0x8000cc <q1+0x2>
     e58:	b0 91 cd 00 	lds	r27, 0x00CD	; 0x8000cd <q1+0x3>
     e5c:	8d 83       	std	Y+5, r24	; 0x05
     e5e:	9e 83       	std	Y+6, r25	; 0x06
     e60:	af 83       	std	Y+7, r26	; 0x07
     e62:	b8 87       	std	Y+8, r27	; 0x08
     e64:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <q1>
     e68:	90 91 cb 00 	lds	r25, 0x00CB	; 0x8000cb <q1+0x1>
     e6c:	a0 91 cc 00 	lds	r26, 0x00CC	; 0x8000cc <q1+0x2>
     e70:	b0 91 cd 00 	lds	r27, 0x00CD	; 0x8000cd <q1+0x3>
     e74:	89 87       	std	Y+9, r24	; 0x09
     e76:	9a 87       	std	Y+10, r25	; 0x0a
     e78:	ab 87       	std	Y+11, r26	; 0x0b
     e7a:	bc 87       	std	Y+12, r27	; 0x0c
     e7c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <q2>
     e80:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <q2+0x1>
     e84:	a0 91 c8 00 	lds	r26, 0x00C8	; 0x8000c8 <q2+0x2>
     e88:	b0 91 c9 00 	lds	r27, 0x00C9	; 0x8000c9 <q2+0x3>
     e8c:	8d 87       	std	Y+13, r24	; 0x0d
     e8e:	9e 87       	std	Y+14, r25	; 0x0e
     e90:	af 87       	std	Y+15, r26	; 0x0f
     e92:	b8 8b       	std	Y+16, r27	; 0x10
     e94:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <q2>
     e98:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <q2+0x1>
     e9c:	a0 91 c8 00 	lds	r26, 0x00C8	; 0x8000c8 <q2+0x2>
     ea0:	b0 91 c9 00 	lds	r27, 0x00C9	; 0x8000c9 <q2+0x3>
     ea4:	89 8b       	std	Y+17, r24	; 0x11
     ea6:	9a 8b       	std	Y+18, r25	; 0x12
     ea8:	ab 8b       	std	Y+19, r26	; 0x13
     eaa:	bc 8b       	std	Y+20, r27	; 0x14
     eac:	40 90 c2 00 	lds	r4, 0x00C2	; 0x8000c2 <q3>
     eb0:	50 90 c3 00 	lds	r5, 0x00C3	; 0x8000c3 <q3+0x1>
     eb4:	60 90 c4 00 	lds	r6, 0x00C4	; 0x8000c4 <q3+0x2>
     eb8:	70 90 c5 00 	lds	r7, 0x00C5	; 0x8000c5 <q3+0x3>
     ebc:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <q3>
     ec0:	90 91 c3 00 	lds	r25, 0x00C3	; 0x8000c3 <q3+0x1>
     ec4:	a0 91 c4 00 	lds	r26, 0x00C4	; 0x8000c4 <q3+0x2>
     ec8:	b0 91 c5 00 	lds	r27, 0x00C5	; 0x8000c5 <q3+0x3>
     ecc:	8d 8b       	std	Y+21, r24	; 0x15
     ece:	9e 8b       	std	Y+22, r25	; 0x16
     ed0:	af 8b       	std	Y+23, r26	; 0x17
     ed2:	b8 8f       	std	Y+24, r27	; 0x18
     ed4:	a5 01       	movw	r20, r10
     ed6:	94 01       	movw	r18, r8
     ed8:	c7 01       	movw	r24, r14
     eda:	b6 01       	movw	r22, r12
     edc:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     ee0:	69 83       	std	Y+1, r22	; 0x01
     ee2:	7a 83       	std	Y+2, r23	; 0x02
     ee4:	8b 83       	std	Y+3, r24	; 0x03
     ee6:	9c 83       	std	Y+4, r25	; 0x04
     ee8:	29 85       	ldd	r18, Y+9	; 0x09
     eea:	3a 85       	ldd	r19, Y+10	; 0x0a
     eec:	4b 85       	ldd	r20, Y+11	; 0x0b
     eee:	5c 85       	ldd	r21, Y+12	; 0x0c
     ef0:	6d 81       	ldd	r22, Y+5	; 0x05
     ef2:	7e 81       	ldd	r23, Y+6	; 0x06
     ef4:	8f 81       	ldd	r24, Y+7	; 0x07
     ef6:	98 85       	ldd	r25, Y+8	; 0x08
     ef8:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     efc:	9b 01       	movw	r18, r22
     efe:	ac 01       	movw	r20, r24
     f00:	69 81       	ldd	r22, Y+1	; 0x01
     f02:	7a 81       	ldd	r23, Y+2	; 0x02
     f04:	8b 81       	ldd	r24, Y+3	; 0x03
     f06:	9c 81       	ldd	r25, Y+4	; 0x04
     f08:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     f0c:	69 83       	std	Y+1, r22	; 0x01
     f0e:	7a 83       	std	Y+2, r23	; 0x02
     f10:	8b 83       	std	Y+3, r24	; 0x03
     f12:	9c 83       	std	Y+4, r25	; 0x04
     f14:	29 89       	ldd	r18, Y+17	; 0x11
     f16:	3a 89       	ldd	r19, Y+18	; 0x12
     f18:	4b 89       	ldd	r20, Y+19	; 0x13
     f1a:	5c 89       	ldd	r21, Y+20	; 0x14
     f1c:	6d 85       	ldd	r22, Y+13	; 0x0d
     f1e:	7e 85       	ldd	r23, Y+14	; 0x0e
     f20:	8f 85       	ldd	r24, Y+15	; 0x0f
     f22:	98 89       	ldd	r25, Y+16	; 0x10
     f24:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     f28:	9b 01       	movw	r18, r22
     f2a:	ac 01       	movw	r20, r24
     f2c:	69 81       	ldd	r22, Y+1	; 0x01
     f2e:	7a 81       	ldd	r23, Y+2	; 0x02
     f30:	8b 81       	ldd	r24, Y+3	; 0x03
     f32:	9c 81       	ldd	r25, Y+4	; 0x04
     f34:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     f38:	69 83       	std	Y+1, r22	; 0x01
     f3a:	7a 83       	std	Y+2, r23	; 0x02
     f3c:	8b 83       	std	Y+3, r24	; 0x03
     f3e:	9c 83       	std	Y+4, r25	; 0x04
     f40:	a5 01       	movw	r20, r10
     f42:	94 01       	movw	r18, r8
     f44:	c7 01       	movw	r24, r14
     f46:	b6 01       	movw	r22, r12
     f48:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     f4c:	6b 01       	movw	r12, r22
     f4e:	7c 01       	movw	r14, r24
     f50:	29 85       	ldd	r18, Y+9	; 0x09
     f52:	3a 85       	ldd	r19, Y+10	; 0x0a
     f54:	4b 85       	ldd	r20, Y+11	; 0x0b
     f56:	5c 85       	ldd	r21, Y+12	; 0x0c
     f58:	6d 81       	ldd	r22, Y+5	; 0x05
     f5a:	7e 81       	ldd	r23, Y+6	; 0x06
     f5c:	8f 81       	ldd	r24, Y+7	; 0x07
     f5e:	98 85       	ldd	r25, Y+8	; 0x08
     f60:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     f64:	9b 01       	movw	r18, r22
     f66:	ac 01       	movw	r20, r24
     f68:	c7 01       	movw	r24, r14
     f6a:	b6 01       	movw	r22, r12
     f6c:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     f70:	6b 01       	movw	r12, r22
     f72:	7c 01       	movw	r14, r24
     f74:	29 89       	ldd	r18, Y+17	; 0x11
     f76:	3a 89       	ldd	r19, Y+18	; 0x12
     f78:	4b 89       	ldd	r20, Y+19	; 0x13
     f7a:	5c 89       	ldd	r21, Y+20	; 0x14
     f7c:	6d 85       	ldd	r22, Y+13	; 0x0d
     f7e:	7e 85       	ldd	r23, Y+14	; 0x0e
     f80:	8f 85       	ldd	r24, Y+15	; 0x0f
     f82:	98 89       	ldd	r25, Y+16	; 0x10
     f84:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     f88:	9b 01       	movw	r18, r22
     f8a:	ac 01       	movw	r20, r24
     f8c:	c7 01       	movw	r24, r14
     f8e:	b6 01       	movw	r22, r12
     f90:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     f94:	6b 01       	movw	r12, r22
     f96:	7c 01       	movw	r14, r24
     f98:	2d 89       	ldd	r18, Y+21	; 0x15
     f9a:	3e 89       	ldd	r19, Y+22	; 0x16
     f9c:	4f 89       	ldd	r20, Y+23	; 0x17
     f9e:	58 8d       	ldd	r21, Y+24	; 0x18
     fa0:	c3 01       	movw	r24, r6
     fa2:	b2 01       	movw	r22, r4
     fa4:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
     fa8:	9b 01       	movw	r18, r22
     faa:	ac 01       	movw	r20, r24
     fac:	c7 01       	movw	r24, r14
     fae:	b6 01       	movw	r22, r12
     fb0:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__addsf3>
     fb4:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <sqrt>
     fb8:	6b 01       	movw	r12, r22
     fba:	7c 01       	movw	r14, r24
	q0 /= norm;
     fbc:	60 91 7c 00 	lds	r22, 0x007C	; 0x80007c <q0>
     fc0:	70 91 7d 00 	lds	r23, 0x007D	; 0x80007d <q0+0x1>
     fc4:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <q0+0x2>
     fc8:	90 91 7f 00 	lds	r25, 0x007F	; 0x80007f <q0+0x3>
     fcc:	a7 01       	movw	r20, r14
     fce:	96 01       	movw	r18, r12
     fd0:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
     fd4:	60 93 7c 00 	sts	0x007C, r22	; 0x80007c <q0>
     fd8:	70 93 7d 00 	sts	0x007D, r23	; 0x80007d <q0+0x1>
     fdc:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <q0+0x2>
     fe0:	90 93 7f 00 	sts	0x007F, r25	; 0x80007f <q0+0x3>
	q1 /= norm;
     fe4:	60 91 ca 00 	lds	r22, 0x00CA	; 0x8000ca <q1>
     fe8:	70 91 cb 00 	lds	r23, 0x00CB	; 0x8000cb <q1+0x1>
     fec:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <q1+0x2>
     ff0:	90 91 cd 00 	lds	r25, 0x00CD	; 0x8000cd <q1+0x3>
     ff4:	a7 01       	movw	r20, r14
     ff6:	96 01       	movw	r18, r12
     ff8:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
     ffc:	60 93 ca 00 	sts	0x00CA, r22	; 0x8000ca <q1>
    1000:	70 93 cb 00 	sts	0x00CB, r23	; 0x8000cb <q1+0x1>
    1004:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <q1+0x2>
    1008:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <q1+0x3>
	q2 /= norm;
    100c:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <q2>
    1010:	70 91 c7 00 	lds	r23, 0x00C7	; 0x8000c7 <q2+0x1>
    1014:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <q2+0x2>
    1018:	90 91 c9 00 	lds	r25, 0x00C9	; 0x8000c9 <q2+0x3>
    101c:	a7 01       	movw	r20, r14
    101e:	96 01       	movw	r18, r12
    1020:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
    1024:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <q2>
    1028:	70 93 c7 00 	sts	0x00C7, r23	; 0x8000c7 <q2+0x1>
    102c:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <q2+0x2>
    1030:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <q2+0x3>
	q3 /= norm;
    1034:	60 91 c2 00 	lds	r22, 0x00C2	; 0x8000c2 <q3>
    1038:	70 91 c3 00 	lds	r23, 0x00C3	; 0x8000c3 <q3+0x1>
    103c:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <q3+0x2>
    1040:	90 91 c5 00 	lds	r25, 0x00C5	; 0x8000c5 <q3+0x3>
    1044:	a7 01       	movw	r20, r14
    1046:	96 01       	movw	r18, r12
    1048:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
    104c:	60 93 c2 00 	sts	0x00C2, r22	; 0x8000c2 <q3>
    1050:	70 93 c3 00 	sts	0x00C3, r23	; 0x8000c3 <q3+0x1>
    1054:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <q3+0x2>
    1058:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <q3+0x3>
}
    105c:	a4 96       	adiw	r28, 0x24	; 36
    105e:	0f b6       	in	r0, 0x3f	; 63
    1060:	f8 94       	cli
    1062:	de bf       	out	0x3e, r29	; 62
    1064:	0f be       	out	0x3f, r0	; 63
    1066:	cd bf       	out	0x3d, r28	; 61
    1068:	df 91       	pop	r29
    106a:	cf 91       	pop	r28
    106c:	1f 91       	pop	r17
    106e:	0f 91       	pop	r16
    1070:	ff 90       	pop	r15
    1072:	ef 90       	pop	r14
    1074:	df 90       	pop	r13
    1076:	cf 90       	pop	r12
    1078:	bf 90       	pop	r11
    107a:	af 90       	pop	r10
    107c:	9f 90       	pop	r9
    107e:	8f 90       	pop	r8
    1080:	7f 90       	pop	r7
    1082:	6f 90       	pop	r6
    1084:	5f 90       	pop	r5
    1086:	4f 90       	pop	r4
    1088:	08 95       	ret

0000108a <mpu6050_updateQuaternion>:

/*
 * update quaternion
 */
void mpu6050_updateQuaternion() {
    108a:	4f 92       	push	r4
    108c:	5f 92       	push	r5
    108e:	6f 92       	push	r6
    1090:	7f 92       	push	r7
    1092:	af 92       	push	r10
    1094:	bf 92       	push	r11
    1096:	cf 92       	push	r12
    1098:	df 92       	push	r13
    109a:	ef 92       	push	r14
    109c:	ff 92       	push	r15
    109e:	0f 93       	push	r16
    10a0:	1f 93       	push	r17
    10a2:	cf 93       	push	r28
    10a4:	df 93       	push	r29
    10a6:	cd b7       	in	r28, 0x3d	; 61
    10a8:	de b7       	in	r29, 0x3e	; 62
    10aa:	2b 97       	sbiw	r28, 0x0b	; 11
    10ac:	0f b6       	in	r0, 0x3f	; 63
    10ae:	f8 94       	cli
    10b0:	de bf       	out	0x3e, r29	; 62
    10b2:	0f be       	out	0x3f, r0	; 63
    10b4:	cd bf       	out	0x3d, r28	; 61
	double gyrs = 0;
	double gzrs = 0;

	//get raw data
	while(1) {
		mpu6050_readBit(MPU6050_RA_INT_STATUS, MPU6050_INTERRUPT_DATA_RDY_BIT, (uint8_t *)buffer);
    10b6:	4e ec       	ldi	r20, 0xCE	; 206
    10b8:	50 e0       	ldi	r21, 0x00	; 0
    10ba:	60 e0       	ldi	r22, 0x00	; 0
    10bc:	8a e3       	ldi	r24, 0x3A	; 58
    10be:	0e 94 20 02 	call	0x440	; 0x440 <mpu6050_readBit>
		if(buffer[0])
    10c2:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <buffer>
    10c6:	81 11       	cpse	r24, r1
    10c8:	05 c0       	rjmp	.+10     	; 0x10d4 <mpu6050_updateQuaternion+0x4a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    10ca:	23 e0       	ldi	r18, 0x03	; 3
    10cc:	2a 95       	dec	r18
    10ce:	f1 f7       	brne	.-4      	; 0x10cc <mpu6050_updateQuaternion+0x42>
    10d0:	00 00       	nop
    10d2:	f1 cf       	rjmp	.-30     	; 0x10b6 <mpu6050_updateQuaternion+0x2c>
			break;
		_delay_us(10);
	}

	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14, (uint8_t *)buffer);
    10d4:	4e ec       	ldi	r20, 0xCE	; 206
    10d6:	50 e0       	ldi	r21, 0x00	; 0
    10d8:	6e e0       	ldi	r22, 0x0E	; 14
    10da:	8b e3       	ldi	r24, 0x3B	; 59
    10dc:	0e 94 94 01 	call	0x328	; 0x328 <mpu6050_readBytes>
    ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    10e0:	ee ec       	ldi	r30, 0xCE	; 206
    10e2:	f0 e0       	ldi	r31, 0x00	; 0
    10e4:	80 81       	ld	r24, Z
    10e6:	61 81       	ldd	r22, Z+1	; 0x01
    ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    10e8:	02 81       	ldd	r16, Z+2	; 0x02
    10ea:	33 81       	ldd	r19, Z+3	; 0x03
    10ec:	39 87       	std	Y+9, r19	; 0x09
    az = (((int16_t)buffer[4]) << 8) | buffer[5];
    10ee:	14 81       	ldd	r17, Z+4	; 0x04
    10f0:	95 81       	ldd	r25, Z+5	; 0x05
    10f2:	9a 87       	std	Y+10, r25	; 0x0a
    gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    10f4:	60 84       	ldd	r6, Z+8	; 0x08
    10f6:	71 84       	ldd	r7, Z+9	; 0x09
    gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    10f8:	52 84       	ldd	r5, Z+10	; 0x0a
    10fa:	43 84       	ldd	r4, Z+11	; 0x0b
    gz = (((int16_t)buffer[12]) << 8) | buffer[13];
    10fc:	e4 84       	ldd	r14, Z+12	; 0x0c
    10fe:	f5 84       	ldd	r15, Z+13	; 0x0d
	gyrs = (double)(gy)/MPU6050_GGAIN*0.01745329; //degree to radians
	gzrs = (double)(gz)/MPU6050_GGAIN*0.01745329; //degree to radians
	#endif

    //compute data
    mpu6050_mahonyUpdate(gxrs, gyrs, gzrs, axg, ayg, azg);
    1100:	70 e0       	ldi	r23, 0x00	; 0
    1102:	78 2b       	or	r23, r24
    1104:	07 2e       	mov	r0, r23
    1106:	00 0c       	add	r0, r0
    1108:	88 0b       	sbc	r24, r24
    110a:	99 0b       	sbc	r25, r25
    110c:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__floatsisf>
    1110:	20 e0       	ldi	r18, 0x00	; 0
    1112:	30 e0       	ldi	r19, 0x00	; 0
    1114:	40 e8       	ldi	r20, 0x80	; 128
    1116:	58 e3       	ldi	r21, 0x38	; 56
    1118:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
    111c:	5b 01       	movw	r10, r22
    111e:	6c 01       	movw	r12, r24
    1120:	6f 2d       	mov	r22, r15
    1122:	70 e0       	ldi	r23, 0x00	; 0
    1124:	7e 29       	or	r23, r14
    1126:	63 5e       	subi	r22, 0xE3	; 227
    1128:	7f 4f       	sbci	r23, 0xFF	; 255
    112a:	07 2e       	mov	r0, r23
    112c:	00 0c       	add	r0, r0
    112e:	88 0b       	sbc	r24, r24
    1130:	99 0b       	sbc	r25, r25
    1132:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__floatsisf>
    1136:	23 e3       	ldi	r18, 0x33	; 51
    1138:	33 e3       	ldi	r19, 0x33	; 51
    113a:	43 e8       	ldi	r20, 0x83	; 131
    113c:	51 e4       	ldi	r21, 0x41	; 65
    113e:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
    1142:	24 e3       	ldi	r18, 0x34	; 52
    1144:	3a ef       	ldi	r19, 0xFA	; 250
    1146:	4e e8       	ldi	r20, 0x8E	; 142
    1148:	5c e3       	ldi	r21, 0x3C	; 60
    114a:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
    114e:	69 83       	std	Y+1, r22	; 0x01
    1150:	7a 83       	std	Y+2, r23	; 0x02
    1152:	8b 83       	std	Y+3, r24	; 0x03
    1154:	9c 83       	std	Y+4, r25	; 0x04
    1156:	64 2d       	mov	r22, r4
    1158:	70 e0       	ldi	r23, 0x00	; 0
    115a:	75 29       	or	r23, r5
    115c:	69 50       	subi	r22, 0x09	; 9
    115e:	71 09       	sbc	r23, r1
    1160:	07 2e       	mov	r0, r23
    1162:	00 0c       	add	r0, r0
    1164:	88 0b       	sbc	r24, r24
    1166:	99 0b       	sbc	r25, r25
    1168:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__floatsisf>
    116c:	23 e3       	ldi	r18, 0x33	; 51
    116e:	33 e3       	ldi	r19, 0x33	; 51
    1170:	43 e8       	ldi	r20, 0x83	; 131
    1172:	51 e4       	ldi	r21, 0x41	; 65
    1174:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
    1178:	24 e3       	ldi	r18, 0x34	; 52
    117a:	3a ef       	ldi	r19, 0xFA	; 250
    117c:	4e e8       	ldi	r20, 0x8E	; 142
    117e:	5c e3       	ldi	r21, 0x3C	; 60
    1180:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
    1184:	6d 83       	std	Y+5, r22	; 0x05
    1186:	7e 83       	std	Y+6, r23	; 0x06
    1188:	8f 83       	std	Y+7, r24	; 0x07
    118a:	98 87       	std	Y+8, r25	; 0x08
    118c:	67 2d       	mov	r22, r7
    118e:	70 e0       	ldi	r23, 0x00	; 0
    1190:	76 29       	or	r23, r6
    1192:	66 5d       	subi	r22, 0xD6	; 214
    1194:	7f 4f       	sbci	r23, 0xFF	; 255
    1196:	07 2e       	mov	r0, r23
    1198:	00 0c       	add	r0, r0
    119a:	88 0b       	sbc	r24, r24
    119c:	99 0b       	sbc	r25, r25
    119e:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__floatsisf>
    11a2:	23 e3       	ldi	r18, 0x33	; 51
    11a4:	33 e3       	ldi	r19, 0x33	; 51
    11a6:	43 e8       	ldi	r20, 0x83	; 131
    11a8:	51 e4       	ldi	r21, 0x41	; 65
    11aa:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__divsf3>
    11ae:	24 e3       	ldi	r18, 0x34	; 52
    11b0:	3a ef       	ldi	r19, 0xFA	; 250
    11b2:	4e e8       	ldi	r20, 0x8E	; 142
    11b4:	5c e3       	ldi	r21, 0x3C	; 60
    11b6:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
    11ba:	2b 01       	movw	r4, r22
    11bc:	3c 01       	movw	r6, r24
    11be:	2a 85       	ldd	r18, Y+10	; 0x0a
    11c0:	62 2f       	mov	r22, r18
    11c2:	70 e0       	ldi	r23, 0x00	; 0
    11c4:	71 2b       	or	r23, r17
    11c6:	07 2e       	mov	r0, r23
    11c8:	00 0c       	add	r0, r0
    11ca:	88 0b       	sbc	r24, r24
    11cc:	99 0b       	sbc	r25, r25
    11ce:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__floatsisf>
    11d2:	20 e0       	ldi	r18, 0x00	; 0
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	40 e8       	ldi	r20, 0x80	; 128
    11d8:	58 e3       	ldi	r21, 0x38	; 56
    11da:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
    11de:	9f 93       	push	r25
    11e0:	8f 93       	push	r24
    11e2:	7f 93       	push	r23
    11e4:	6f 93       	push	r22
    11e6:	39 85       	ldd	r19, Y+9	; 0x09
    11e8:	63 2f       	mov	r22, r19
    11ea:	70 e0       	ldi	r23, 0x00	; 0
    11ec:	cb 01       	movw	r24, r22
    11ee:	90 2b       	or	r25, r16
    11f0:	9b 87       	std	Y+11, r25	; 0x0b
    11f2:	8a 87       	std	Y+10, r24	; 0x0a
    11f4:	bc 01       	movw	r22, r24
    11f6:	99 0f       	add	r25, r25
    11f8:	88 0b       	sbc	r24, r24
    11fa:	99 0b       	sbc	r25, r25
    11fc:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__floatsisf>
    1200:	20 e0       	ldi	r18, 0x00	; 0
    1202:	30 e0       	ldi	r19, 0x00	; 0
    1204:	40 e8       	ldi	r20, 0x80	; 128
    1206:	58 e3       	ldi	r21, 0x38	; 56
    1208:	0e 94 80 0b 	call	0x1700	; 0x1700 <__mulsf3>
    120c:	9f 93       	push	r25
    120e:	8f 93       	push	r24
    1210:	7f 93       	push	r23
    1212:	6f 93       	push	r22
    1214:	e9 80       	ldd	r14, Y+1	; 0x01
    1216:	fa 80       	ldd	r15, Y+2	; 0x02
    1218:	0b 81       	ldd	r16, Y+3	; 0x03
    121a:	1c 81       	ldd	r17, Y+4	; 0x04
    121c:	2d 81       	ldd	r18, Y+5	; 0x05
    121e:	3e 81       	ldd	r19, Y+6	; 0x06
    1220:	4f 81       	ldd	r20, Y+7	; 0x07
    1222:	58 85       	ldd	r21, Y+8	; 0x08
    1224:	c3 01       	movw	r24, r6
    1226:	b2 01       	movw	r22, r4
    1228:	0e 94 41 03 	call	0x682	; 0x682 <mpu6050_mahonyUpdate>
}
    122c:	0f b6       	in	r0, 0x3f	; 63
    122e:	f8 94       	cli
    1230:	de bf       	out	0x3e, r29	; 62
    1232:	0f be       	out	0x3f, r0	; 63
    1234:	cd bf       	out	0x3d, r28	; 61
    1236:	2b 96       	adiw	r28, 0x0b	; 11
    1238:	0f b6       	in	r0, 0x3f	; 63
    123a:	f8 94       	cli
    123c:	de bf       	out	0x3e, r29	; 62
    123e:	0f be       	out	0x3f, r0	; 63
    1240:	cd bf       	out	0x3d, r28	; 61
    1242:	df 91       	pop	r29
    1244:	cf 91       	pop	r28
    1246:	1f 91       	pop	r17
    1248:	0f 91       	pop	r16
    124a:	ff 90       	pop	r15
    124c:	ef 90       	pop	r14
    124e:	df 90       	pop	r13
    1250:	cf 90       	pop	r12
    1252:	bf 90       	pop	r11
    1254:	af 90       	pop	r10
    1256:	7f 90       	pop	r7
    1258:	6f 90       	pop	r6
    125a:	5f 90       	pop	r5
    125c:	4f 90       	pop	r4
    125e:	08 95       	ret

00001260 <__vector_11>:

/*
 * update timer for attitude
 */
ISR(TIMER0_OVF_vect) {
    1260:	1f 92       	push	r1
    1262:	0f 92       	push	r0
    1264:	0f b6       	in	r0, 0x3f	; 63
    1266:	0f 92       	push	r0
    1268:	11 24       	eor	r1, r1
    126a:	2f 93       	push	r18
    126c:	3f 93       	push	r19
    126e:	4f 93       	push	r20
    1270:	5f 93       	push	r21
    1272:	6f 93       	push	r22
    1274:	7f 93       	push	r23
    1276:	8f 93       	push	r24
    1278:	9f 93       	push	r25
    127a:	af 93       	push	r26
    127c:	bf 93       	push	r27
    127e:	ef 93       	push	r30
    1280:	ff 93       	push	r31
	mpu6050_updateQuaternion();
    1282:	0e 94 45 08 	call	0x108a	; 0x108a <mpu6050_updateQuaternion>
}
    1286:	ff 91       	pop	r31
    1288:	ef 91       	pop	r30
    128a:	bf 91       	pop	r27
    128c:	af 91       	pop	r26
    128e:	9f 91       	pop	r25
    1290:	8f 91       	pop	r24
    1292:	7f 91       	pop	r23
    1294:	6f 91       	pop	r22
    1296:	5f 91       	pop	r21
    1298:	4f 91       	pop	r20
    129a:	3f 91       	pop	r19
    129c:	2f 91       	pop	r18
    129e:	0f 90       	pop	r0
    12a0:	0f be       	out	0x3f, r0	; 63
    12a2:	0f 90       	pop	r0
    12a4:	1f 90       	pop	r1
    12a6:	18 95       	reti

000012a8 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
    12a8:	11 b8       	out	0x01, r1	; 1
    12aa:	8c e0       	ldi	r24, 0x0C	; 12
    12ac:	80 b9       	out	0x00, r24	; 0
    12ae:	08 95       	ret

000012b0 <i2c_start>:
    12b0:	94 ea       	ldi	r25, 0xA4	; 164
    12b2:	96 bf       	out	0x36, r25	; 54
    12b4:	4f ef       	ldi	r20, 0xFF	; 255
    12b6:	50 e0       	ldi	r21, 0x00	; 0
    12b8:	60 e0       	ldi	r22, 0x00	; 0
    12ba:	70 e0       	ldi	r23, 0x00	; 0
    12bc:	06 b6       	in	r0, 0x36	; 54
    12be:	07 fc       	sbrc	r0, 7
    12c0:	06 c0       	rjmp	.+12     	; 0x12ce <i2c_start+0x1e>
    12c2:	41 50       	subi	r20, 0x01	; 1
    12c4:	51 09       	sbc	r21, r1
    12c6:	61 09       	sbc	r22, r1
    12c8:	71 09       	sbc	r23, r1
    12ca:	c0 f7       	brcc	.-16     	; 0x12bc <i2c_start+0xc>
    12cc:	04 c0       	rjmp	.+8      	; 0x12d6 <i2c_start+0x26>
    12ce:	45 2b       	or	r20, r21
    12d0:	46 2b       	or	r20, r22
    12d2:	47 2b       	or	r20, r23
    12d4:	11 f1       	breq	.+68     	; 0x131a <i2c_start+0x6a>
    12d6:	91 b1       	in	r25, 0x01	; 1
    12d8:	98 7f       	andi	r25, 0xF8	; 248
    12da:	98 30       	cpi	r25, 0x08	; 8
    12dc:	11 f0       	breq	.+4      	; 0x12e2 <i2c_start+0x32>
    12de:	90 31       	cpi	r25, 0x10	; 16
    12e0:	f1 f4       	brne	.+60     	; 0x131e <i2c_start+0x6e>
    12e2:	83 b9       	out	0x03, r24	; 3
    12e4:	84 e8       	ldi	r24, 0x84	; 132
    12e6:	86 bf       	out	0x36, r24	; 54
    12e8:	8f ef       	ldi	r24, 0xFF	; 255
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	a0 e0       	ldi	r26, 0x00	; 0
    12ee:	b0 e0       	ldi	r27, 0x00	; 0
    12f0:	06 b6       	in	r0, 0x36	; 54
    12f2:	07 fc       	sbrc	r0, 7
    12f4:	05 c0       	rjmp	.+10     	; 0x1300 <i2c_start+0x50>
    12f6:	01 97       	sbiw	r24, 0x01	; 1
    12f8:	a1 09       	sbc	r26, r1
    12fa:	b1 09       	sbc	r27, r1
    12fc:	c8 f7       	brcc	.-14     	; 0x12f0 <i2c_start+0x40>
    12fe:	04 c0       	rjmp	.+8      	; 0x1308 <i2c_start+0x58>
    1300:	89 2b       	or	r24, r25
    1302:	8a 2b       	or	r24, r26
    1304:	8b 2b       	or	r24, r27
    1306:	69 f0       	breq	.+26     	; 0x1322 <i2c_start+0x72>
    1308:	91 b1       	in	r25, 0x01	; 1
    130a:	98 7f       	andi	r25, 0xF8	; 248
    130c:	98 31       	cpi	r25, 0x18	; 24
    130e:	59 f0       	breq	.+22     	; 0x1326 <i2c_start+0x76>
    1310:	81 e0       	ldi	r24, 0x01	; 1
    1312:	90 34       	cpi	r25, 0x40	; 64
    1314:	49 f4       	brne	.+18     	; 0x1328 <i2c_start+0x78>
    1316:	80 e0       	ldi	r24, 0x00	; 0
    1318:	08 95       	ret
    131a:	81 e0       	ldi	r24, 0x01	; 1
    131c:	08 95       	ret
    131e:	81 e0       	ldi	r24, 0x01	; 1
    1320:	08 95       	ret
    1322:	81 e0       	ldi	r24, 0x01	; 1
    1324:	08 95       	ret
    1326:	80 e0       	ldi	r24, 0x00	; 0
    1328:	08 95       	ret

0000132a <i2c_stop>:
void i2c_stop(void)
{
	uint32_t  i2c_timer = 0;

    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    132a:	84 e9       	ldi	r24, 0x94	; 148
    132c:	86 bf       	out	0x36, r24	; 54
	
	// wait until stop condition is executed and bus released
	i2c_timer = I2C_TIMER_DELAY;
	while((TWCR & (1<<TWSTO)) && i2c_timer--);
    132e:	80 e0       	ldi	r24, 0x00	; 0
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	06 b6       	in	r0, 0x36	; 54
    1334:	04 fe       	sbrs	r0, 4
    1336:	05 c0       	rjmp	.+10     	; 0x1342 <i2c_stop+0x18>
    1338:	01 96       	adiw	r24, 0x01	; 1
    133a:	81 15       	cp	r24, r1
    133c:	21 e0       	ldi	r18, 0x01	; 1
    133e:	92 07       	cpc	r25, r18
    1340:	c1 f7       	brne	.-16     	; 0x1332 <i2c_stop+0x8>
    1342:	08 95       	ret

00001344 <i2c_write>:
{	
	uint32_t  i2c_timer = 0;
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
    1344:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWINT) | (1<<TWEN);
    1346:	84 e8       	ldi	r24, 0x84	; 132
    1348:	86 bf       	out	0x36, r24	; 54

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
    134a:	8f ef       	ldi	r24, 0xFF	; 255
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	a0 e0       	ldi	r26, 0x00	; 0
    1350:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1352:	06 b6       	in	r0, 0x36	; 54
    1354:	07 fc       	sbrc	r0, 7
    1356:	05 c0       	rjmp	.+10     	; 0x1362 <i2c_write+0x1e>
    1358:	01 97       	sbiw	r24, 0x01	; 1
    135a:	a1 09       	sbc	r26, r1
    135c:	b1 09       	sbc	r27, r1
    135e:	c8 f7       	brcc	.-14     	; 0x1352 <i2c_write+0xe>
    1360:	04 c0       	rjmp	.+8      	; 0x136a <i2c_write+0x26>
	if(i2c_timer == 0)
    1362:	89 2b       	or	r24, r25
    1364:	8a 2b       	or	r24, r26
    1366:	8b 2b       	or	r24, r27
    1368:	39 f0       	breq	.+14     	; 0x1378 <i2c_write+0x34>
		return 1;

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
    136a:	91 b1       	in	r25, 0x01	; 1

	// wait until transmission completed
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 1;
    136c:	98 7f       	andi	r25, 0xF8	; 248
    136e:	81 e0       	ldi	r24, 0x01	; 1
    1370:	98 32       	cpi	r25, 0x28	; 40
    1372:	19 f4       	brne	.+6      	; 0x137a <i2c_write+0x36>
    1374:	80 e0       	ldi	r24, 0x00	; 0
    1376:	08 95       	ret
    1378:	81 e0       	ldi	r24, 0x01	; 1
	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
    137a:	08 95       	ret

0000137c <i2c_readAck>:
*************************************************************************/
unsigned char i2c_readAck(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    137c:	84 ec       	ldi	r24, 0xC4	; 196
    137e:	86 bf       	out	0x36, r24	; 54
	i2c_timer = I2C_TIMER_DELAY;
    1380:	8f ef       	ldi	r24, 0xFF	; 255
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	a0 e0       	ldi	r26, 0x00	; 0
    1386:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    1388:	06 b6       	in	r0, 0x36	; 54
    138a:	07 fc       	sbrc	r0, 7
    138c:	05 c0       	rjmp	.+10     	; 0x1398 <i2c_readAck+0x1c>
    138e:	01 97       	sbiw	r24, 0x01	; 1
    1390:	a1 09       	sbc	r26, r1
    1392:	b1 09       	sbc	r27, r1
    1394:	c8 f7       	brcc	.-14     	; 0x1388 <i2c_readAck+0xc>
    1396:	04 c0       	rjmp	.+8      	; 0x13a0 <i2c_readAck+0x24>
	if(i2c_timer == 0)
    1398:	89 2b       	or	r24, r25
    139a:	8a 2b       	or	r24, r26
    139c:	8b 2b       	or	r24, r27
    139e:	11 f0       	breq	.+4      	; 0x13a4 <i2c_readAck+0x28>
		return 0;

    return TWDR;
    13a0:	83 b1       	in	r24, 0x03	; 3
    13a2:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    13a4:	80 e0       	ldi	r24, 0x00	; 0

    return TWDR;

}/* i2c_readAck */
    13a6:	08 95       	ret

000013a8 <i2c_readNak>:
*************************************************************************/
unsigned char i2c_readNak(void)
{
	uint32_t  i2c_timer = 0;

	TWCR = (1<<TWINT) | (1<<TWEN);
    13a8:	84 e8       	ldi	r24, 0x84	; 132
    13aa:	86 bf       	out	0x36, r24	; 54
	i2c_timer = I2C_TIMER_DELAY;
    13ac:	8f ef       	ldi	r24, 0xFF	; 255
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	a0 e0       	ldi	r26, 0x00	; 0
    13b2:	b0 e0       	ldi	r27, 0x00	; 0
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
    13b4:	06 b6       	in	r0, 0x36	; 54
    13b6:	07 fc       	sbrc	r0, 7
    13b8:	05 c0       	rjmp	.+10     	; 0x13c4 <i2c_readNak+0x1c>
    13ba:	01 97       	sbiw	r24, 0x01	; 1
    13bc:	a1 09       	sbc	r26, r1
    13be:	b1 09       	sbc	r27, r1
    13c0:	c8 f7       	brcc	.-14     	; 0x13b4 <i2c_readNak+0xc>
    13c2:	04 c0       	rjmp	.+8      	; 0x13cc <i2c_readNak+0x24>
	if(i2c_timer == 0)
    13c4:	89 2b       	or	r24, r25
    13c6:	8a 2b       	or	r24, r26
    13c8:	8b 2b       	or	r24, r27
    13ca:	11 f0       	breq	.+4      	; 0x13d0 <i2c_readNak+0x28>
		return 0;
	
    return TWDR;
    13cc:	83 b1       	in	r24, 0x03	; 3
    13ce:	08 95       	ret

	TWCR = (1<<TWINT) | (1<<TWEN);
	i2c_timer = I2C_TIMER_DELAY;
	while(!(TWCR & (1<<TWINT)) && i2c_timer--);
	if(i2c_timer == 0)
		return 0;
    13d0:	80 e0       	ldi	r24, 0x00	; 0
	
    return TWDR;

}/* i2c_readNak */
    13d2:	08 95       	ret

000013d4 <__subsf3>:
    13d4:	50 58       	subi	r21, 0x80	; 128

000013d6 <__addsf3>:
    13d6:	bb 27       	eor	r27, r27
    13d8:	aa 27       	eor	r26, r26
    13da:	0e 94 02 0a 	call	0x1404	; 0x1404 <__addsf3x>
    13de:	0c 94 46 0b 	jmp	0x168c	; 0x168c <__fp_round>
    13e2:	0e 94 38 0b 	call	0x1670	; 0x1670 <__fp_pscA>
    13e6:	38 f0       	brcs	.+14     	; 0x13f6 <__addsf3+0x20>
    13e8:	0e 94 3f 0b 	call	0x167e	; 0x167e <__fp_pscB>
    13ec:	20 f0       	brcs	.+8      	; 0x13f6 <__addsf3+0x20>
    13ee:	39 f4       	brne	.+14     	; 0x13fe <__addsf3+0x28>
    13f0:	9f 3f       	cpi	r25, 0xFF	; 255
    13f2:	19 f4       	brne	.+6      	; 0x13fa <__addsf3+0x24>
    13f4:	26 f4       	brtc	.+8      	; 0x13fe <__addsf3+0x28>
    13f6:	0c 94 35 0b 	jmp	0x166a	; 0x166a <__fp_nan>
    13fa:	0e f4       	brtc	.+2      	; 0x13fe <__addsf3+0x28>
    13fc:	e0 95       	com	r30
    13fe:	e7 fb       	bst	r30, 7
    1400:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <__fp_inf>

00001404 <__addsf3x>:
    1404:	e9 2f       	mov	r30, r25
    1406:	0e 94 57 0b 	call	0x16ae	; 0x16ae <__fp_split3>
    140a:	58 f3       	brcs	.-42     	; 0x13e2 <__addsf3+0xc>
    140c:	ba 17       	cp	r27, r26
    140e:	62 07       	cpc	r22, r18
    1410:	73 07       	cpc	r23, r19
    1412:	84 07       	cpc	r24, r20
    1414:	95 07       	cpc	r25, r21
    1416:	20 f0       	brcs	.+8      	; 0x1420 <__addsf3x+0x1c>
    1418:	79 f4       	brne	.+30     	; 0x1438 <__addsf3x+0x34>
    141a:	a6 f5       	brtc	.+104    	; 0x1484 <__addsf3x+0x80>
    141c:	0c 94 79 0b 	jmp	0x16f2	; 0x16f2 <__fp_zero>
    1420:	0e f4       	brtc	.+2      	; 0x1424 <__addsf3x+0x20>
    1422:	e0 95       	com	r30
    1424:	0b 2e       	mov	r0, r27
    1426:	ba 2f       	mov	r27, r26
    1428:	a0 2d       	mov	r26, r0
    142a:	0b 01       	movw	r0, r22
    142c:	b9 01       	movw	r22, r18
    142e:	90 01       	movw	r18, r0
    1430:	0c 01       	movw	r0, r24
    1432:	ca 01       	movw	r24, r20
    1434:	a0 01       	movw	r20, r0
    1436:	11 24       	eor	r1, r1
    1438:	ff 27       	eor	r31, r31
    143a:	59 1b       	sub	r21, r25
    143c:	99 f0       	breq	.+38     	; 0x1464 <__addsf3x+0x60>
    143e:	59 3f       	cpi	r21, 0xF9	; 249
    1440:	50 f4       	brcc	.+20     	; 0x1456 <__addsf3x+0x52>
    1442:	50 3e       	cpi	r21, 0xE0	; 224
    1444:	68 f1       	brcs	.+90     	; 0x14a0 <__addsf3x+0x9c>
    1446:	1a 16       	cp	r1, r26
    1448:	f0 40       	sbci	r31, 0x00	; 0
    144a:	a2 2f       	mov	r26, r18
    144c:	23 2f       	mov	r18, r19
    144e:	34 2f       	mov	r19, r20
    1450:	44 27       	eor	r20, r20
    1452:	58 5f       	subi	r21, 0xF8	; 248
    1454:	f3 cf       	rjmp	.-26     	; 0x143c <__addsf3x+0x38>
    1456:	46 95       	lsr	r20
    1458:	37 95       	ror	r19
    145a:	27 95       	ror	r18
    145c:	a7 95       	ror	r26
    145e:	f0 40       	sbci	r31, 0x00	; 0
    1460:	53 95       	inc	r21
    1462:	c9 f7       	brne	.-14     	; 0x1456 <__addsf3x+0x52>
    1464:	7e f4       	brtc	.+30     	; 0x1484 <__addsf3x+0x80>
    1466:	1f 16       	cp	r1, r31
    1468:	ba 0b       	sbc	r27, r26
    146a:	62 0b       	sbc	r22, r18
    146c:	73 0b       	sbc	r23, r19
    146e:	84 0b       	sbc	r24, r20
    1470:	ba f0       	brmi	.+46     	; 0x14a0 <__addsf3x+0x9c>
    1472:	91 50       	subi	r25, 0x01	; 1
    1474:	a1 f0       	breq	.+40     	; 0x149e <__addsf3x+0x9a>
    1476:	ff 0f       	add	r31, r31
    1478:	bb 1f       	adc	r27, r27
    147a:	66 1f       	adc	r22, r22
    147c:	77 1f       	adc	r23, r23
    147e:	88 1f       	adc	r24, r24
    1480:	c2 f7       	brpl	.-16     	; 0x1472 <__addsf3x+0x6e>
    1482:	0e c0       	rjmp	.+28     	; 0x14a0 <__addsf3x+0x9c>
    1484:	ba 0f       	add	r27, r26
    1486:	62 1f       	adc	r22, r18
    1488:	73 1f       	adc	r23, r19
    148a:	84 1f       	adc	r24, r20
    148c:	48 f4       	brcc	.+18     	; 0x14a0 <__addsf3x+0x9c>
    148e:	87 95       	ror	r24
    1490:	77 95       	ror	r23
    1492:	67 95       	ror	r22
    1494:	b7 95       	ror	r27
    1496:	f7 95       	ror	r31
    1498:	9e 3f       	cpi	r25, 0xFE	; 254
    149a:	08 f0       	brcs	.+2      	; 0x149e <__addsf3x+0x9a>
    149c:	b0 cf       	rjmp	.-160    	; 0x13fe <__addsf3+0x28>
    149e:	93 95       	inc	r25
    14a0:	88 0f       	add	r24, r24
    14a2:	08 f0       	brcs	.+2      	; 0x14a6 <__addsf3x+0xa2>
    14a4:	99 27       	eor	r25, r25
    14a6:	ee 0f       	add	r30, r30
    14a8:	97 95       	ror	r25
    14aa:	87 95       	ror	r24
    14ac:	08 95       	ret

000014ae <__cmpsf2>:
    14ae:	0e 94 0b 0b 	call	0x1616	; 0x1616 <__fp_cmp>
    14b2:	08 f4       	brcc	.+2      	; 0x14b6 <__cmpsf2+0x8>
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	08 95       	ret

000014b8 <__divsf3>:
    14b8:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <__divsf3x>
    14bc:	0c 94 46 0b 	jmp	0x168c	; 0x168c <__fp_round>
    14c0:	0e 94 3f 0b 	call	0x167e	; 0x167e <__fp_pscB>
    14c4:	58 f0       	brcs	.+22     	; 0x14dc <__divsf3+0x24>
    14c6:	0e 94 38 0b 	call	0x1670	; 0x1670 <__fp_pscA>
    14ca:	40 f0       	brcs	.+16     	; 0x14dc <__divsf3+0x24>
    14cc:	29 f4       	brne	.+10     	; 0x14d8 <__divsf3+0x20>
    14ce:	5f 3f       	cpi	r21, 0xFF	; 255
    14d0:	29 f0       	breq	.+10     	; 0x14dc <__divsf3+0x24>
    14d2:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <__fp_inf>
    14d6:	51 11       	cpse	r21, r1
    14d8:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__fp_szero>
    14dc:	0c 94 35 0b 	jmp	0x166a	; 0x166a <__fp_nan>

000014e0 <__divsf3x>:
    14e0:	0e 94 57 0b 	call	0x16ae	; 0x16ae <__fp_split3>
    14e4:	68 f3       	brcs	.-38     	; 0x14c0 <__divsf3+0x8>

000014e6 <__divsf3_pse>:
    14e6:	99 23       	and	r25, r25
    14e8:	b1 f3       	breq	.-20     	; 0x14d6 <__divsf3+0x1e>
    14ea:	55 23       	and	r21, r21
    14ec:	91 f3       	breq	.-28     	; 0x14d2 <__divsf3+0x1a>
    14ee:	95 1b       	sub	r25, r21
    14f0:	55 0b       	sbc	r21, r21
    14f2:	bb 27       	eor	r27, r27
    14f4:	aa 27       	eor	r26, r26
    14f6:	62 17       	cp	r22, r18
    14f8:	73 07       	cpc	r23, r19
    14fa:	84 07       	cpc	r24, r20
    14fc:	38 f0       	brcs	.+14     	; 0x150c <__divsf3_pse+0x26>
    14fe:	9f 5f       	subi	r25, 0xFF	; 255
    1500:	5f 4f       	sbci	r21, 0xFF	; 255
    1502:	22 0f       	add	r18, r18
    1504:	33 1f       	adc	r19, r19
    1506:	44 1f       	adc	r20, r20
    1508:	aa 1f       	adc	r26, r26
    150a:	a9 f3       	breq	.-22     	; 0x14f6 <__divsf3_pse+0x10>
    150c:	35 d0       	rcall	.+106    	; 0x1578 <__divsf3_pse+0x92>
    150e:	0e 2e       	mov	r0, r30
    1510:	3a f0       	brmi	.+14     	; 0x1520 <__divsf3_pse+0x3a>
    1512:	e0 e8       	ldi	r30, 0x80	; 128
    1514:	32 d0       	rcall	.+100    	; 0x157a <__divsf3_pse+0x94>
    1516:	91 50       	subi	r25, 0x01	; 1
    1518:	50 40       	sbci	r21, 0x00	; 0
    151a:	e6 95       	lsr	r30
    151c:	00 1c       	adc	r0, r0
    151e:	ca f7       	brpl	.-14     	; 0x1512 <__divsf3_pse+0x2c>
    1520:	2b d0       	rcall	.+86     	; 0x1578 <__divsf3_pse+0x92>
    1522:	fe 2f       	mov	r31, r30
    1524:	29 d0       	rcall	.+82     	; 0x1578 <__divsf3_pse+0x92>
    1526:	66 0f       	add	r22, r22
    1528:	77 1f       	adc	r23, r23
    152a:	88 1f       	adc	r24, r24
    152c:	bb 1f       	adc	r27, r27
    152e:	26 17       	cp	r18, r22
    1530:	37 07       	cpc	r19, r23
    1532:	48 07       	cpc	r20, r24
    1534:	ab 07       	cpc	r26, r27
    1536:	b0 e8       	ldi	r27, 0x80	; 128
    1538:	09 f0       	breq	.+2      	; 0x153c <__divsf3_pse+0x56>
    153a:	bb 0b       	sbc	r27, r27
    153c:	80 2d       	mov	r24, r0
    153e:	bf 01       	movw	r22, r30
    1540:	ff 27       	eor	r31, r31
    1542:	93 58       	subi	r25, 0x83	; 131
    1544:	5f 4f       	sbci	r21, 0xFF	; 255
    1546:	3a f0       	brmi	.+14     	; 0x1556 <__divsf3_pse+0x70>
    1548:	9e 3f       	cpi	r25, 0xFE	; 254
    154a:	51 05       	cpc	r21, r1
    154c:	78 f0       	brcs	.+30     	; 0x156c <__divsf3_pse+0x86>
    154e:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <__fp_inf>
    1552:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__fp_szero>
    1556:	5f 3f       	cpi	r21, 0xFF	; 255
    1558:	e4 f3       	brlt	.-8      	; 0x1552 <__divsf3_pse+0x6c>
    155a:	98 3e       	cpi	r25, 0xE8	; 232
    155c:	d4 f3       	brlt	.-12     	; 0x1552 <__divsf3_pse+0x6c>
    155e:	86 95       	lsr	r24
    1560:	77 95       	ror	r23
    1562:	67 95       	ror	r22
    1564:	b7 95       	ror	r27
    1566:	f7 95       	ror	r31
    1568:	9f 5f       	subi	r25, 0xFF	; 255
    156a:	c9 f7       	brne	.-14     	; 0x155e <__divsf3_pse+0x78>
    156c:	88 0f       	add	r24, r24
    156e:	91 1d       	adc	r25, r1
    1570:	96 95       	lsr	r25
    1572:	87 95       	ror	r24
    1574:	97 f9       	bld	r25, 7
    1576:	08 95       	ret
    1578:	e1 e0       	ldi	r30, 0x01	; 1
    157a:	66 0f       	add	r22, r22
    157c:	77 1f       	adc	r23, r23
    157e:	88 1f       	adc	r24, r24
    1580:	bb 1f       	adc	r27, r27
    1582:	62 17       	cp	r22, r18
    1584:	73 07       	cpc	r23, r19
    1586:	84 07       	cpc	r24, r20
    1588:	ba 07       	cpc	r27, r26
    158a:	20 f0       	brcs	.+8      	; 0x1594 <__divsf3_pse+0xae>
    158c:	62 1b       	sub	r22, r18
    158e:	73 0b       	sbc	r23, r19
    1590:	84 0b       	sbc	r24, r20
    1592:	ba 0b       	sbc	r27, r26
    1594:	ee 1f       	adc	r30, r30
    1596:	88 f7       	brcc	.-30     	; 0x157a <__divsf3_pse+0x94>
    1598:	e0 95       	com	r30
    159a:	08 95       	ret

0000159c <__floatunsisf>:
    159c:	e8 94       	clt
    159e:	09 c0       	rjmp	.+18     	; 0x15b2 <__floatsisf+0x12>

000015a0 <__floatsisf>:
    15a0:	97 fb       	bst	r25, 7
    15a2:	3e f4       	brtc	.+14     	; 0x15b2 <__floatsisf+0x12>
    15a4:	90 95       	com	r25
    15a6:	80 95       	com	r24
    15a8:	70 95       	com	r23
    15aa:	61 95       	neg	r22
    15ac:	7f 4f       	sbci	r23, 0xFF	; 255
    15ae:	8f 4f       	sbci	r24, 0xFF	; 255
    15b0:	9f 4f       	sbci	r25, 0xFF	; 255
    15b2:	99 23       	and	r25, r25
    15b4:	a9 f0       	breq	.+42     	; 0x15e0 <__floatsisf+0x40>
    15b6:	f9 2f       	mov	r31, r25
    15b8:	96 e9       	ldi	r25, 0x96	; 150
    15ba:	bb 27       	eor	r27, r27
    15bc:	93 95       	inc	r25
    15be:	f6 95       	lsr	r31
    15c0:	87 95       	ror	r24
    15c2:	77 95       	ror	r23
    15c4:	67 95       	ror	r22
    15c6:	b7 95       	ror	r27
    15c8:	f1 11       	cpse	r31, r1
    15ca:	f8 cf       	rjmp	.-16     	; 0x15bc <__floatsisf+0x1c>
    15cc:	fa f4       	brpl	.+62     	; 0x160c <__floatsisf+0x6c>
    15ce:	bb 0f       	add	r27, r27
    15d0:	11 f4       	brne	.+4      	; 0x15d6 <__floatsisf+0x36>
    15d2:	60 ff       	sbrs	r22, 0
    15d4:	1b c0       	rjmp	.+54     	; 0x160c <__floatsisf+0x6c>
    15d6:	6f 5f       	subi	r22, 0xFF	; 255
    15d8:	7f 4f       	sbci	r23, 0xFF	; 255
    15da:	8f 4f       	sbci	r24, 0xFF	; 255
    15dc:	9f 4f       	sbci	r25, 0xFF	; 255
    15de:	16 c0       	rjmp	.+44     	; 0x160c <__floatsisf+0x6c>
    15e0:	88 23       	and	r24, r24
    15e2:	11 f0       	breq	.+4      	; 0x15e8 <__floatsisf+0x48>
    15e4:	96 e9       	ldi	r25, 0x96	; 150
    15e6:	11 c0       	rjmp	.+34     	; 0x160a <__floatsisf+0x6a>
    15e8:	77 23       	and	r23, r23
    15ea:	21 f0       	breq	.+8      	; 0x15f4 <__floatsisf+0x54>
    15ec:	9e e8       	ldi	r25, 0x8E	; 142
    15ee:	87 2f       	mov	r24, r23
    15f0:	76 2f       	mov	r23, r22
    15f2:	05 c0       	rjmp	.+10     	; 0x15fe <__floatsisf+0x5e>
    15f4:	66 23       	and	r22, r22
    15f6:	71 f0       	breq	.+28     	; 0x1614 <__floatsisf+0x74>
    15f8:	96 e8       	ldi	r25, 0x86	; 134
    15fa:	86 2f       	mov	r24, r22
    15fc:	70 e0       	ldi	r23, 0x00	; 0
    15fe:	60 e0       	ldi	r22, 0x00	; 0
    1600:	2a f0       	brmi	.+10     	; 0x160c <__floatsisf+0x6c>
    1602:	9a 95       	dec	r25
    1604:	66 0f       	add	r22, r22
    1606:	77 1f       	adc	r23, r23
    1608:	88 1f       	adc	r24, r24
    160a:	da f7       	brpl	.-10     	; 0x1602 <__floatsisf+0x62>
    160c:	88 0f       	add	r24, r24
    160e:	96 95       	lsr	r25
    1610:	87 95       	ror	r24
    1612:	97 f9       	bld	r25, 7
    1614:	08 95       	ret

00001616 <__fp_cmp>:
    1616:	99 0f       	add	r25, r25
    1618:	00 08       	sbc	r0, r0
    161a:	55 0f       	add	r21, r21
    161c:	aa 0b       	sbc	r26, r26
    161e:	e0 e8       	ldi	r30, 0x80	; 128
    1620:	fe ef       	ldi	r31, 0xFE	; 254
    1622:	16 16       	cp	r1, r22
    1624:	17 06       	cpc	r1, r23
    1626:	e8 07       	cpc	r30, r24
    1628:	f9 07       	cpc	r31, r25
    162a:	c0 f0       	brcs	.+48     	; 0x165c <__fp_cmp+0x46>
    162c:	12 16       	cp	r1, r18
    162e:	13 06       	cpc	r1, r19
    1630:	e4 07       	cpc	r30, r20
    1632:	f5 07       	cpc	r31, r21
    1634:	98 f0       	brcs	.+38     	; 0x165c <__fp_cmp+0x46>
    1636:	62 1b       	sub	r22, r18
    1638:	73 0b       	sbc	r23, r19
    163a:	84 0b       	sbc	r24, r20
    163c:	95 0b       	sbc	r25, r21
    163e:	39 f4       	brne	.+14     	; 0x164e <__fp_cmp+0x38>
    1640:	0a 26       	eor	r0, r26
    1642:	61 f0       	breq	.+24     	; 0x165c <__fp_cmp+0x46>
    1644:	23 2b       	or	r18, r19
    1646:	24 2b       	or	r18, r20
    1648:	25 2b       	or	r18, r21
    164a:	21 f4       	brne	.+8      	; 0x1654 <__fp_cmp+0x3e>
    164c:	08 95       	ret
    164e:	0a 26       	eor	r0, r26
    1650:	09 f4       	brne	.+2      	; 0x1654 <__fp_cmp+0x3e>
    1652:	a1 40       	sbci	r26, 0x01	; 1
    1654:	a6 95       	lsr	r26
    1656:	8f ef       	ldi	r24, 0xFF	; 255
    1658:	81 1d       	adc	r24, r1
    165a:	81 1d       	adc	r24, r1
    165c:	08 95       	ret

0000165e <__fp_inf>:
    165e:	97 f9       	bld	r25, 7
    1660:	9f 67       	ori	r25, 0x7F	; 127
    1662:	80 e8       	ldi	r24, 0x80	; 128
    1664:	70 e0       	ldi	r23, 0x00	; 0
    1666:	60 e0       	ldi	r22, 0x00	; 0
    1668:	08 95       	ret

0000166a <__fp_nan>:
    166a:	9f ef       	ldi	r25, 0xFF	; 255
    166c:	80 ec       	ldi	r24, 0xC0	; 192
    166e:	08 95       	ret

00001670 <__fp_pscA>:
    1670:	00 24       	eor	r0, r0
    1672:	0a 94       	dec	r0
    1674:	16 16       	cp	r1, r22
    1676:	17 06       	cpc	r1, r23
    1678:	18 06       	cpc	r1, r24
    167a:	09 06       	cpc	r0, r25
    167c:	08 95       	ret

0000167e <__fp_pscB>:
    167e:	00 24       	eor	r0, r0
    1680:	0a 94       	dec	r0
    1682:	12 16       	cp	r1, r18
    1684:	13 06       	cpc	r1, r19
    1686:	14 06       	cpc	r1, r20
    1688:	05 06       	cpc	r0, r21
    168a:	08 95       	ret

0000168c <__fp_round>:
    168c:	09 2e       	mov	r0, r25
    168e:	03 94       	inc	r0
    1690:	00 0c       	add	r0, r0
    1692:	11 f4       	brne	.+4      	; 0x1698 <__fp_round+0xc>
    1694:	88 23       	and	r24, r24
    1696:	52 f0       	brmi	.+20     	; 0x16ac <__fp_round+0x20>
    1698:	bb 0f       	add	r27, r27
    169a:	40 f4       	brcc	.+16     	; 0x16ac <__fp_round+0x20>
    169c:	bf 2b       	or	r27, r31
    169e:	11 f4       	brne	.+4      	; 0x16a4 <__fp_round+0x18>
    16a0:	60 ff       	sbrs	r22, 0
    16a2:	04 c0       	rjmp	.+8      	; 0x16ac <__fp_round+0x20>
    16a4:	6f 5f       	subi	r22, 0xFF	; 255
    16a6:	7f 4f       	sbci	r23, 0xFF	; 255
    16a8:	8f 4f       	sbci	r24, 0xFF	; 255
    16aa:	9f 4f       	sbci	r25, 0xFF	; 255
    16ac:	08 95       	ret

000016ae <__fp_split3>:
    16ae:	57 fd       	sbrc	r21, 7
    16b0:	90 58       	subi	r25, 0x80	; 128
    16b2:	44 0f       	add	r20, r20
    16b4:	55 1f       	adc	r21, r21
    16b6:	59 f0       	breq	.+22     	; 0x16ce <__fp_splitA+0x10>
    16b8:	5f 3f       	cpi	r21, 0xFF	; 255
    16ba:	71 f0       	breq	.+28     	; 0x16d8 <__fp_splitA+0x1a>
    16bc:	47 95       	ror	r20

000016be <__fp_splitA>:
    16be:	88 0f       	add	r24, r24
    16c0:	97 fb       	bst	r25, 7
    16c2:	99 1f       	adc	r25, r25
    16c4:	61 f0       	breq	.+24     	; 0x16de <__fp_splitA+0x20>
    16c6:	9f 3f       	cpi	r25, 0xFF	; 255
    16c8:	79 f0       	breq	.+30     	; 0x16e8 <__fp_splitA+0x2a>
    16ca:	87 95       	ror	r24
    16cc:	08 95       	ret
    16ce:	12 16       	cp	r1, r18
    16d0:	13 06       	cpc	r1, r19
    16d2:	14 06       	cpc	r1, r20
    16d4:	55 1f       	adc	r21, r21
    16d6:	f2 cf       	rjmp	.-28     	; 0x16bc <__fp_split3+0xe>
    16d8:	46 95       	lsr	r20
    16da:	f1 df       	rcall	.-30     	; 0x16be <__fp_splitA>
    16dc:	08 c0       	rjmp	.+16     	; 0x16ee <__fp_splitA+0x30>
    16de:	16 16       	cp	r1, r22
    16e0:	17 06       	cpc	r1, r23
    16e2:	18 06       	cpc	r1, r24
    16e4:	99 1f       	adc	r25, r25
    16e6:	f1 cf       	rjmp	.-30     	; 0x16ca <__fp_splitA+0xc>
    16e8:	86 95       	lsr	r24
    16ea:	71 05       	cpc	r23, r1
    16ec:	61 05       	cpc	r22, r1
    16ee:	08 94       	sec
    16f0:	08 95       	ret

000016f2 <__fp_zero>:
    16f2:	e8 94       	clt

000016f4 <__fp_szero>:
    16f4:	bb 27       	eor	r27, r27
    16f6:	66 27       	eor	r22, r22
    16f8:	77 27       	eor	r23, r23
    16fa:	cb 01       	movw	r24, r22
    16fc:	97 f9       	bld	r25, 7
    16fe:	08 95       	ret

00001700 <__mulsf3>:
    1700:	0e 94 93 0b 	call	0x1726	; 0x1726 <__mulsf3x>
    1704:	0c 94 46 0b 	jmp	0x168c	; 0x168c <__fp_round>
    1708:	0e 94 38 0b 	call	0x1670	; 0x1670 <__fp_pscA>
    170c:	38 f0       	brcs	.+14     	; 0x171c <__mulsf3+0x1c>
    170e:	0e 94 3f 0b 	call	0x167e	; 0x167e <__fp_pscB>
    1712:	20 f0       	brcs	.+8      	; 0x171c <__mulsf3+0x1c>
    1714:	95 23       	and	r25, r21
    1716:	11 f0       	breq	.+4      	; 0x171c <__mulsf3+0x1c>
    1718:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <__fp_inf>
    171c:	0c 94 35 0b 	jmp	0x166a	; 0x166a <__fp_nan>
    1720:	11 24       	eor	r1, r1
    1722:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__fp_szero>

00001726 <__mulsf3x>:
    1726:	0e 94 57 0b 	call	0x16ae	; 0x16ae <__fp_split3>
    172a:	70 f3       	brcs	.-36     	; 0x1708 <__mulsf3+0x8>

0000172c <__mulsf3_pse>:
    172c:	95 9f       	mul	r25, r21
    172e:	c1 f3       	breq	.-16     	; 0x1720 <__mulsf3+0x20>
    1730:	95 0f       	add	r25, r21
    1732:	50 e0       	ldi	r21, 0x00	; 0
    1734:	55 1f       	adc	r21, r21
    1736:	62 9f       	mul	r22, r18
    1738:	f0 01       	movw	r30, r0
    173a:	72 9f       	mul	r23, r18
    173c:	bb 27       	eor	r27, r27
    173e:	f0 0d       	add	r31, r0
    1740:	b1 1d       	adc	r27, r1
    1742:	63 9f       	mul	r22, r19
    1744:	aa 27       	eor	r26, r26
    1746:	f0 0d       	add	r31, r0
    1748:	b1 1d       	adc	r27, r1
    174a:	aa 1f       	adc	r26, r26
    174c:	64 9f       	mul	r22, r20
    174e:	66 27       	eor	r22, r22
    1750:	b0 0d       	add	r27, r0
    1752:	a1 1d       	adc	r26, r1
    1754:	66 1f       	adc	r22, r22
    1756:	82 9f       	mul	r24, r18
    1758:	22 27       	eor	r18, r18
    175a:	b0 0d       	add	r27, r0
    175c:	a1 1d       	adc	r26, r1
    175e:	62 1f       	adc	r22, r18
    1760:	73 9f       	mul	r23, r19
    1762:	b0 0d       	add	r27, r0
    1764:	a1 1d       	adc	r26, r1
    1766:	62 1f       	adc	r22, r18
    1768:	83 9f       	mul	r24, r19
    176a:	a0 0d       	add	r26, r0
    176c:	61 1d       	adc	r22, r1
    176e:	22 1f       	adc	r18, r18
    1770:	74 9f       	mul	r23, r20
    1772:	33 27       	eor	r19, r19
    1774:	a0 0d       	add	r26, r0
    1776:	61 1d       	adc	r22, r1
    1778:	23 1f       	adc	r18, r19
    177a:	84 9f       	mul	r24, r20
    177c:	60 0d       	add	r22, r0
    177e:	21 1d       	adc	r18, r1
    1780:	82 2f       	mov	r24, r18
    1782:	76 2f       	mov	r23, r22
    1784:	6a 2f       	mov	r22, r26
    1786:	11 24       	eor	r1, r1
    1788:	9f 57       	subi	r25, 0x7F	; 127
    178a:	50 40       	sbci	r21, 0x00	; 0
    178c:	9a f0       	brmi	.+38     	; 0x17b4 <__mulsf3_pse+0x88>
    178e:	f1 f0       	breq	.+60     	; 0x17cc <__mulsf3_pse+0xa0>
    1790:	88 23       	and	r24, r24
    1792:	4a f0       	brmi	.+18     	; 0x17a6 <__mulsf3_pse+0x7a>
    1794:	ee 0f       	add	r30, r30
    1796:	ff 1f       	adc	r31, r31
    1798:	bb 1f       	adc	r27, r27
    179a:	66 1f       	adc	r22, r22
    179c:	77 1f       	adc	r23, r23
    179e:	88 1f       	adc	r24, r24
    17a0:	91 50       	subi	r25, 0x01	; 1
    17a2:	50 40       	sbci	r21, 0x00	; 0
    17a4:	a9 f7       	brne	.-22     	; 0x1790 <__mulsf3_pse+0x64>
    17a6:	9e 3f       	cpi	r25, 0xFE	; 254
    17a8:	51 05       	cpc	r21, r1
    17aa:	80 f0       	brcs	.+32     	; 0x17cc <__mulsf3_pse+0xa0>
    17ac:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <__fp_inf>
    17b0:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__fp_szero>
    17b4:	5f 3f       	cpi	r21, 0xFF	; 255
    17b6:	e4 f3       	brlt	.-8      	; 0x17b0 <__mulsf3_pse+0x84>
    17b8:	98 3e       	cpi	r25, 0xE8	; 232
    17ba:	d4 f3       	brlt	.-12     	; 0x17b0 <__mulsf3_pse+0x84>
    17bc:	86 95       	lsr	r24
    17be:	77 95       	ror	r23
    17c0:	67 95       	ror	r22
    17c2:	b7 95       	ror	r27
    17c4:	f7 95       	ror	r31
    17c6:	e7 95       	ror	r30
    17c8:	9f 5f       	subi	r25, 0xFF	; 255
    17ca:	c1 f7       	brne	.-16     	; 0x17bc <__mulsf3_pse+0x90>
    17cc:	fe 2b       	or	r31, r30
    17ce:	88 0f       	add	r24, r24
    17d0:	91 1d       	adc	r25, r1
    17d2:	96 95       	lsr	r25
    17d4:	87 95       	ror	r24
    17d6:	97 f9       	bld	r25, 7
    17d8:	08 95       	ret
    17da:	19 f4       	brne	.+6      	; 0x17e2 <__mulsf3_pse+0xb6>
    17dc:	16 f4       	brtc	.+4      	; 0x17e2 <__mulsf3_pse+0xb6>
    17de:	0c 94 35 0b 	jmp	0x166a	; 0x166a <__fp_nan>
    17e2:	0c 94 33 0c 	jmp	0x1866	; 0x1866 <__fp_mpack>

000017e6 <sqrt>:
    17e6:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fp_splitA>
    17ea:	b8 f3       	brcs	.-18     	; 0x17da <__mulsf3_pse+0xae>
    17ec:	99 23       	and	r25, r25
    17ee:	c9 f3       	breq	.-14     	; 0x17e2 <__mulsf3_pse+0xb6>
    17f0:	b6 f3       	brts	.-20     	; 0x17de <__mulsf3_pse+0xb2>
    17f2:	9f 57       	subi	r25, 0x7F	; 127
    17f4:	55 0b       	sbc	r21, r21
    17f6:	87 ff       	sbrs	r24, 7
    17f8:	0e 94 41 0c 	call	0x1882	; 0x1882 <__fp_norm2>
    17fc:	00 24       	eor	r0, r0
    17fe:	a0 e6       	ldi	r26, 0x60	; 96
    1800:	40 ea       	ldi	r20, 0xA0	; 160
    1802:	90 01       	movw	r18, r0
    1804:	80 58       	subi	r24, 0x80	; 128
    1806:	56 95       	lsr	r21
    1808:	97 95       	ror	r25
    180a:	28 f4       	brcc	.+10     	; 0x1816 <sqrt+0x30>
    180c:	80 5c       	subi	r24, 0xC0	; 192
    180e:	66 0f       	add	r22, r22
    1810:	77 1f       	adc	r23, r23
    1812:	88 1f       	adc	r24, r24
    1814:	20 f0       	brcs	.+8      	; 0x181e <sqrt+0x38>
    1816:	26 17       	cp	r18, r22
    1818:	37 07       	cpc	r19, r23
    181a:	48 07       	cpc	r20, r24
    181c:	30 f4       	brcc	.+12     	; 0x182a <sqrt+0x44>
    181e:	62 1b       	sub	r22, r18
    1820:	73 0b       	sbc	r23, r19
    1822:	84 0b       	sbc	r24, r20
    1824:	20 29       	or	r18, r0
    1826:	31 29       	or	r19, r1
    1828:	4a 2b       	or	r20, r26
    182a:	a6 95       	lsr	r26
    182c:	17 94       	ror	r1
    182e:	07 94       	ror	r0
    1830:	20 25       	eor	r18, r0
    1832:	31 25       	eor	r19, r1
    1834:	4a 27       	eor	r20, r26
    1836:	58 f7       	brcc	.-42     	; 0x180e <sqrt+0x28>
    1838:	66 0f       	add	r22, r22
    183a:	77 1f       	adc	r23, r23
    183c:	88 1f       	adc	r24, r24
    183e:	20 f0       	brcs	.+8      	; 0x1848 <sqrt+0x62>
    1840:	26 17       	cp	r18, r22
    1842:	37 07       	cpc	r19, r23
    1844:	48 07       	cpc	r20, r24
    1846:	30 f4       	brcc	.+12     	; 0x1854 <sqrt+0x6e>
    1848:	62 0b       	sbc	r22, r18
    184a:	73 0b       	sbc	r23, r19
    184c:	84 0b       	sbc	r24, r20
    184e:	20 0d       	add	r18, r0
    1850:	31 1d       	adc	r19, r1
    1852:	41 1d       	adc	r20, r1
    1854:	a0 95       	com	r26
    1856:	81 f7       	brne	.-32     	; 0x1838 <sqrt+0x52>
    1858:	b9 01       	movw	r22, r18
    185a:	84 2f       	mov	r24, r20
    185c:	91 58       	subi	r25, 0x81	; 129
    185e:	88 0f       	add	r24, r24
    1860:	96 95       	lsr	r25
    1862:	87 95       	ror	r24
    1864:	08 95       	ret

00001866 <__fp_mpack>:
    1866:	9f 3f       	cpi	r25, 0xFF	; 255
    1868:	31 f0       	breq	.+12     	; 0x1876 <__fp_mpack_finite+0xc>

0000186a <__fp_mpack_finite>:
    186a:	91 50       	subi	r25, 0x01	; 1
    186c:	20 f4       	brcc	.+8      	; 0x1876 <__fp_mpack_finite+0xc>
    186e:	87 95       	ror	r24
    1870:	77 95       	ror	r23
    1872:	67 95       	ror	r22
    1874:	b7 95       	ror	r27
    1876:	88 0f       	add	r24, r24
    1878:	91 1d       	adc	r25, r1
    187a:	96 95       	lsr	r25
    187c:	87 95       	ror	r24
    187e:	97 f9       	bld	r25, 7
    1880:	08 95       	ret

00001882 <__fp_norm2>:
    1882:	91 50       	subi	r25, 0x01	; 1
    1884:	50 40       	sbci	r21, 0x00	; 0
    1886:	66 0f       	add	r22, r22
    1888:	77 1f       	adc	r23, r23
    188a:	88 1f       	adc	r24, r24
    188c:	d2 f7       	brpl	.-12     	; 0x1882 <__fp_norm2>
    188e:	08 95       	ret

00001890 <printf>:
    1890:	a0 e0       	ldi	r26, 0x00	; 0
    1892:	b0 e0       	ldi	r27, 0x00	; 0
    1894:	ee e4       	ldi	r30, 0x4E	; 78
    1896:	fc e0       	ldi	r31, 0x0C	; 12
    1898:	0c 94 ff 0e 	jmp	0x1dfe	; 0x1dfe <__prologue_saves__+0x20>
    189c:	ae 01       	movw	r20, r28
    189e:	4b 5f       	subi	r20, 0xFB	; 251
    18a0:	5f 4f       	sbci	r21, 0xFF	; 255
    18a2:	fa 01       	movw	r30, r20
    18a4:	61 91       	ld	r22, Z+
    18a6:	71 91       	ld	r23, Z+
    18a8:	af 01       	movw	r20, r30
    18aa:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <__iob+0x2>
    18ae:	90 91 df 00 	lds	r25, 0x00DF	; 0x8000df <__iob+0x3>
    18b2:	0e 94 5e 0c 	call	0x18bc	; 0x18bc <vfprintf>
    18b6:	e2 e0       	ldi	r30, 0x02	; 2
    18b8:	0c 94 1b 0f 	jmp	0x1e36	; 0x1e36 <__epilogue_restores__+0x20>

000018bc <vfprintf>:
    18bc:	ab e0       	ldi	r26, 0x0B	; 11
    18be:	b0 e0       	ldi	r27, 0x00	; 0
    18c0:	e4 e6       	ldi	r30, 0x64	; 100
    18c2:	fc e0       	ldi	r31, 0x0C	; 12
    18c4:	0c 94 ef 0e 	jmp	0x1dde	; 0x1dde <__prologue_saves__>
    18c8:	6c 01       	movw	r12, r24
    18ca:	7b 01       	movw	r14, r22
    18cc:	8a 01       	movw	r16, r20
    18ce:	fc 01       	movw	r30, r24
    18d0:	17 82       	std	Z+7, r1	; 0x07
    18d2:	16 82       	std	Z+6, r1	; 0x06
    18d4:	83 81       	ldd	r24, Z+3	; 0x03
    18d6:	81 ff       	sbrs	r24, 1
    18d8:	cc c1       	rjmp	.+920    	; 0x1c72 <vfprintf+0x3b6>
    18da:	ce 01       	movw	r24, r28
    18dc:	01 96       	adiw	r24, 0x01	; 1
    18de:	3c 01       	movw	r6, r24
    18e0:	f6 01       	movw	r30, r12
    18e2:	93 81       	ldd	r25, Z+3	; 0x03
    18e4:	f7 01       	movw	r30, r14
    18e6:	93 fd       	sbrc	r25, 3
    18e8:	85 91       	lpm	r24, Z+
    18ea:	93 ff       	sbrs	r25, 3
    18ec:	81 91       	ld	r24, Z+
    18ee:	7f 01       	movw	r14, r30
    18f0:	88 23       	and	r24, r24
    18f2:	09 f4       	brne	.+2      	; 0x18f6 <vfprintf+0x3a>
    18f4:	ba c1       	rjmp	.+884    	; 0x1c6a <vfprintf+0x3ae>
    18f6:	85 32       	cpi	r24, 0x25	; 37
    18f8:	39 f4       	brne	.+14     	; 0x1908 <vfprintf+0x4c>
    18fa:	93 fd       	sbrc	r25, 3
    18fc:	85 91       	lpm	r24, Z+
    18fe:	93 ff       	sbrs	r25, 3
    1900:	81 91       	ld	r24, Z+
    1902:	7f 01       	movw	r14, r30
    1904:	85 32       	cpi	r24, 0x25	; 37
    1906:	29 f4       	brne	.+10     	; 0x1912 <vfprintf+0x56>
    1908:	b6 01       	movw	r22, r12
    190a:	90 e0       	ldi	r25, 0x00	; 0
    190c:	0e 94 55 0e 	call	0x1caa	; 0x1caa <fputc>
    1910:	e7 cf       	rjmp	.-50     	; 0x18e0 <vfprintf+0x24>
    1912:	91 2c       	mov	r9, r1
    1914:	21 2c       	mov	r2, r1
    1916:	31 2c       	mov	r3, r1
    1918:	ff e1       	ldi	r31, 0x1F	; 31
    191a:	f3 15       	cp	r31, r3
    191c:	d8 f0       	brcs	.+54     	; 0x1954 <vfprintf+0x98>
    191e:	8b 32       	cpi	r24, 0x2B	; 43
    1920:	79 f0       	breq	.+30     	; 0x1940 <vfprintf+0x84>
    1922:	38 f4       	brcc	.+14     	; 0x1932 <vfprintf+0x76>
    1924:	80 32       	cpi	r24, 0x20	; 32
    1926:	79 f0       	breq	.+30     	; 0x1946 <vfprintf+0x8a>
    1928:	83 32       	cpi	r24, 0x23	; 35
    192a:	a1 f4       	brne	.+40     	; 0x1954 <vfprintf+0x98>
    192c:	23 2d       	mov	r18, r3
    192e:	20 61       	ori	r18, 0x10	; 16
    1930:	1d c0       	rjmp	.+58     	; 0x196c <vfprintf+0xb0>
    1932:	8d 32       	cpi	r24, 0x2D	; 45
    1934:	61 f0       	breq	.+24     	; 0x194e <vfprintf+0x92>
    1936:	80 33       	cpi	r24, 0x30	; 48
    1938:	69 f4       	brne	.+26     	; 0x1954 <vfprintf+0x98>
    193a:	23 2d       	mov	r18, r3
    193c:	21 60       	ori	r18, 0x01	; 1
    193e:	16 c0       	rjmp	.+44     	; 0x196c <vfprintf+0xb0>
    1940:	83 2d       	mov	r24, r3
    1942:	82 60       	ori	r24, 0x02	; 2
    1944:	38 2e       	mov	r3, r24
    1946:	e3 2d       	mov	r30, r3
    1948:	e4 60       	ori	r30, 0x04	; 4
    194a:	3e 2e       	mov	r3, r30
    194c:	2a c0       	rjmp	.+84     	; 0x19a2 <vfprintf+0xe6>
    194e:	f3 2d       	mov	r31, r3
    1950:	f8 60       	ori	r31, 0x08	; 8
    1952:	1d c0       	rjmp	.+58     	; 0x198e <vfprintf+0xd2>
    1954:	37 fc       	sbrc	r3, 7
    1956:	2d c0       	rjmp	.+90     	; 0x19b2 <vfprintf+0xf6>
    1958:	20 ed       	ldi	r18, 0xD0	; 208
    195a:	28 0f       	add	r18, r24
    195c:	2a 30       	cpi	r18, 0x0A	; 10
    195e:	40 f0       	brcs	.+16     	; 0x1970 <vfprintf+0xb4>
    1960:	8e 32       	cpi	r24, 0x2E	; 46
    1962:	b9 f4       	brne	.+46     	; 0x1992 <vfprintf+0xd6>
    1964:	36 fc       	sbrc	r3, 6
    1966:	81 c1       	rjmp	.+770    	; 0x1c6a <vfprintf+0x3ae>
    1968:	23 2d       	mov	r18, r3
    196a:	20 64       	ori	r18, 0x40	; 64
    196c:	32 2e       	mov	r3, r18
    196e:	19 c0       	rjmp	.+50     	; 0x19a2 <vfprintf+0xe6>
    1970:	36 fe       	sbrs	r3, 6
    1972:	06 c0       	rjmp	.+12     	; 0x1980 <vfprintf+0xc4>
    1974:	8a e0       	ldi	r24, 0x0A	; 10
    1976:	98 9e       	mul	r9, r24
    1978:	20 0d       	add	r18, r0
    197a:	11 24       	eor	r1, r1
    197c:	92 2e       	mov	r9, r18
    197e:	11 c0       	rjmp	.+34     	; 0x19a2 <vfprintf+0xe6>
    1980:	ea e0       	ldi	r30, 0x0A	; 10
    1982:	2e 9e       	mul	r2, r30
    1984:	20 0d       	add	r18, r0
    1986:	11 24       	eor	r1, r1
    1988:	22 2e       	mov	r2, r18
    198a:	f3 2d       	mov	r31, r3
    198c:	f0 62       	ori	r31, 0x20	; 32
    198e:	3f 2e       	mov	r3, r31
    1990:	08 c0       	rjmp	.+16     	; 0x19a2 <vfprintf+0xe6>
    1992:	8c 36       	cpi	r24, 0x6C	; 108
    1994:	21 f4       	brne	.+8      	; 0x199e <vfprintf+0xe2>
    1996:	83 2d       	mov	r24, r3
    1998:	80 68       	ori	r24, 0x80	; 128
    199a:	38 2e       	mov	r3, r24
    199c:	02 c0       	rjmp	.+4      	; 0x19a2 <vfprintf+0xe6>
    199e:	88 36       	cpi	r24, 0x68	; 104
    19a0:	41 f4       	brne	.+16     	; 0x19b2 <vfprintf+0xf6>
    19a2:	f7 01       	movw	r30, r14
    19a4:	93 fd       	sbrc	r25, 3
    19a6:	85 91       	lpm	r24, Z+
    19a8:	93 ff       	sbrs	r25, 3
    19aa:	81 91       	ld	r24, Z+
    19ac:	7f 01       	movw	r14, r30
    19ae:	81 11       	cpse	r24, r1
    19b0:	b3 cf       	rjmp	.-154    	; 0x1918 <vfprintf+0x5c>
    19b2:	98 2f       	mov	r25, r24
    19b4:	9f 7d       	andi	r25, 0xDF	; 223
    19b6:	95 54       	subi	r25, 0x45	; 69
    19b8:	93 30       	cpi	r25, 0x03	; 3
    19ba:	28 f4       	brcc	.+10     	; 0x19c6 <vfprintf+0x10a>
    19bc:	0c 5f       	subi	r16, 0xFC	; 252
    19be:	1f 4f       	sbci	r17, 0xFF	; 255
    19c0:	9f e3       	ldi	r25, 0x3F	; 63
    19c2:	99 83       	std	Y+1, r25	; 0x01
    19c4:	0d c0       	rjmp	.+26     	; 0x19e0 <vfprintf+0x124>
    19c6:	83 36       	cpi	r24, 0x63	; 99
    19c8:	31 f0       	breq	.+12     	; 0x19d6 <vfprintf+0x11a>
    19ca:	83 37       	cpi	r24, 0x73	; 115
    19cc:	71 f0       	breq	.+28     	; 0x19ea <vfprintf+0x12e>
    19ce:	83 35       	cpi	r24, 0x53	; 83
    19d0:	09 f0       	breq	.+2      	; 0x19d4 <vfprintf+0x118>
    19d2:	59 c0       	rjmp	.+178    	; 0x1a86 <vfprintf+0x1ca>
    19d4:	21 c0       	rjmp	.+66     	; 0x1a18 <vfprintf+0x15c>
    19d6:	f8 01       	movw	r30, r16
    19d8:	80 81       	ld	r24, Z
    19da:	89 83       	std	Y+1, r24	; 0x01
    19dc:	0e 5f       	subi	r16, 0xFE	; 254
    19de:	1f 4f       	sbci	r17, 0xFF	; 255
    19e0:	88 24       	eor	r8, r8
    19e2:	83 94       	inc	r8
    19e4:	91 2c       	mov	r9, r1
    19e6:	53 01       	movw	r10, r6
    19e8:	13 c0       	rjmp	.+38     	; 0x1a10 <vfprintf+0x154>
    19ea:	28 01       	movw	r4, r16
    19ec:	f2 e0       	ldi	r31, 0x02	; 2
    19ee:	4f 0e       	add	r4, r31
    19f0:	51 1c       	adc	r5, r1
    19f2:	f8 01       	movw	r30, r16
    19f4:	a0 80       	ld	r10, Z
    19f6:	b1 80       	ldd	r11, Z+1	; 0x01
    19f8:	36 fe       	sbrs	r3, 6
    19fa:	03 c0       	rjmp	.+6      	; 0x1a02 <vfprintf+0x146>
    19fc:	69 2d       	mov	r22, r9
    19fe:	70 e0       	ldi	r23, 0x00	; 0
    1a00:	02 c0       	rjmp	.+4      	; 0x1a06 <vfprintf+0x14a>
    1a02:	6f ef       	ldi	r22, 0xFF	; 255
    1a04:	7f ef       	ldi	r23, 0xFF	; 255
    1a06:	c5 01       	movw	r24, r10
    1a08:	0e 94 4a 0e 	call	0x1c94	; 0x1c94 <strnlen>
    1a0c:	4c 01       	movw	r8, r24
    1a0e:	82 01       	movw	r16, r4
    1a10:	f3 2d       	mov	r31, r3
    1a12:	ff 77       	andi	r31, 0x7F	; 127
    1a14:	3f 2e       	mov	r3, r31
    1a16:	16 c0       	rjmp	.+44     	; 0x1a44 <vfprintf+0x188>
    1a18:	28 01       	movw	r4, r16
    1a1a:	22 e0       	ldi	r18, 0x02	; 2
    1a1c:	42 0e       	add	r4, r18
    1a1e:	51 1c       	adc	r5, r1
    1a20:	f8 01       	movw	r30, r16
    1a22:	a0 80       	ld	r10, Z
    1a24:	b1 80       	ldd	r11, Z+1	; 0x01
    1a26:	36 fe       	sbrs	r3, 6
    1a28:	03 c0       	rjmp	.+6      	; 0x1a30 <vfprintf+0x174>
    1a2a:	69 2d       	mov	r22, r9
    1a2c:	70 e0       	ldi	r23, 0x00	; 0
    1a2e:	02 c0       	rjmp	.+4      	; 0x1a34 <vfprintf+0x178>
    1a30:	6f ef       	ldi	r22, 0xFF	; 255
    1a32:	7f ef       	ldi	r23, 0xFF	; 255
    1a34:	c5 01       	movw	r24, r10
    1a36:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <strnlen_P>
    1a3a:	4c 01       	movw	r8, r24
    1a3c:	f3 2d       	mov	r31, r3
    1a3e:	f0 68       	ori	r31, 0x80	; 128
    1a40:	3f 2e       	mov	r3, r31
    1a42:	82 01       	movw	r16, r4
    1a44:	33 fc       	sbrc	r3, 3
    1a46:	1b c0       	rjmp	.+54     	; 0x1a7e <vfprintf+0x1c2>
    1a48:	82 2d       	mov	r24, r2
    1a4a:	90 e0       	ldi	r25, 0x00	; 0
    1a4c:	88 16       	cp	r8, r24
    1a4e:	99 06       	cpc	r9, r25
    1a50:	b0 f4       	brcc	.+44     	; 0x1a7e <vfprintf+0x1c2>
    1a52:	b6 01       	movw	r22, r12
    1a54:	80 e2       	ldi	r24, 0x20	; 32
    1a56:	90 e0       	ldi	r25, 0x00	; 0
    1a58:	0e 94 55 0e 	call	0x1caa	; 0x1caa <fputc>
    1a5c:	2a 94       	dec	r2
    1a5e:	f4 cf       	rjmp	.-24     	; 0x1a48 <vfprintf+0x18c>
    1a60:	f5 01       	movw	r30, r10
    1a62:	37 fc       	sbrc	r3, 7
    1a64:	85 91       	lpm	r24, Z+
    1a66:	37 fe       	sbrs	r3, 7
    1a68:	81 91       	ld	r24, Z+
    1a6a:	5f 01       	movw	r10, r30
    1a6c:	b6 01       	movw	r22, r12
    1a6e:	90 e0       	ldi	r25, 0x00	; 0
    1a70:	0e 94 55 0e 	call	0x1caa	; 0x1caa <fputc>
    1a74:	21 10       	cpse	r2, r1
    1a76:	2a 94       	dec	r2
    1a78:	21 e0       	ldi	r18, 0x01	; 1
    1a7a:	82 1a       	sub	r8, r18
    1a7c:	91 08       	sbc	r9, r1
    1a7e:	81 14       	cp	r8, r1
    1a80:	91 04       	cpc	r9, r1
    1a82:	71 f7       	brne	.-36     	; 0x1a60 <vfprintf+0x1a4>
    1a84:	e8 c0       	rjmp	.+464    	; 0x1c56 <vfprintf+0x39a>
    1a86:	84 36       	cpi	r24, 0x64	; 100
    1a88:	11 f0       	breq	.+4      	; 0x1a8e <vfprintf+0x1d2>
    1a8a:	89 36       	cpi	r24, 0x69	; 105
    1a8c:	41 f5       	brne	.+80     	; 0x1ade <vfprintf+0x222>
    1a8e:	f8 01       	movw	r30, r16
    1a90:	37 fe       	sbrs	r3, 7
    1a92:	07 c0       	rjmp	.+14     	; 0x1aa2 <vfprintf+0x1e6>
    1a94:	60 81       	ld	r22, Z
    1a96:	71 81       	ldd	r23, Z+1	; 0x01
    1a98:	82 81       	ldd	r24, Z+2	; 0x02
    1a9a:	93 81       	ldd	r25, Z+3	; 0x03
    1a9c:	0c 5f       	subi	r16, 0xFC	; 252
    1a9e:	1f 4f       	sbci	r17, 0xFF	; 255
    1aa0:	08 c0       	rjmp	.+16     	; 0x1ab2 <vfprintf+0x1f6>
    1aa2:	60 81       	ld	r22, Z
    1aa4:	71 81       	ldd	r23, Z+1	; 0x01
    1aa6:	07 2e       	mov	r0, r23
    1aa8:	00 0c       	add	r0, r0
    1aaa:	88 0b       	sbc	r24, r24
    1aac:	99 0b       	sbc	r25, r25
    1aae:	0e 5f       	subi	r16, 0xFE	; 254
    1ab0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ab2:	f3 2d       	mov	r31, r3
    1ab4:	ff 76       	andi	r31, 0x6F	; 111
    1ab6:	3f 2e       	mov	r3, r31
    1ab8:	97 ff       	sbrs	r25, 7
    1aba:	09 c0       	rjmp	.+18     	; 0x1ace <vfprintf+0x212>
    1abc:	90 95       	com	r25
    1abe:	80 95       	com	r24
    1ac0:	70 95       	com	r23
    1ac2:	61 95       	neg	r22
    1ac4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ac6:	8f 4f       	sbci	r24, 0xFF	; 255
    1ac8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aca:	f0 68       	ori	r31, 0x80	; 128
    1acc:	3f 2e       	mov	r3, r31
    1ace:	2a e0       	ldi	r18, 0x0A	; 10
    1ad0:	30 e0       	ldi	r19, 0x00	; 0
    1ad2:	a3 01       	movw	r20, r6
    1ad4:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <__ultoa_invert>
    1ad8:	88 2e       	mov	r8, r24
    1ada:	86 18       	sub	r8, r6
    1adc:	45 c0       	rjmp	.+138    	; 0x1b68 <vfprintf+0x2ac>
    1ade:	85 37       	cpi	r24, 0x75	; 117
    1ae0:	31 f4       	brne	.+12     	; 0x1aee <vfprintf+0x232>
    1ae2:	23 2d       	mov	r18, r3
    1ae4:	2f 7e       	andi	r18, 0xEF	; 239
    1ae6:	b2 2e       	mov	r11, r18
    1ae8:	2a e0       	ldi	r18, 0x0A	; 10
    1aea:	30 e0       	ldi	r19, 0x00	; 0
    1aec:	25 c0       	rjmp	.+74     	; 0x1b38 <vfprintf+0x27c>
    1aee:	93 2d       	mov	r25, r3
    1af0:	99 7f       	andi	r25, 0xF9	; 249
    1af2:	b9 2e       	mov	r11, r25
    1af4:	8f 36       	cpi	r24, 0x6F	; 111
    1af6:	c1 f0       	breq	.+48     	; 0x1b28 <vfprintf+0x26c>
    1af8:	18 f4       	brcc	.+6      	; 0x1b00 <vfprintf+0x244>
    1afa:	88 35       	cpi	r24, 0x58	; 88
    1afc:	79 f0       	breq	.+30     	; 0x1b1c <vfprintf+0x260>
    1afe:	b5 c0       	rjmp	.+362    	; 0x1c6a <vfprintf+0x3ae>
    1b00:	80 37       	cpi	r24, 0x70	; 112
    1b02:	19 f0       	breq	.+6      	; 0x1b0a <vfprintf+0x24e>
    1b04:	88 37       	cpi	r24, 0x78	; 120
    1b06:	21 f0       	breq	.+8      	; 0x1b10 <vfprintf+0x254>
    1b08:	b0 c0       	rjmp	.+352    	; 0x1c6a <vfprintf+0x3ae>
    1b0a:	e9 2f       	mov	r30, r25
    1b0c:	e0 61       	ori	r30, 0x10	; 16
    1b0e:	be 2e       	mov	r11, r30
    1b10:	b4 fe       	sbrs	r11, 4
    1b12:	0d c0       	rjmp	.+26     	; 0x1b2e <vfprintf+0x272>
    1b14:	fb 2d       	mov	r31, r11
    1b16:	f4 60       	ori	r31, 0x04	; 4
    1b18:	bf 2e       	mov	r11, r31
    1b1a:	09 c0       	rjmp	.+18     	; 0x1b2e <vfprintf+0x272>
    1b1c:	34 fe       	sbrs	r3, 4
    1b1e:	0a c0       	rjmp	.+20     	; 0x1b34 <vfprintf+0x278>
    1b20:	29 2f       	mov	r18, r25
    1b22:	26 60       	ori	r18, 0x06	; 6
    1b24:	b2 2e       	mov	r11, r18
    1b26:	06 c0       	rjmp	.+12     	; 0x1b34 <vfprintf+0x278>
    1b28:	28 e0       	ldi	r18, 0x08	; 8
    1b2a:	30 e0       	ldi	r19, 0x00	; 0
    1b2c:	05 c0       	rjmp	.+10     	; 0x1b38 <vfprintf+0x27c>
    1b2e:	20 e1       	ldi	r18, 0x10	; 16
    1b30:	30 e0       	ldi	r19, 0x00	; 0
    1b32:	02 c0       	rjmp	.+4      	; 0x1b38 <vfprintf+0x27c>
    1b34:	20 e1       	ldi	r18, 0x10	; 16
    1b36:	32 e0       	ldi	r19, 0x02	; 2
    1b38:	f8 01       	movw	r30, r16
    1b3a:	b7 fe       	sbrs	r11, 7
    1b3c:	07 c0       	rjmp	.+14     	; 0x1b4c <vfprintf+0x290>
    1b3e:	60 81       	ld	r22, Z
    1b40:	71 81       	ldd	r23, Z+1	; 0x01
    1b42:	82 81       	ldd	r24, Z+2	; 0x02
    1b44:	93 81       	ldd	r25, Z+3	; 0x03
    1b46:	0c 5f       	subi	r16, 0xFC	; 252
    1b48:	1f 4f       	sbci	r17, 0xFF	; 255
    1b4a:	06 c0       	rjmp	.+12     	; 0x1b58 <vfprintf+0x29c>
    1b4c:	60 81       	ld	r22, Z
    1b4e:	71 81       	ldd	r23, Z+1	; 0x01
    1b50:	80 e0       	ldi	r24, 0x00	; 0
    1b52:	90 e0       	ldi	r25, 0x00	; 0
    1b54:	0e 5f       	subi	r16, 0xFE	; 254
    1b56:	1f 4f       	sbci	r17, 0xFF	; 255
    1b58:	a3 01       	movw	r20, r6
    1b5a:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <__ultoa_invert>
    1b5e:	88 2e       	mov	r8, r24
    1b60:	86 18       	sub	r8, r6
    1b62:	fb 2d       	mov	r31, r11
    1b64:	ff 77       	andi	r31, 0x7F	; 127
    1b66:	3f 2e       	mov	r3, r31
    1b68:	36 fe       	sbrs	r3, 6
    1b6a:	0d c0       	rjmp	.+26     	; 0x1b86 <vfprintf+0x2ca>
    1b6c:	23 2d       	mov	r18, r3
    1b6e:	2e 7f       	andi	r18, 0xFE	; 254
    1b70:	a2 2e       	mov	r10, r18
    1b72:	89 14       	cp	r8, r9
    1b74:	58 f4       	brcc	.+22     	; 0x1b8c <vfprintf+0x2d0>
    1b76:	34 fe       	sbrs	r3, 4
    1b78:	0b c0       	rjmp	.+22     	; 0x1b90 <vfprintf+0x2d4>
    1b7a:	32 fc       	sbrc	r3, 2
    1b7c:	09 c0       	rjmp	.+18     	; 0x1b90 <vfprintf+0x2d4>
    1b7e:	83 2d       	mov	r24, r3
    1b80:	8e 7e       	andi	r24, 0xEE	; 238
    1b82:	a8 2e       	mov	r10, r24
    1b84:	05 c0       	rjmp	.+10     	; 0x1b90 <vfprintf+0x2d4>
    1b86:	b8 2c       	mov	r11, r8
    1b88:	a3 2c       	mov	r10, r3
    1b8a:	03 c0       	rjmp	.+6      	; 0x1b92 <vfprintf+0x2d6>
    1b8c:	b8 2c       	mov	r11, r8
    1b8e:	01 c0       	rjmp	.+2      	; 0x1b92 <vfprintf+0x2d6>
    1b90:	b9 2c       	mov	r11, r9
    1b92:	a4 fe       	sbrs	r10, 4
    1b94:	0f c0       	rjmp	.+30     	; 0x1bb4 <vfprintf+0x2f8>
    1b96:	fe 01       	movw	r30, r28
    1b98:	e8 0d       	add	r30, r8
    1b9a:	f1 1d       	adc	r31, r1
    1b9c:	80 81       	ld	r24, Z
    1b9e:	80 33       	cpi	r24, 0x30	; 48
    1ba0:	21 f4       	brne	.+8      	; 0x1baa <vfprintf+0x2ee>
    1ba2:	9a 2d       	mov	r25, r10
    1ba4:	99 7e       	andi	r25, 0xE9	; 233
    1ba6:	a9 2e       	mov	r10, r25
    1ba8:	09 c0       	rjmp	.+18     	; 0x1bbc <vfprintf+0x300>
    1baa:	a2 fe       	sbrs	r10, 2
    1bac:	06 c0       	rjmp	.+12     	; 0x1bba <vfprintf+0x2fe>
    1bae:	b3 94       	inc	r11
    1bb0:	b3 94       	inc	r11
    1bb2:	04 c0       	rjmp	.+8      	; 0x1bbc <vfprintf+0x300>
    1bb4:	8a 2d       	mov	r24, r10
    1bb6:	86 78       	andi	r24, 0x86	; 134
    1bb8:	09 f0       	breq	.+2      	; 0x1bbc <vfprintf+0x300>
    1bba:	b3 94       	inc	r11
    1bbc:	a3 fc       	sbrc	r10, 3
    1bbe:	11 c0       	rjmp	.+34     	; 0x1be2 <vfprintf+0x326>
    1bc0:	a0 fe       	sbrs	r10, 0
    1bc2:	06 c0       	rjmp	.+12     	; 0x1bd0 <vfprintf+0x314>
    1bc4:	b2 14       	cp	r11, r2
    1bc6:	88 f4       	brcc	.+34     	; 0x1bea <vfprintf+0x32e>
    1bc8:	28 0c       	add	r2, r8
    1bca:	92 2c       	mov	r9, r2
    1bcc:	9b 18       	sub	r9, r11
    1bce:	0e c0       	rjmp	.+28     	; 0x1bec <vfprintf+0x330>
    1bd0:	b2 14       	cp	r11, r2
    1bd2:	60 f4       	brcc	.+24     	; 0x1bec <vfprintf+0x330>
    1bd4:	b6 01       	movw	r22, r12
    1bd6:	80 e2       	ldi	r24, 0x20	; 32
    1bd8:	90 e0       	ldi	r25, 0x00	; 0
    1bda:	0e 94 55 0e 	call	0x1caa	; 0x1caa <fputc>
    1bde:	b3 94       	inc	r11
    1be0:	f7 cf       	rjmp	.-18     	; 0x1bd0 <vfprintf+0x314>
    1be2:	b2 14       	cp	r11, r2
    1be4:	18 f4       	brcc	.+6      	; 0x1bec <vfprintf+0x330>
    1be6:	2b 18       	sub	r2, r11
    1be8:	02 c0       	rjmp	.+4      	; 0x1bee <vfprintf+0x332>
    1bea:	98 2c       	mov	r9, r8
    1bec:	21 2c       	mov	r2, r1
    1bee:	a4 fe       	sbrs	r10, 4
    1bf0:	10 c0       	rjmp	.+32     	; 0x1c12 <vfprintf+0x356>
    1bf2:	b6 01       	movw	r22, r12
    1bf4:	80 e3       	ldi	r24, 0x30	; 48
    1bf6:	90 e0       	ldi	r25, 0x00	; 0
    1bf8:	0e 94 55 0e 	call	0x1caa	; 0x1caa <fputc>
    1bfc:	a2 fe       	sbrs	r10, 2
    1bfe:	17 c0       	rjmp	.+46     	; 0x1c2e <vfprintf+0x372>
    1c00:	a1 fc       	sbrc	r10, 1
    1c02:	03 c0       	rjmp	.+6      	; 0x1c0a <vfprintf+0x34e>
    1c04:	88 e7       	ldi	r24, 0x78	; 120
    1c06:	90 e0       	ldi	r25, 0x00	; 0
    1c08:	02 c0       	rjmp	.+4      	; 0x1c0e <vfprintf+0x352>
    1c0a:	88 e5       	ldi	r24, 0x58	; 88
    1c0c:	90 e0       	ldi	r25, 0x00	; 0
    1c0e:	b6 01       	movw	r22, r12
    1c10:	0c c0       	rjmp	.+24     	; 0x1c2a <vfprintf+0x36e>
    1c12:	8a 2d       	mov	r24, r10
    1c14:	86 78       	andi	r24, 0x86	; 134
    1c16:	59 f0       	breq	.+22     	; 0x1c2e <vfprintf+0x372>
    1c18:	a1 fe       	sbrs	r10, 1
    1c1a:	02 c0       	rjmp	.+4      	; 0x1c20 <vfprintf+0x364>
    1c1c:	8b e2       	ldi	r24, 0x2B	; 43
    1c1e:	01 c0       	rjmp	.+2      	; 0x1c22 <vfprintf+0x366>
    1c20:	80 e2       	ldi	r24, 0x20	; 32
    1c22:	a7 fc       	sbrc	r10, 7
    1c24:	8d e2       	ldi	r24, 0x2D	; 45
    1c26:	b6 01       	movw	r22, r12
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	0e 94 55 0e 	call	0x1caa	; 0x1caa <fputc>
    1c2e:	89 14       	cp	r8, r9
    1c30:	38 f4       	brcc	.+14     	; 0x1c40 <vfprintf+0x384>
    1c32:	b6 01       	movw	r22, r12
    1c34:	80 e3       	ldi	r24, 0x30	; 48
    1c36:	90 e0       	ldi	r25, 0x00	; 0
    1c38:	0e 94 55 0e 	call	0x1caa	; 0x1caa <fputc>
    1c3c:	9a 94       	dec	r9
    1c3e:	f7 cf       	rjmp	.-18     	; 0x1c2e <vfprintf+0x372>
    1c40:	8a 94       	dec	r8
    1c42:	f3 01       	movw	r30, r6
    1c44:	e8 0d       	add	r30, r8
    1c46:	f1 1d       	adc	r31, r1
    1c48:	80 81       	ld	r24, Z
    1c4a:	b6 01       	movw	r22, r12
    1c4c:	90 e0       	ldi	r25, 0x00	; 0
    1c4e:	0e 94 55 0e 	call	0x1caa	; 0x1caa <fputc>
    1c52:	81 10       	cpse	r8, r1
    1c54:	f5 cf       	rjmp	.-22     	; 0x1c40 <vfprintf+0x384>
    1c56:	22 20       	and	r2, r2
    1c58:	09 f4       	brne	.+2      	; 0x1c5c <vfprintf+0x3a0>
    1c5a:	42 ce       	rjmp	.-892    	; 0x18e0 <vfprintf+0x24>
    1c5c:	b6 01       	movw	r22, r12
    1c5e:	80 e2       	ldi	r24, 0x20	; 32
    1c60:	90 e0       	ldi	r25, 0x00	; 0
    1c62:	0e 94 55 0e 	call	0x1caa	; 0x1caa <fputc>
    1c66:	2a 94       	dec	r2
    1c68:	f6 cf       	rjmp	.-20     	; 0x1c56 <vfprintf+0x39a>
    1c6a:	f6 01       	movw	r30, r12
    1c6c:	86 81       	ldd	r24, Z+6	; 0x06
    1c6e:	97 81       	ldd	r25, Z+7	; 0x07
    1c70:	02 c0       	rjmp	.+4      	; 0x1c76 <vfprintf+0x3ba>
    1c72:	8f ef       	ldi	r24, 0xFF	; 255
    1c74:	9f ef       	ldi	r25, 0xFF	; 255
    1c76:	2b 96       	adiw	r28, 0x0b	; 11
    1c78:	e2 e1       	ldi	r30, 0x12	; 18
    1c7a:	0c 94 0b 0f 	jmp	0x1e16	; 0x1e16 <__epilogue_restores__>

00001c7e <strnlen_P>:
    1c7e:	fc 01       	movw	r30, r24
    1c80:	05 90       	lpm	r0, Z+
    1c82:	61 50       	subi	r22, 0x01	; 1
    1c84:	70 40       	sbci	r23, 0x00	; 0
    1c86:	01 10       	cpse	r0, r1
    1c88:	d8 f7       	brcc	.-10     	; 0x1c80 <strnlen_P+0x2>
    1c8a:	80 95       	com	r24
    1c8c:	90 95       	com	r25
    1c8e:	8e 0f       	add	r24, r30
    1c90:	9f 1f       	adc	r25, r31
    1c92:	08 95       	ret

00001c94 <strnlen>:
    1c94:	fc 01       	movw	r30, r24
    1c96:	61 50       	subi	r22, 0x01	; 1
    1c98:	70 40       	sbci	r23, 0x00	; 0
    1c9a:	01 90       	ld	r0, Z+
    1c9c:	01 10       	cpse	r0, r1
    1c9e:	d8 f7       	brcc	.-10     	; 0x1c96 <strnlen+0x2>
    1ca0:	80 95       	com	r24
    1ca2:	90 95       	com	r25
    1ca4:	8e 0f       	add	r24, r30
    1ca6:	9f 1f       	adc	r25, r31
    1ca8:	08 95       	ret

00001caa <fputc>:
    1caa:	0f 93       	push	r16
    1cac:	1f 93       	push	r17
    1cae:	cf 93       	push	r28
    1cb0:	df 93       	push	r29
    1cb2:	fb 01       	movw	r30, r22
    1cb4:	23 81       	ldd	r18, Z+3	; 0x03
    1cb6:	21 fd       	sbrc	r18, 1
    1cb8:	03 c0       	rjmp	.+6      	; 0x1cc0 <fputc+0x16>
    1cba:	8f ef       	ldi	r24, 0xFF	; 255
    1cbc:	9f ef       	ldi	r25, 0xFF	; 255
    1cbe:	2c c0       	rjmp	.+88     	; 0x1d18 <fputc+0x6e>
    1cc0:	22 ff       	sbrs	r18, 2
    1cc2:	16 c0       	rjmp	.+44     	; 0x1cf0 <fputc+0x46>
    1cc4:	46 81       	ldd	r20, Z+6	; 0x06
    1cc6:	57 81       	ldd	r21, Z+7	; 0x07
    1cc8:	24 81       	ldd	r18, Z+4	; 0x04
    1cca:	35 81       	ldd	r19, Z+5	; 0x05
    1ccc:	42 17       	cp	r20, r18
    1cce:	53 07       	cpc	r21, r19
    1cd0:	44 f4       	brge	.+16     	; 0x1ce2 <fputc+0x38>
    1cd2:	a0 81       	ld	r26, Z
    1cd4:	b1 81       	ldd	r27, Z+1	; 0x01
    1cd6:	9d 01       	movw	r18, r26
    1cd8:	2f 5f       	subi	r18, 0xFF	; 255
    1cda:	3f 4f       	sbci	r19, 0xFF	; 255
    1cdc:	31 83       	std	Z+1, r19	; 0x01
    1cde:	20 83       	st	Z, r18
    1ce0:	8c 93       	st	X, r24
    1ce2:	26 81       	ldd	r18, Z+6	; 0x06
    1ce4:	37 81       	ldd	r19, Z+7	; 0x07
    1ce6:	2f 5f       	subi	r18, 0xFF	; 255
    1ce8:	3f 4f       	sbci	r19, 0xFF	; 255
    1cea:	37 83       	std	Z+7, r19	; 0x07
    1cec:	26 83       	std	Z+6, r18	; 0x06
    1cee:	14 c0       	rjmp	.+40     	; 0x1d18 <fputc+0x6e>
    1cf0:	8b 01       	movw	r16, r22
    1cf2:	ec 01       	movw	r28, r24
    1cf4:	fb 01       	movw	r30, r22
    1cf6:	00 84       	ldd	r0, Z+8	; 0x08
    1cf8:	f1 85       	ldd	r31, Z+9	; 0x09
    1cfa:	e0 2d       	mov	r30, r0
    1cfc:	09 95       	icall
    1cfe:	89 2b       	or	r24, r25
    1d00:	e1 f6       	brne	.-72     	; 0x1cba <fputc+0x10>
    1d02:	d8 01       	movw	r26, r16
    1d04:	16 96       	adiw	r26, 0x06	; 6
    1d06:	8d 91       	ld	r24, X+
    1d08:	9c 91       	ld	r25, X
    1d0a:	17 97       	sbiw	r26, 0x07	; 7
    1d0c:	01 96       	adiw	r24, 0x01	; 1
    1d0e:	17 96       	adiw	r26, 0x07	; 7
    1d10:	9c 93       	st	X, r25
    1d12:	8e 93       	st	-X, r24
    1d14:	16 97       	sbiw	r26, 0x06	; 6
    1d16:	ce 01       	movw	r24, r28
    1d18:	df 91       	pop	r29
    1d1a:	cf 91       	pop	r28
    1d1c:	1f 91       	pop	r17
    1d1e:	0f 91       	pop	r16
    1d20:	08 95       	ret

00001d22 <__ultoa_invert>:
    1d22:	fa 01       	movw	r30, r20
    1d24:	aa 27       	eor	r26, r26
    1d26:	28 30       	cpi	r18, 0x08	; 8
    1d28:	51 f1       	breq	.+84     	; 0x1d7e <__ultoa_invert+0x5c>
    1d2a:	20 31       	cpi	r18, 0x10	; 16
    1d2c:	81 f1       	breq	.+96     	; 0x1d8e <__ultoa_invert+0x6c>
    1d2e:	e8 94       	clt
    1d30:	6f 93       	push	r22
    1d32:	6e 7f       	andi	r22, 0xFE	; 254
    1d34:	6e 5f       	subi	r22, 0xFE	; 254
    1d36:	7f 4f       	sbci	r23, 0xFF	; 255
    1d38:	8f 4f       	sbci	r24, 0xFF	; 255
    1d3a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d3c:	af 4f       	sbci	r26, 0xFF	; 255
    1d3e:	b1 e0       	ldi	r27, 0x01	; 1
    1d40:	3e d0       	rcall	.+124    	; 0x1dbe <__ultoa_invert+0x9c>
    1d42:	b4 e0       	ldi	r27, 0x04	; 4
    1d44:	3c d0       	rcall	.+120    	; 0x1dbe <__ultoa_invert+0x9c>
    1d46:	67 0f       	add	r22, r23
    1d48:	78 1f       	adc	r23, r24
    1d4a:	89 1f       	adc	r24, r25
    1d4c:	9a 1f       	adc	r25, r26
    1d4e:	a1 1d       	adc	r26, r1
    1d50:	68 0f       	add	r22, r24
    1d52:	79 1f       	adc	r23, r25
    1d54:	8a 1f       	adc	r24, r26
    1d56:	91 1d       	adc	r25, r1
    1d58:	a1 1d       	adc	r26, r1
    1d5a:	6a 0f       	add	r22, r26
    1d5c:	71 1d       	adc	r23, r1
    1d5e:	81 1d       	adc	r24, r1
    1d60:	91 1d       	adc	r25, r1
    1d62:	a1 1d       	adc	r26, r1
    1d64:	20 d0       	rcall	.+64     	; 0x1da6 <__ultoa_invert+0x84>
    1d66:	09 f4       	brne	.+2      	; 0x1d6a <__ultoa_invert+0x48>
    1d68:	68 94       	set
    1d6a:	3f 91       	pop	r19
    1d6c:	2a e0       	ldi	r18, 0x0A	; 10
    1d6e:	26 9f       	mul	r18, r22
    1d70:	11 24       	eor	r1, r1
    1d72:	30 19       	sub	r19, r0
    1d74:	30 5d       	subi	r19, 0xD0	; 208
    1d76:	31 93       	st	Z+, r19
    1d78:	de f6       	brtc	.-74     	; 0x1d30 <__ultoa_invert+0xe>
    1d7a:	cf 01       	movw	r24, r30
    1d7c:	08 95       	ret
    1d7e:	46 2f       	mov	r20, r22
    1d80:	47 70       	andi	r20, 0x07	; 7
    1d82:	40 5d       	subi	r20, 0xD0	; 208
    1d84:	41 93       	st	Z+, r20
    1d86:	b3 e0       	ldi	r27, 0x03	; 3
    1d88:	0f d0       	rcall	.+30     	; 0x1da8 <__ultoa_invert+0x86>
    1d8a:	c9 f7       	brne	.-14     	; 0x1d7e <__ultoa_invert+0x5c>
    1d8c:	f6 cf       	rjmp	.-20     	; 0x1d7a <__ultoa_invert+0x58>
    1d8e:	46 2f       	mov	r20, r22
    1d90:	4f 70       	andi	r20, 0x0F	; 15
    1d92:	40 5d       	subi	r20, 0xD0	; 208
    1d94:	4a 33       	cpi	r20, 0x3A	; 58
    1d96:	18 f0       	brcs	.+6      	; 0x1d9e <__ultoa_invert+0x7c>
    1d98:	49 5d       	subi	r20, 0xD9	; 217
    1d9a:	31 fd       	sbrc	r19, 1
    1d9c:	40 52       	subi	r20, 0x20	; 32
    1d9e:	41 93       	st	Z+, r20
    1da0:	02 d0       	rcall	.+4      	; 0x1da6 <__ultoa_invert+0x84>
    1da2:	a9 f7       	brne	.-22     	; 0x1d8e <__ultoa_invert+0x6c>
    1da4:	ea cf       	rjmp	.-44     	; 0x1d7a <__ultoa_invert+0x58>
    1da6:	b4 e0       	ldi	r27, 0x04	; 4
    1da8:	a6 95       	lsr	r26
    1daa:	97 95       	ror	r25
    1dac:	87 95       	ror	r24
    1dae:	77 95       	ror	r23
    1db0:	67 95       	ror	r22
    1db2:	ba 95       	dec	r27
    1db4:	c9 f7       	brne	.-14     	; 0x1da8 <__ultoa_invert+0x86>
    1db6:	00 97       	sbiw	r24, 0x00	; 0
    1db8:	61 05       	cpc	r22, r1
    1dba:	71 05       	cpc	r23, r1
    1dbc:	08 95       	ret
    1dbe:	9b 01       	movw	r18, r22
    1dc0:	ac 01       	movw	r20, r24
    1dc2:	0a 2e       	mov	r0, r26
    1dc4:	06 94       	lsr	r0
    1dc6:	57 95       	ror	r21
    1dc8:	47 95       	ror	r20
    1dca:	37 95       	ror	r19
    1dcc:	27 95       	ror	r18
    1dce:	ba 95       	dec	r27
    1dd0:	c9 f7       	brne	.-14     	; 0x1dc4 <__ultoa_invert+0xa2>
    1dd2:	62 0f       	add	r22, r18
    1dd4:	73 1f       	adc	r23, r19
    1dd6:	84 1f       	adc	r24, r20
    1dd8:	95 1f       	adc	r25, r21
    1dda:	a0 1d       	adc	r26, r0
    1ddc:	08 95       	ret

00001dde <__prologue_saves__>:
    1dde:	2f 92       	push	r2
    1de0:	3f 92       	push	r3
    1de2:	4f 92       	push	r4
    1de4:	5f 92       	push	r5
    1de6:	6f 92       	push	r6
    1de8:	7f 92       	push	r7
    1dea:	8f 92       	push	r8
    1dec:	9f 92       	push	r9
    1dee:	af 92       	push	r10
    1df0:	bf 92       	push	r11
    1df2:	cf 92       	push	r12
    1df4:	df 92       	push	r13
    1df6:	ef 92       	push	r14
    1df8:	ff 92       	push	r15
    1dfa:	0f 93       	push	r16
    1dfc:	1f 93       	push	r17
    1dfe:	cf 93       	push	r28
    1e00:	df 93       	push	r29
    1e02:	cd b7       	in	r28, 0x3d	; 61
    1e04:	de b7       	in	r29, 0x3e	; 62
    1e06:	ca 1b       	sub	r28, r26
    1e08:	db 0b       	sbc	r29, r27
    1e0a:	0f b6       	in	r0, 0x3f	; 63
    1e0c:	f8 94       	cli
    1e0e:	de bf       	out	0x3e, r29	; 62
    1e10:	0f be       	out	0x3f, r0	; 63
    1e12:	cd bf       	out	0x3d, r28	; 61
    1e14:	09 94       	ijmp

00001e16 <__epilogue_restores__>:
    1e16:	2a 88       	ldd	r2, Y+18	; 0x12
    1e18:	39 88       	ldd	r3, Y+17	; 0x11
    1e1a:	48 88       	ldd	r4, Y+16	; 0x10
    1e1c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e1e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e20:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e22:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e24:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e26:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e28:	b9 84       	ldd	r11, Y+9	; 0x09
    1e2a:	c8 84       	ldd	r12, Y+8	; 0x08
    1e2c:	df 80       	ldd	r13, Y+7	; 0x07
    1e2e:	ee 80       	ldd	r14, Y+6	; 0x06
    1e30:	fd 80       	ldd	r15, Y+5	; 0x05
    1e32:	0c 81       	ldd	r16, Y+4	; 0x04
    1e34:	1b 81       	ldd	r17, Y+3	; 0x03
    1e36:	aa 81       	ldd	r26, Y+2	; 0x02
    1e38:	b9 81       	ldd	r27, Y+1	; 0x01
    1e3a:	ce 0f       	add	r28, r30
    1e3c:	d1 1d       	adc	r29, r1
    1e3e:	0f b6       	in	r0, 0x3f	; 63
    1e40:	f8 94       	cli
    1e42:	de bf       	out	0x3e, r29	; 62
    1e44:	0f be       	out	0x3f, r0	; 63
    1e46:	cd bf       	out	0x3d, r28	; 61
    1e48:	ed 01       	movw	r28, r26
    1e4a:	08 95       	ret

00001e4c <_exit>:
    1e4c:	f8 94       	cli

00001e4e <__stop_program>:
    1e4e:	ff cf       	rjmp	.-2      	; 0x1e4e <__stop_program>
